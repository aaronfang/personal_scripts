///////////////////////////////////////////////////////////////
    if (`window -exists myWindow`)
         { 
         deleteUI myWindow;
         DelC();
         }        
 
    string $window = `window -title "LightBreak Tool" 
                     -iconName "IBL" 
                     -sizeable on
                     -titleBar on
                     -rtf on
                     -tbm off 
                     -menuBar true                  
                     -widthHeight 315 500
                     myWindow`;
                         
           
  columnLayout -columnAttach "both" 5 -rowSpacing 10 -columnWidth 250;          
   picture -w 302 -h 52 -i "icons/Lightbreaktool_header.xpm";
  
        
           frameLayout -w 300 -label "SpheresAttributes" -collapsable true -collapse false -borderStyle "etchedOut";
           rowColumnLayout -nc 3 -cw 1 83 -cw 2 48 -cw 3 100; 
           checkBox -label "FreeSphere" -onc "SwOn()" -ofc "SwOff()";
           checkBox -label "Hide" -onc "SphOn()" -ofc "SphOff()";
           checkBox -label "Minimize" -onc "MnOn()" -ofc "MxOff()"; 
           setParent ..;
           rowColumnLayout -nc 3 -cw 1 100 -cw 2 100 -cw 3 100 ;  
           button -label "2 Spheres" -h 50 -command "Sph2()";
           button -label "3 Spheres" -command "Sph3()";
           button -label "4 Spheres" -command "Sph4()";  
           
             setParent ..;
           setParent ..;
                    
           frameLayout -w 300 -label "SpheresPosition" -collapsable true -collapse false -borderStyle "etchedOut";          
formLayout
	-numberOfDivisions 100
	myForm;
radioButtonGrp
	-numberOfRadioButtons 2
	-label " "
	-labelArray2 "Left" "Right" 
	-changeCommand "LR();" 
	-select 2
	myLRGrp;
	
	radioButtonGrp
	-numberOfRadioButtons 2
	-label " "
	-labelArray2 "Top" "Down" 
	-changeCommand "TD();"
	-select 1
	myTDGrp;

formLayout
	-edit
	-attachForm myLRGrp "top" 10
	-attachForm myLRGrp "left" -100
	-attachForm myTDGrp "top" 40
	-attachForm myTDGrp "left" -100

	myForm;
showWindow MyWindow;  
/////////////////////////////////////////////////////////////////////////////  
global proc LR() 
{
 if (`radioButtonGrp -q -select myLRGrp` == 1)
     {	  
       if (`getAttr SphereGrp.scaleX` == 10)
              {
            
                setAttr "locatorCam.translateX" -0.048;
             	setAttr "SphereGrp.translateX" -0.47;
                setAttr "SphereGrp.translateY" 1.327;
                setAttr "SphereGrp.translateZ" 1.2;  
             
              }                       
/////////////////////////////////////////////////////////////////////////////              
               if (`getAttr SphereGrp.scaleX` == 5)
                {  
                  if (`getAttr SphereGrp.translateY` == 1.711)
                   {  
                     if (`getAttr SphereGrp.rotateZ` == 0)
                      {  
                setAttr "locatorCam.translateX" -0.048;
                setAttr "SphereGrp.translateX" -0.566;
                setAttr "SphereGrp.translateY" 1.711;
                setAttr "SphereGrp.translateZ" 1.2;
                
                     }
                   }
                }    
/////////////////////////////////////////////////////////////////////////////               
               if (`getAttr SphereGrp.scaleX` == 5)
                {  
                  if (`getAttr SphereGrp.translateY` == 0.938)
                   {  
                     if (`getAttr SphereGrp.rotateZ` == 0)
                      {  
                setAttr "locatorCam.translateX" -0.048;
                setAttr "SphereGrp.translateX" -0.566;
                setAttr "SphereGrp.translateY" 0.938;
                setAttr "SphereGrp.translateZ" 1.2;
                
                     }
                   }
                }                
/////////////////////////////////////////////////////////////////////////////                
           if (`getAttr SphereGrp.scaleX` == 5)
                {  
                  if (`getAttr SphereGrp.translateY` == 2.013)
                   {  
                     if (`getAttr SphereGrp.rotateZ` == 90)
                      {  
                setAttr "locatorCam.translateX" -0.048;
                setAttr "SphereGrp.translateX" -0.264;
                setAttr "SphereGrp.translateY" 2.013;
                setAttr "SphereGrp.translateZ" 1.2;
                
                     }
                   }
                }    
/////////////////////////////////////////////////////////////////////////////               
               if (`getAttr SphereGrp.scaleX` == 5)
                {  
                  if (`getAttr SphereGrp.translateY` == 0.639)
                   {  
                     if (`getAttr SphereGrp.rotateZ` == 90)
                      {  
                setAttr "locatorCam.translateX" -0.048;
                setAttr "SphereGrp.translateX" -0.264;
                setAttr "SphereGrp.translateY" 0.637;
                setAttr "SphereGrp.translateZ" 1.2;
                
                     }
                   }
                }   
/////////////////////////////////////////////////////////////////////////////  
inViewMessage -amg ("<span style=\"color:#82C99A;\">Info:</span> Sphere moved to the Left.") -dragKill -pos midCenterTop ;
  
}            
/////////////////////////////////////////////////////////////////////////////        
      
 if (`radioButtonGrp -q -select myLRGrp` == 2)
 {	  
       if (`getAttr SphereGrp.scaleX` == 10)
              {
            
                setAttr "locatorCam.translateX" 0.048;
             	setAttr "SphereGrp.translateX" -0.482;
                setAttr "SphereGrp.translateY" 1.327;
                setAttr "SphereGrp.translateZ" 1.2;  
             
              }                       
/////////////////////////////////////////////////////////////////////////////              
               if (`getAttr SphereGrp.scaleX` == 5)
                {  
                  if (`getAttr SphereGrp.translateY` == 1.711)
                   {  
                     if (`getAttr SphereGrp.rotateZ` == 0)
                      {  
                setAttr "locatorCam.translateX" 0.048;
                setAttr "SphereGrp.translateX" -0.384;
                setAttr "SphereGrp.translateY" 1.711;
                setAttr "SphereGrp.translateZ" 1.2;
                
                     }
                   }
                }    
/////////////////////////////////////////////////////////////////////////////               
               if (`getAttr SphereGrp.scaleX` == 5)
                {  
                  if (`getAttr SphereGrp.translateY` == 0.938)
                   {  
                     if (`getAttr SphereGrp.rotateZ` == 0)
                      {  
                setAttr "locatorCam.translateX" 0.048;
                setAttr "SphereGrp.translateX" -0.384;
                setAttr "SphereGrp.translateY" 0.938;
                setAttr "SphereGrp.translateZ" 1.2;
                
                     }
                   }
                }                
/////////////////////////////////////////////////////////////////////////////                
           if (`getAttr SphereGrp.scaleX` == 5)
                {  
                  if (`getAttr SphereGrp.translateY` == 2.013)
                   {  
                     if (`getAttr SphereGrp.rotateZ` == 90)
                      {  
                setAttr "locatorCam.translateX" 0.048;
                setAttr "SphereGrp.translateX" -0.688;
                setAttr "SphereGrp.translateY" 2.013;
                setAttr "SphereGrp.translateZ" 1.2;
                
                     }
                   }
                }    
/////////////////////////////////////////////////////////////////////////////               
               if (`getAttr SphereGrp.scaleX` == 5)
                {  
                  if (`getAttr SphereGrp.translateY` == 0.637)
                   {  
                     if (`getAttr SphereGrp.rotateZ` == 90)
                      {  
                setAttr "locatorCam.translateX" 0.048;
                setAttr "SphereGrp.translateX" -0.689;
                setAttr "SphereGrp.translateY" 0.639;
                setAttr "SphereGrp.translateZ" 1.2;
                
                     }
                   }
                }   
/////////////////////////////////////////////////////////////////////////////    
inViewMessage -amg ("<span style=\"color:#82C99A;\">Info:</span> Sphere moved to the Right.") -dragKill -pos midCenterTop ;

}      
/////////////////////////////////////////////////////////////////////////////  
}    
/////////////////////////////////////////////////////////////////////////////         	

 	global proc TD() 
 	{

           if (`radioButtonGrp -q -select myTDGrp` == 1)
 	        { 
/////////////////////////////////////////////////////////////////////////////
             if (`getAttr SphereGrp.scaleX` == 10)
              {
            print "Please, Put Minimize Button ON for change the Height of the Sphere";
            inViewMessage -amg ("<span style=\"color:#82C99A;\">Info:</span> Please, Put Minimize Button ON for change the Height of the Sphere.") -dragKill -pos midCenterTop ;
              }                       
/////////////////////////////////////////////////////////////////////////////              
               if (`getAttr SphereGrp.scaleX` == 5)
                {  
                  if (`getAttr locatorCam.translateX` == 0.048)
                   {  
                     if (`getAttr SphereGrp.rotateZ` == 0)
                      {  
                
                setAttr "SphereGrp.translateX" -0.384;
                setAttr "SphereGrp.translateY" 1.711;
                setAttr "SphereGrp.translateZ" 1.2;
                
                     }
                   }
                }    
/////////////////////////////////////////////////////////////////////////////               
           if (`getAttr SphereGrp.scaleX` == 5)
                {  
                  if (`getAttr locatorCam.translateX` == -0.048)
                   {  
                     if (`getAttr SphereGrp.rotateZ` == 0)
                      {  
                
                setAttr "SphereGrp.translateX" -0.566;
                setAttr "SphereGrp.translateY" 1.711;
                setAttr "SphereGrp.translateZ" 1.2;
                
                     }
                   }
                }               
/////////////////////////////////////////////////////////////////////////////                
           if (`getAttr SphereGrp.scaleX` == 5)
                {  
                  if (`getAttr locatorCam.translateX` == 0.048)
                   {  
                     if (`getAttr SphereGrp.rotateZ` == 90)
                      {  
                setAttr "SphereGrp.translateX" -0.688;
                setAttr "SphereGrp.translateY" 2.013;
                setAttr "SphereGrp.translateZ" 1.2;
                
                     }
                   }
                }    
/////////////////////////////////////////////////////////////////////////////               
               if (`getAttr SphereGrp.scaleX` == 5)
                {  
                  if (`getAttr locatorCam.translateX` == -0.048)
                   {  
                     if (`getAttr SphereGrp.rotateZ` == 90)
                      {  
                setAttr "SphereGrp.translateX" -0.264;
                setAttr "SphereGrp.translateY" 2.013;
                setAttr "SphereGrp.translateZ" 1.2;
                
                     }
                   }
                }   
/////////////////////////////////////////////////////////////////////////////    
inViewMessage -amg ("<span style=\"color:#82C99A;\">Info:</span> Sphere moved to the Top.") -dragKill -pos midCenterTop ;

 }      
///////////////////////////////////////////////////////////////////////////// 
       
 if (`radioButtonGrp -q -select myTDGrp` == 2)
      {
/////////////////////////////////////////////////////////////////////////////
       if (`getAttr SphereGrp.scaleX` == 10)
              {
            print "Please, Put Minimize Button ON for change the Height of the Sphere";
              }                       
/////////////////////////////////////////////////////////////////////////////              
               if (`getAttr SphereGrp.scaleX` == 5)
                {  
                  if (`getAttr locatorCam.translateX` == 0.048)
                   {  
                     if (`getAttr SphereGrp.rotateZ` == 0)
                      {  
                
                setAttr "SphereGrp.translateX" -0.384;
                setAttr "SphereGrp.translateY" 0.938;
                setAttr "SphereGrp.translateZ" 1.2;
                
                     }
                   }
                }    
/////////////////////////////////////////////////////////////////////////////               
           if (`getAttr SphereGrp.scaleX` == 5)
                {  
                  if (`getAttr locatorCam.translateX` == -0.048)
                   {  
                     if (`getAttr SphereGrp.rotateZ` == 0)
                      {  
                
                setAttr "SphereGrp.translateX" -0.566;
                setAttr "SphereGrp.translateY" 0.938;
                setAttr "SphereGrp.translateZ" 1.2;
                
                     }
                   }
                }               
/////////////////////////////////////////////////////////////////////////////                
           if (`getAttr SphereGrp.scaleX` == 5)
                {  
                  if (`getAttr locatorCam.translateX` == 0.048)
                   {  
                     if (`getAttr SphereGrp.rotateZ` == 90)
                      {  
                setAttr "SphereGrp.translateX" -0.688;
                setAttr "SphereGrp.translateY" 0.639;
                setAttr "SphereGrp.translateZ" 1.2;
                
                     }
                   }
                }    
/////////////////////////////////////////////////////////////////////////////               
               if (`getAttr SphereGrp.scaleX` == 5)
                {  
                  if (`getAttr locatorCam.translateX` == -0.048)
                   {  
                     if (`getAttr SphereGrp.rotateZ` == 90)
                      {  
                setAttr "SphereGrp.translateX" -0.264;
                setAttr "SphereGrp.translateY" 0.637;
                setAttr "SphereGrp.translateZ" 1.2;
                
                     }
                   }
                }   
/////////////////////////////////////////////////////////////////////////////    
inViewMessage -amg ("<span style=\"color:#82C99A;\">Info:</span> Sphere moved to the Down.") -dragKill -pos midCenterTop ;

}      
/////////////////////////////////////////////////////////////////////////////  
  }

           setParent ..;
             
           rowColumnLayout -nc 2 -cw 1 154 -cw 2 123; 
           checkBox 
           -label "RotateSphere 90 +" 
           -onc "RotiOn()" 
           -ofc "RotiOff()" 
           RotaSphere;
  
             setParent ..;
           setParent ..;

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////          
          frameLayout -w 300 -label "CycloAttributes" -collapsable true -collapse true -borderStyle "etchedOut";
          rowColumnLayout -nc 3 -cw 1 83 -cw 2 70  -cw 3 83; 
          checkBox -label "CycloClassic" -onc "CycloCOn()" -ofc "CycloCOff()" CycloC;
          checkBox -label "CycloBox" -onc "CycloBOn()" -ofc "CycloBOff()" CycloB;
          checkBox -label "CycloCylinder" -onc "CycloCyOn()" -ofc "CycloCyOff()" CycloCy;

            setParent ..;
          setParent ..;
          
          
          
          
           frameLayout -w 300 -label "CamFocal" -collapsable true -collapse true  -borderStyle "etchedOut";            
           rowColumnLayout -nc 3 -cw 1 100 -cw 2 100 -cw 3 100;
           button -label "35mm" -h 50 -command "Cam35()";
           button -label "50mm" -command "Cam50()";
           button -label "85mm" -command "Cam85()";
             setParent ..;
           setParent ..;
      
         
           frameLayout -w 300 -label "Render" -collapsable true -collapse true -borderStyle "etchedOut";
           rowColumnLayout -nc 3 -cw 1 100 -cw 2 100 -cw 3 100 -cw 4 200;
           button -label "MentalRay" -h 50 -command "MR()";                     
           button -label "Vray" -command "VR()";
           button -label "Arnold" -command "AR()";        
           button -label "Reload!"-h 25 -w 300 -command "Reload()";          
             setParent ..;
           setParent ..;
          
           
           frameLayout -w 300 -pma -label "Switch" -collapsable true -collapse false -borderStyle "etchedOut";
           rowColumnLayout -nc 2  -cw 1 150 -cw 2 150;	
           button -label "Lights" -h 25 -command "SwitchL()";	
           button -label "Meshes" -h 25 -command "SwitchM()";
           button -label "Add in MeshesGrp ( please select meshes before clic"-h 50 - w 300 -command "AddMsh()"; 
           /*button -label "Reset_IBL SSK"-h 50 - w 150 -command "zeroR()"; */  
             setParent ..;
           setParent ..;
          
             
           frameLayout -w 300 -label "Lights" -collapsable true -collapse false -borderStyle "etchedOut";
           rowColumnLayout -nc 3 -cw 1 100 -cw 2 100 -cw 3 100;
           button -bgc .2 .4 .6 -label "IBL" -h 50 -command "IBL()";
           button -bgc .2 .4 .6 -label "Sun&Sky" -command "SSK()";
           button -bgc .2 .4 .6 -label "LIGHTS" -command "LIGHTS()";
             setParent ..;
           setParent ..;
          
          
          
           frameLayout -w 300 -label "Parent" -collapsable true -collapse true -borderStyle "etchedOut";
           rowColumnLayout -nc 2 -cw 1 150 -cw 2 150;
           button -label "GROUP" -command "Grp()";
           button -label "UNGROUP" -command "UNGrp()";
             setParent ..;
           setParent ..;
         
       
           frameLayout -w 300 -pma -label "FrameRange" -collapsable true -collapse true -borderStyle "etchedOut";
           rowColumnLayout -nc 3  -cw 1 100 -cw 2 100 -cw 3 100 -cw 4 100 -cw 5 100 -cw 6 100;	
           button -label "2sec"-h 25 -command "Alpha()";
           button -label "4sec"-h 25 -command "Beta()";
           button -label "5sec"-h 25 -command "Charly()";
           button -label "6sec"-h 25-command "Delta()";
           button -label "8sec"-h 25 -command "Echo()";
           button -label "10sec"-h 25 -command "Fox()";  
       /*  button -label "BatchRender!"-h 50 - w 300 -command "cyan()"; */    		                       
             setParent ..;
           setParent ..;
          
         
           frameLayout -w 300 -pma -label "FrameReference" -collapsable true -collapse true -borderStyle "etchedOut";
           rowColumnLayout -nc 3  -cw 1 100 -cw 2 100 -cw 3 100 -cw 4 300;	
           button -label "4Pics"-h 25 -command "green()";
           button -label "8Pics"-h 25 -command "blue()";
           button -label "16Pics"-h 25 -command "red()";
           button -label "RenderView!"-h 50 - w 300 -command "yellow()";                      
             setParent ..;
           setParent ..;

           
           
          
           frameLayout -w 300 -label "EXIT" -collapsable false -collapse true  -borderStyle "etchedOut"
            -collapsable false
    		-collapse false;
           rowColumnLayout -nc 1 -cw 1 300 ;   
        /* button -label "Thanks" -h 100 -command ( "deleteUI -window " + $window ); */   
           button -label "No Thanks"  -bgc .8 .0 .2 -h 25 -command ( "deleteUI -window " + $window + "; DelC()");       
             setParent ..;
           setParent ..;
       

           showWindow $window;
           setParent ..;
 ///////////////////////////////////////////////////////////////////////////////////////////////////
                   if ( `objExists "Locator_Tool"` )
                    {
                     currentTime 1 ;
                     CBdeleteConnection "Locator_Tool.ry";
                    }else{   
                         spaceLocator -p 0 0 0;
                         rename "Locator_Tool"; 
                         setAttr "Locator_ToolShape.visibility" 0; 
                        } 
     
    OutlinerWindow;
    evalDeferred "showWindow outlinerPanel1Window;";
    setAttr "defaultResolution.width" 1920;
    setAttr "defaultResolution.height" 1080;
    setAttr "defaultResolution.aspectLock" 1;
    setAttr defaultResolution.aspectLock true;
    
   
    if ( `objExists "IBL_RENDER"` )
     {
      select "IBL_RENDER";
     }else{
           camera -centerOfInterest 5 -focalLength 35 -lensSqueezeRatio 1 -cameraScale 1 -horizontalFilmAperture 1.41732 -horizontalFilmOffset 0 -verticalFilmAperture 0.94488 -verticalFilmOffset 0 -filmFit Fill -overscan 1 -motionBlur 0 -shutterAngle 144 -nearClipPlane 0.1 -farClipPlane 10000 -orthographic 0 -orthographicWidth 30 -panZoomEnabled 0 -horizontalPan 0 -verticalPan 0 -zoom 1; objectMoveCommand; cameraMakeNode 1 "";
           rename "IBL_RENDER";
          }
    
    setAttr "frontShape.renderable" 0;
    setAttr "perspShape.renderable" 0;
    setAttr "sideShape.renderable" 0;
    setAttr "topShape.renderable" 0;
   

    setAttr "IBL_RENDERShape.renderable" 1;
    modelEditor -e -grid true modelPanel4;
    ///////////////////////////////////////////////////////
global proc DelC()
{
        
               /* if ( `objExists "WorkSpace"` )
                   {
                    select Locator_Tool;
                    select -add WorkSpace ;
                    parent;
                    }else{
                         select Locator_Tool;
                         Group;
                         rename "WorkSpace";
                         } */
                     
                   if ( `objExists "Locator_Tool"` )
                    {
                     currentTime 1 ;
                     CBdeleteConnection "Locator_Tool.ry";
                     }else{   
                           select -cl;
                          } 
                
             select ChromeSphere; 
             select -add "Meshes" ;
             parent;
             select -cl;
         
             select MatteSphere ;
             select -add"Locator_Tool";
             parent;
             select -cl;
         
             select GlassSphere ;
             select -add"LIGHTS_Grp";
             parent;
             select -cl;
         
             select `listRelatives -c -path "LIGHTS_Grp"`;
             parent -world; 
         
             select `listRelatives -c -path "Meshes"`; 
             parent -world; 
         
             select `listRelatives -c -path "Locator_Tool"`;
             parent -world; 
    
               delete CYCLO;
              delete cycloClassic; 
             delete cycloSquare;
            delete Locator_Tool;
           delete IBL_RENDER;
          delete GlassSphere;
         delete MatteSphere;
        delete ChromeSphere;
         delete Chrome_Mtl;
         delete Matte_Mtl;
          delete Glass_Mtl;
           delete Metal_Mtl;
            delete IBL_SPHERE;
             delete Meshes;
              delete LIGHTS_Grp;
        
                if ( `objExists "locatorSphere"` )
                  {
                   delete "locatorSphere";
                  }      
                 if ( `objExists "IBL_Grp"` )
                  {
                   delete "IBL_Grp";
                  } 
                 if ( `objExists "SSK_Grp"` )
                  {
                   delete "SSK_Grp";
                  } 
                 if ( `objExists "SSK_AR"` )
                  {
                   delete "SSK_AR";
                  } 
                 if ( `objExists "IBL_MR"` )
                  {
                   delete "IBL_MR";
                  } 
                 if ( `objExists "IBL_VR"` )
                  {
                   delete "IBL_VR";
                  } 
                 if ( `objExists "CycloGrp"` )
                  {
                   delete "CycloGrp";
                  } 
       
print "All Stuff Deleted & Lights parent to the WORLD ";
inViewMessage -amg ("<span style=\"color:#82C99A;\">Info:</span> All Stuff Deleted & Lights/Meshes parent to the WORLD.") -dragKill -pos midCenterTop ;

}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
   if ( `objExists "Locator_Tool"` )
    {
     delete "Locator_Tool";
    }
   if ( `objExists "cycloBox"` )
    {
     delete "cycloBox";
    }
   if ( `objExists "cycloClassic1"` )
    {
     delete "cycloClassic1";
    }
   if ( `objExists "CYCLO"` )
    {
     delete "CYCLO";
    }
   if ( `objExists "MatteSphere"` )
    {
     delete "MatteSphere";
    }
   if ( `objExists "ChromeSphere"` )
    {
     delete "ChromeSphere";
    }
   if ( `objExists "GlassSphere"` )
    {
     delete "GlassSphere";
    }
   if ( `objExists "MetalSphere"` )
    {
     delete "MetalSphere";
    }
   if ( `objExists "SphereGrp"` )
    {
     delete "SphereGrp";
    }
   if ( `objExists "LIGHTS_Grp"` )
    {
     delete "LIGHTS_Grp";
    }
   if ( `objExists "Meshes"` )
    {
     delete "Meshes";
    }
   

/////////////////////////////////MENTAL_RAY//////////////////////////////////////////
global proc MR()
{

                setAttr "defaultRenderGlobals.currentRenderer" -type "string" "mentalRay";
/////////////////////////////////SHADING//////////////////////////////////////////
                if ( `objExists "Chrome_Mtl"` )
                 {
                  delete "Chrome_Mtl";
                 }
                if ( `objExists "Matte_Mtl"` )
                 {
                  delete "Matte_Mtl";
                 }
               if ( `objExists "Glass_Mtl"` )
                {
                 delete "Glass_Mtl";
                }
               if ( `objExists "Metal_Mtl"` )
                {
                 delete "Metal_Mtl";
                }
/////////////////////////////////CHROME//////////////////////////////////////////
    shadingNode -asShader blinn;
    rename "Chrome_Mtl";
    setAttr "Chrome_Mtl.color" -type double3 0 0 0 ;
    setAttr "Chrome_Mtl.reflectivity" 1;
    setAttr "Chrome_Mtl.specularRollOff" 1;
    setAttr "Chrome_Mtl.eccentricity" 0.0854615;
    setAttr "Chrome_Mtl.specularColor" -type double3 1 1 1 ;
    select -r ChromeSphere ;
    hyperShade -assign Chrome_Mtl;
    select -cl ;
/////////////////////MATTE///////////////////////
    shadingNode -asShader blinn;
    rename "Matte_Mtl";
    setAttr "Matte_Mtl.eccentricity" 0;
    setAttr "Matte_Mtl.specularRollOff" 0.598291;
    setAttr "Matte_Mtl.reflectivity" 0;
    setAttr "Matte_Mtl.specularRollOff" 0;
    select -r MatteSphere ;
    hyperShade -assign Matte_Mtl;
    select -cl ;
/////////////////////////////GLASS///////////////////////
    mrCreateCustomNode -asShader "" mia_material_x_passes;
    sets -renderable true -noSurfaceShader true -empty -name mia_material_x_passes1SG;
    rename "Glass_Mtl";
    setAttr "Glass_Mtl.refr_ior" 1.3;
    setAttr "Glass_Mtl.transparency" 1;
    setAttr "Glass_Mtl.refr_gloss" 0.752137;
    select -r GlassSphere ;
    hyperShade -assign Glass_Mtl;
    select -cl ;
//////////////////////////METAL///////////////////////////
    shadingNode -asShader blinn;
    sets -renderable true -noSurfaceShader true -empty -name Metal_SG;
    rename "Metal_Mtl";
    setAttr "Metal_Mtl.eccentricity" 0;
    setAttr "Metal_Mtl.specularRollOff" 0;
    setAttr "Metal_Mtl.reflectivity" 0;
    setAttr "Metal_Mtl.reflectedColor" -type double3 0 0 0 ;
    setAttr "Metal_Mtl.color" -type double3 1 1 1 ;
    setAttr "Metal_Mtl.specularColor" -type double3 0.5 0.5 0.5 ;
    select -r MetalSphere ;
    hyperShade -assign Metal_Mtl;
    select -cl ;
   /* 
          setAttr "miDefaultOptions.finalGather" 1;     
          mentalRayOptionsCheckFinalGather;
          setAttr "miDefaultOptions.finalGatherRays" 300;
          setAttr "miDefaultOptions.finalGatherPresampleDensity" 2;
          setAttr "miDefaultOptions.finalGatherPoints" 50;
          setAttr "miDefaultOptions.finalGatherTraceDiffuse" 2;
          setAttr "miDefaultOptions.miRenderUsing" 2;
          setAttr "miDefaultOptions.maxSamples" 2;
          mentalRayOptionsCheckNumSamples;
          setAttr "miDefaultOptions.filter" 3;
          mentalRayOptionsFilterUpdateUI miDefaultOptions.filter miDefaultOptions.filterWidth miDefaultOptions.filterHeight;
          setAttr "miDefaultOptions.rayTracing" 1;
          mentalRayOptionsCheckRayTracing;
          setAttr "miDefaultOptions.maxRayDepth" 10;
          setAttr "miDefaultOptions.maxReflectionRays" 6;
          setAttr "miDefaultOptions.maxRefractionRays" 4; 
    */
           unifiedRenderGlobalsWindow;    
print "MentalRay Selected";
inViewMessage -amg ("<span style=\"color:#82C99A;\">Info:</span> Mental Ray Selected.") -dragKill -pos midCenterTop ;
}
    
/////////////////////////////////VRAY//////////////////////////////////////////
global proc VR()
{
        
                setAttr "defaultRenderGlobals.currentRenderer" -type "string" "vray";
//////SHADING/////////// 
               if ( `objExists "Chrome_Mtl"` )
                {
                 delete "Chrome_Mtl";
                }
               if ( `objExists "Matte_Mtl"` )
                {
                 delete "Matte_Mtl";
                }
               if ( `objExists "Glass_Mtl"` )
                {
                 delete "Glass_Mtl";
                }
               if ( `objExists "Metal_Mtl"` )
                {
                 delete "Metal_Mtl";
                }
///////////////////////CHROME///////////////
    shadingNode -asShader VRayMtl;
    rename "Chrome_Mtl";
    setAttr "Chrome_Mtl.color" -type double3 0 0 0 ;
    setAttr "Chrome_Mtl.reflectionColor" -type double3 1 1 1 ;
    setAttr "Chrome_Mtl.useFresnel" 1;
    select -r ChromeSphere ;
    hyperShade -assign Chrome_Mtl;
    select -cl ;
/////////////////////MATTE///////////////////////
    shadingNode -asShader VRayMtl;
    rename "Matte_Mtl";
    select -r MatteSphere ;
    hyperShade -assign Matte_Mtl;
    select -cl ;
/////////////////////////////GLASS///////////////////////
    shadingNode -asShader VRayMtl;
    rename "Glass_Mtl";
    setAttr "Glass_Mtl.color" -type double3 0 0 0 ;
    setAttr "Glass_Mtl.reflectionColor" -type double3 1 1 1 ;
    setAttr "Glass_Mtl.reflectionGlossiness" 0.871795;
    setAttr "Glass_Mtl.refractionColor" -type double3 1 1 1 ;
    select -r GlassSphere ;
    hyperShade -assign Glass_Mtl;
    select -cl ;
//////////////////////////METAL///////////////////////////
    shadingNode -asShader VRayMtl;
    rename "Metal_Mtl";
    select -r MetalSphere ;
    hyperShade -assign Metal_Mtl;
    select -cl ;

      unifiedRenderGlobalsWindow;   
print "VRay Selected";
inViewMessage -amg ("<span style=\"color:#82C99A;\">Info:</span> V Ray Selected.") -dragKill -pos midCenterTop ;
}
/////////////////////////////////ARNOLD//////////////////////////////////////////
global proc AR()
{
        
                setAttr "defaultRenderGlobals.currentRenderer" -type "string" "arnold";
                if ( `objExists "Chrome_Mtl"` )
                {
                 delete "Chrome_Mtl";
                }
               if ( `objExists "Matte_Mtl"` )
                {
                 delete "Matte_Mtl";
                }
               if ( `objExists "Glass_Mtl"` )
                {
                 delete "Glass_Mtl";
                }
               if ( `objExists "Metal_Mtl"` )
                {
                 delete "Metal_Mtl";
                }
///////////////////////CHROME///////////////
    shadingNode -asShader aiStandard;;
    rename "Chrome_Mtl";
    setAttr "Chrome_Mtl.aiEnableMatte" 0;
setAttr "Chrome_Mtl.aiMatteColor" -type double3 0 0 0 ;
setAttr "Chrome_Mtl.aiMatteColorA" 0;
setAttr "Chrome_Mtl.color" -type double3 0.906 0.906 0.906 ;
setAttr "Chrome_Mtl.FresnelAffectDiff" 1;
setAttr "Chrome_Mtl.Kd" 0;
setAttr "Chrome_Mtl.diffuseRoughness" 0;
setAttr "Chrome_Mtl.Kb" 0;
setAttr "Chrome_Mtl.directDiffuse" 1;
setAttr "Chrome_Mtl.indirectDiffuse" 1;
setAttr "Chrome_Mtl.KsColor" -type double3 0.967 0.967 0.967 ;
setAttr "Chrome_Mtl.Ks" 1;
setAttr "Chrome_Mtl.specularBrdf" 2;
setAttr "Chrome_Mtl.specularRoughness" 0;
setAttr "Chrome_Mtl.specularFresnel" 1;
setAttr "Chrome_Mtl.Ksn" 0.732;
setAttr "Chrome_Mtl.KrColor" -type double3 1 1 1 ;
setAttr "Chrome_Mtl.Kr" 0;
setAttr "Chrome_Mtl.enableInternalReflections" 1;

    select -r ChromeSphere ;
    hyperShade -assign Chrome_Mtl;
    select -cl ;
/////////////////////MATTE///////////////////////
    shadingNode -asShader aiStandard;
    rename "Matte_Mtl";
    setAttr "Matte_Mtl.color" -type double3 0.5 0.5 0.5 ;
    select -r MatteSphere ;
    hyperShade -assign Matte_Mtl;
    select -cl ;
/////////////////////////////GLASS///////////////////////
    shadingNode -asShader aiStandard;
    rename "Glass_Mtl";


setAttr "Glass_Mtl.aiEnableMatte" 0;
setAttr "Glass_Mtl.aiMatteColorA" 0;
setAttr "Glass_Mtl.aiMatteColor" -type double3 0 0 0 ;
setAttr "Glass_Mtl.color" -type double3 0 0 0 ;
setAttr "Glass_Mtl.Kd" 0;
setAttr "Glass_Mtl.diffuseRoughness" 0;
setAttr "Glass_Mtl.Kb" 0;
setAttr "Glass_Mtl.FresnelAffectDiff" 1;
setAttr "Glass_Mtl.KsColor" -type double3 1 1 1 ;
setAttr "Glass_Mtl.Ks" 1;
setAttr "Glass_Mtl.specularBrdf" 2;
setAttr "Glass_Mtl.specularRoughness" 0;
setAttr "Glass_Mtl.specularFresnel" 1;
setAttr "Glass_Mtl.KrColor" -type double3 1 1 1 ;
setAttr "Glass_Mtl.Kr" 0;
setAttr "Glass_Mtl.KtColor" -type double3 1 1 1 ;
setAttr "Glass_Mtl.Kt" 1;
setAttr "Glass_Mtl.IOR" 1.5;
setAttr "Glass_Mtl.refractionRoughness" 0;
setAttr "Glass_Mtl.FresnelUseIOR" 1;
setAttr "Glass_Mtl.transmittance" -type double3 0.943 0.943 0.943 ;
setAttr "Glass_Mtl.opacity" -type double3 1 1 1 ;



    select -r GlassSphere ;
    hyperShade -assign Glass_Mtl;
    select -cl ;
//////////////////////////METAL///////////////////////////
    shadingNode -asShader aiStandard;
    rename "Metal_Mtl";
    select -r MetalSphere ;
    hyperShade -assign Metal_Mtl;
    select -cl ;

    unifiedRenderGlobalsWindow;   

print "ArnoldRenderer Selected";
inViewMessage -amg ("<span style=\"color:#82C99A;\">Info:</span> Arnold Renderer Selected.") -dragKill -pos midCenterTop ;
}
/////////////////////////////////SUN SKY////////////////////////////////
global proc SSK()
{

                 if ( getAttr("defaultRenderGlobals.currentRenderer") == "mentalRay" )   
                  {     
                   if ( `objExists "mia_physicalsky1"`)
                    { 
                     select "sunDirection";
print "mia_physicalsky1 already Exist";
inViewMessage -amg ("<span style=\"color:#82C99A;\">Info:</span> mia_physicalsky1 already Exist.") -dragKill -pos midCenterTop ;
                    }else{
                          miCreateSunSky;
                          select "sunDirection";
                         }        
inViewMessage -amg ("<span style=\"color:#82C99A;\">Info:</span> mia_physicalsky1 renamed Sun&Sky Created.") -dragKill -pos midCenterTop ;
 
                   }

  
                  if ( getAttr("defaultRenderGlobals.currentRenderer") == "arnold" )
                   {
                   if( `objExists "IBL_AR"` )
                    { 
                     delete "IBL_AR";
                    }   
                  if( `objExists "SSK_AR"` )
                   {
                    delete "SSK_AR";
                   }   
                  if ( `objExists "aiSkyDomeLight1"`)
                   {
                   shadingNode -asLight aiPhysicalSky;
                   defaultNavigation -ce -source aiPhysicalSky1 -destination aiSkyDomeLight1.color; 
                   connectNodeToAttrOverride("aiPhysicalSky1", "aiSkyDomeLight1.color");
                   rename aiSkyDomeLight1 "IBL_AR" ;
                   rename "transform1" "IBL_AR";
                   rename aiPhysicalSky1 "SSK_AR" ;
                   select -cl;
print "IBL_AR_Renamed";
inViewMessage -amg ("<span style=\"color:#82C99A;\">Info:</span> aiSkyDomeLight1 renamed SSK_AR.") -dragKill -pos midCenterTop ;

                  }else{
                        shadingNode -asLight aiPhysicalSky;
                        shadingNode -asLight aiSkyDomeLight; 
                        defaultNavigation -ce -source aiPhysicalSky1 -destination aiSkyDomeLight1.color; 
                        connectNodeToAttrOverride("aiPhysicalSky1", "aiSkyDomeLight1.color");
                        rename aiSkyDomeLight1 "IBL_AR" ;
                        rename "transform1" "IBL_AR";
                        rename aiPhysicalSky1 "SSK_AR" ;
                       }
                       select -r |IBL_AR ;      
print "SSK_AR_Create";
                      }
  


        
                     if ( getAttr("defaultRenderGlobals.currentRenderer") == "vray" )
                      { 
                       if( `objExists "SSK_VR"` )
                        { 
                         if( `objExists "SSK_VR1"` )
                          {
                           delete "SSK_VR1";
                          }
                        }


                       if ( `objExists "VRayGeoSun1"`)
                        {   
                         rename "VRayGeoSun1" "SSK_VR"; 
                         rename "VRayGeoSun1Transform" "SSK_VR";    
print "SSK_VR_Renamed";
inViewMessage -amg ("<span style=\"color:#82C99A;\">Info:</span> VRayGeoSun1 renamed SSK_VR.") -dragKill -pos midCenterTop ;
                        }else{
                              vrayCreateVRaySun;
                              vrayCreateVRaySky;
                              rename "VRayGeoSun1" "SSK_VR";
                              rename "VRayGeoSun1Transform" "SSK_VR";
inViewMessage -amg ("<span style=\"color:#82C99A;\">Info:</span> VRayGeoSun1 renamed SSK_VR.") -dragKill -pos midCenterTop ;
                             }
                             select -r SSK_VR ;
print "SSK_VR_Parameters_Set"; 
                         }
}
///////////////////IBL////////////////
global proc IBL()
{
//////////////////////////////////////////////////////////////// 
                 if ( getAttr("defaultRenderGlobals.currentRenderer") == "mentalRay" )   
                  {
                   if ( `objExists "mentalrayIbl1"`)
                    { 
                    select "mentalrayIbl1";
                    rename mentalrayIbl1 "IBL_MR" ;
                    select -cl;
print "IBL_MR_Renamed";
                    }else{
                          miCreateIbl;
                          select "mentalrayIbl1";
                          rename mentalrayIbl1 "IBL_MR" ; 
                          select -cl;
                         } 
                    setAttr "IBL_MR.visibleInReflections" 1;
                    setAttr "IBL_MR.visibleInRefractions" 1;
                    setAttr "IBL_MR.visibleInEnvironment" 1;
                    setAttr "IBL_MR.primaryVisibility" 1;
print "IBL_MR_Parameters_Set";
                    select -r IBL_MR ;
inViewMessage -amg ("<span style=\"color:#82C99A;\">Info:</span> Load your texture IBL.") -dragKill -pos midCenterTop ;
inViewMessage -amg ("<span style=\"color:#F4FA58;\">Warning:</span> Think to Rename It for keep a Clean & Organized scene.") -dragKill -pos midCenter ;
                   }
       
////////////////////////////////////////////////////////////////         
                   if ( getAttr("defaultRenderGlobals.currentRenderer") == "arnold" )
                    { 
                    if ( `objExists "IBL_AR"`)
                      { 
                      
                      select -cl;
                      select -r IBL_AR_Texture ;   

                      print "IBL_AR Already Exist !";
                      }else{
                          
                       if ( `objExists "aiSkyDomeLight1"`)
                        { 
                         select "aiSkyDomeLight1";  
                         rename aiSkyDomeLight1 "IBL_AR" ;
print "IBL_AR_Renamed";
                       }else{ 
                             shadingNode -asLight aiSkyDomeLight; 
                             rename aiSkyDomeLight1 "IBL_AR" ;
                             rename "transform1" "IBL_AR";
           
           shadingNode -asTexture file;
shadingNode -asUtility place2dTexture;
connectAttr -f place2dTexture1.coverage file1.coverage;
connectAttr -f place2dTexture1.translateFrame file1.translateFrame;
connectAttr -f place2dTexture1.rotateFrame file1.rotateFrame;
connectAttr -f place2dTexture1.mirrorU file1.mirrorU;
connectAttr -f place2dTexture1.mirrorV file1.mirrorV;
connectAttr -f place2dTexture1.stagger file1.stagger;
connectAttr -f place2dTexture1.wrapU file1.wrapU;
connectAttr -f place2dTexture1.wrapV file1.wrapV;
connectAttr -f place2dTexture1.repeatUV file1.repeatUV;
connectAttr -f place2dTexture1.offset file1.offset;
connectAttr -f place2dTexture1.rotateUV file1.rotateUV;
connectAttr -f place2dTexture1.noiseUV file1.noiseUV;
connectAttr -f place2dTexture1.vertexUvOne file1.vertexUvOne;
connectAttr -f place2dTexture1.vertexUvTwo file1.vertexUvTwo;
connectAttr -f place2dTexture1.vertexUvThree file1.vertexUvThree;
connectAttr -f place2dTexture1.vertexCameraOne file1.vertexCameraOne;
connectAttr place2dTexture1.outUV file1.uv;
connectAttr place2dTexture1.outUvFilterSize file1.uvFilterSize;
rename file1 "IBL_AR_Texture" ;
rename place2dTexture1 "place2d_IBL_AR_Texture" ;

defaultNavigation -ce -source IBL_AR_Texture -destination IBL_AR.color;
/*connectAttr -force IBL_AR_Texture.outColor |IBL_AR|IBL_AR.color;*/
evalDeferred( "showEditor IBL_AR_Texture");
select -r IBL_AR_Texture ;   

inViewMessage -amg ("<span style=\"color:#82C99A;\">Info:</span> Please select the File Node for Load your texture.") -dragKill -pos midCenterTop ; 
inViewMessage -amg ("<span style=\"color:#F4FA58;\">Warning:</span> Think to Rename It for keep a Clean & Organized scene.") -dragKill -pos midCenter ;
                             }                        
                            }
                             select -r IBL_AR_Texture ;
                        }
////////////////////////////////////////////////////////////////        
                          if ( getAttr("defaultRenderGlobals.currentRenderer") == "vray" )
                           {
                            if ( `objExists "VRayPlaceEnvTex1"` )
                             { 
                              rename VRayPlaceEnvTex1 "IBL_VR_EnvTex" ;

                             currentTime 1 ;
                              setAttr "IBL_VR_EnvTex.horRotation" 0;
                              setKeyframe { "IBL_VR_EnvTex.hr" };
                            currentTime 2 ;
                              setAttr "IBL_VR_EnvTex.horRotation" 360;
                              setKeyframe { "IBL_VR_EnvTex.hr" };
                              } 
                             if( `objExists "IBL_VR"` )
                              {
                               delete "VRayLightDome1";
                              }  
                             if( `objExists "IBL_VR"` )
                              {
                               delete "IBL_VR1";
                              }   
                             if ( `objExists "VRayLightDomeShape1"`)
                              {      
                               select "VRayLightDomeShape1";
                               rename VRayLightDomeShape1 "IBL_VR" ;
print "IBL_VR_Renamed";
                              }else{
                                    shadingNode -asLight VRayLightDomeShape;       
                                    select "VRayLightDomeShape1";
                                    rename "VRayLightDome1" "IBL_VR";
         
                                   }
                              setAttr "IBL_VRShape.useDomeTex" 1;
                              setAttr "IBL_VRShape.domeSpherical" 1;
                              checkBoxGrp -e -en1 true valueFld;
                              checkBoxGrp -e -en1 true valueFld;
                              setAttr "IBL_VR.texResolution" 2048;
                              setAttr "IBL_VR.subdivs" 32;
print "IBL_VR_Parameters_Set"; 

shadingNode -asTexture file;
shadingNode -asUtility place2dTexture;
connectAttr -f place2dTexture1.coverage file1.coverage;
connectAttr -f place2dTexture1.translateFrame file1.translateFrame;
connectAttr -f place2dTexture1.rotateFrame file1.rotateFrame;
connectAttr -f place2dTexture1.mirrorU file1.mirrorU;
connectAttr -f place2dTexture1.mirrorV file1.mirrorV;
connectAttr -f place2dTexture1.stagger file1.stagger;
connectAttr -f place2dTexture1.wrapU file1.wrapU;
connectAttr -f place2dTexture1.wrapV file1.wrapV;
connectAttr -f place2dTexture1.repeatUV file1.repeatUV;
connectAttr -f place2dTexture1.offset file1.offset;
connectAttr -f place2dTexture1.rotateUV file1.rotateUV;
connectAttr -f place2dTexture1.noiseUV file1.noiseUV;
connectAttr -f place2dTexture1.vertexUvOne file1.vertexUvOne;
connectAttr -f place2dTexture1.vertexUvTwo file1.vertexUvTwo;
connectAttr -f place2dTexture1.vertexUvThree file1.vertexUvThree;
connectAttr -f place2dTexture1.vertexCameraOne file1.vertexCameraOne;
connectAttr place2dTexture1.outUV file1.uv;
connectAttr place2dTexture1.outUvFilterSize file1.uvFilterSize;
rename file1 "IBL_VR_Texture" ;
rename place2dTexture1 "place2d_IBL_VR_Texture" ;

defaultNavigation -ce -source IBL_VR_Texture -destination IBL_VRShape.domeTex;
connectAttr -force IBL_VR_Texture.outColor IBL_VRShape.domeTex;
           
         
print "Think to Rename It for keep a Clean & Organized scene";
inViewMessage -amg ("<span style=\"color:#82C99A;\">Info:</span> Please, push again the IBL button") -dragKill -pos midCenterTop ;
inViewMessage -amg ("<span style=\"color:#F4FA58;\">Warning:</span> Think to Rename It for keep a Clean & Organized scene.") -dragKill -pos midCenter ;




                   }
////////////////////////////////////////////////////////////////
}
    ////////////////////LIGHTS///////////////
global proc LIGHTS()
{
                    if ( `objExists "LIGHTS_Grp"` )
                     {     
                      SelectAllLights;
                      select -r `listTransforms -lights`;
                      select -tgl "LIGHTS_Grp";
                      parent;
                     } else { 
                             select -cl;
                             doGroup 0 1 1;
                             rename "LIGHTS_Grp";
                             SelectAllLights;
                             select -r `listTransforms -lights`;
                             select -tgl "LIGHTS_Grp";
                             parent;
                            }    
print "Light_Parented_LIGHTS_Grp";
inViewMessage -amg ("<span style=\"color:#82C99A;\">Info:</span> Lights Parented to the LIGHTS_Grp.") -dragKill -pos midCenterTop ;
}
////////////////////OUTLINER///////////
    OutlinerWindow;
//////////////ADD_CAM///////////////////
                                        if ( `objExists "IBL_RENDER"` )
                                         {
                                          select "IBL_RENDER";
                                         }else{
                                               camera -centerOfInterest 5 -focalLength 35 -lensSqueezeRatio 1 -cameraScale 1 -horizontalFilmAperture 1.41732 -horizontalFilmOffset 0 -verticalFilmAperture 0.94488 -verticalFilmOffset 0 -filmFit Fill -overscan 1 -motionBlur 0 -shutterAngle 144 -nearClipPlane 0.1 -farClipPlane 10000 -orthographic 0 -orthographicWidth 30 -panZoomEnabled 0 -horizontalPan 0 -verticalPan 0 -zoom 1; objectMoveCommand; cameraMakeNode 1 "";
                                               rename "IBL_RENDER";
                                              }
    
///////////INSERT_CAMERA///////////////////
    lookThroughModelPanel IBL_RENDERShape modelPanel4;
    updateModelPanelBar MayaWindow|formLayout1|viewPanes|modelPanel4|modelPanel4|modelPanel4;
    camera -e -displayFilmGate off -displayResolution on -overscan 1.3 IBL_RENDERShape;
    modelEditor -edit -displayAppearance smoothShaded -activeOnly false modelPanel4;
    modelEditor -e -grid false modelPanel4;
    select -cl  ;
////////////////////////////////////////////////////
/////////////////SPHERE////////////
    polySphere -r .01 -sx 20 -sy 20 -ax 0 1 0 -cuv 2 -ch 1;
    rename "ChromeSphere";
    move -rpr -xz 0.0475 -0.12 ;
    SnapToGrid; dR_enterForSnap;
    move -rpr -y 0.02 ;
    SnapToGrid; dR_enterForSnap;
    polySphere -r .01 -sx 20 -sy 20 -ax 0 1 0 -cuv 2 -ch 1;
    rename "MatteSphere";
    move -rpr -xz 0.0475 -0.12 ;
    SnapToGrid; dR_enterForSnap;
    move -rpr -y -0.02 ;
    SnapToGrid; dR_enterForSnap; 
    polySphere -r .01 -sx 20 -sy 20 -ax 0 1 0 -cuv 2 -ch 1;
    rename "GlassSphere";
    move -rpr -xz 0.0475 -0.12 ;
    SnapToGrid; dR_enterForSnap;
    move -rpr -y -0.06 ;
    SnapToGrid; dR_enterForSnap; 
    polySphere -r .01 -sx 20 -sy 20 -ax 0 1 0 -cuv 2 -ch 1;
    rename "MetalSphere";
    move -rpr -xz 0.0475 -0.12 ;
    SnapToGrid; dR_enterForSnap;
    move -rpr -y -0.1 ;
    SnapToGrid; dR_enterForSnap; 
    select -cl ;
    
    //////////////////////PARENT///////////////////////////////
    select -r MatteSphere ;
    select -tgl IBL_RENDER ;
    parent;
    select -r ChromeSphere ;
    select -tgl IBL_RENDER ;
    parent;
    select -r GlassSphere ;
    select -tgl IBL_RENDER ;
    parent;
    select -r MetalSphere ;
    select -tgl IBL_RENDER ;
    parent;
    select -cl ;
    /////////////////GROUP//////////////
    select -r MatteSphere ;
    select -tgl ChromeSphere ;
    select -tgl GlassSphere ;
    select -tgl MetalSphere ;
    Group;
    rename "SphereGrp";
    select -r SphereGrp ;
    CenterPivot;
    xform -cp;

    select -cl ;
    
    

    //////////////////HIDE///////////
    select -r GlassSphere ;
    select -tgl MetalSphere ;
    HideSelectedObjects;
    doHideObjects true;
    select -cl ;
////////// CAM 35 ///////////////////
global proc Cam35()
{
                   setAttr "IBL_RENDERShape.focalLength" 35;
                   setAttr "locatorCam.translateZ" -0.12;
                   if (`getAttr GlassSphere.visibility` == on)
                    { 
                     if (`getAttr MetalSphere.visibility` == off)
                      {
                       if (`radioButtonGrp -q -select myLRGrp` == 1)
                        {
                         setAttr "locatorCam.translateX" -0.05;
                        }
                       if (`radioButtonGrp -q -select myLRGrp` == 2)
                        {
                         setAttr "locatorCam.translateX" 0.05; 
                        }
                    
                    setAttr "locatorCam.translateY" -0.037;
                    setAttr "locatorCam.translateZ" -0.12;
                    setAttr "locatorCam.scaleZ" 0.04;
                    setAttr "locatorCam.scaleX" 0.04;
                    setAttr "locatorCam.scaleY" 0.04;
    
                      }else if (`getAttr MetalSphere.visibility` == on)
                             {
print "Cam Set 35mm";
inViewMessage -amg ("<span style=\"color:#82C99A;\">Info:</span> IBL_RENDER Camera Set to 35mm.") -dragKill -pos midCenterTop ;
                             }
                        }
inViewMessage -amg ("<span style=\"color:#82C99A;\">Info:</span> IBL_RENDER Camera Set to 35mm.") -dragKill -pos midCenterTop ;
print "Cam Set 35mm";
}
////////// CAM 50 ///////////////////
global proc Cam50()
{
                   setAttr "IBL_RENDERShape.focalLength" 50; 
                   setAttr "locatorCam.translateZ" -0.17;
                   if (`getAttr GlassSphere.visibility` == on)
                    {
                     if (`getAttr MetalSphere.visibility` == off)
                      {
                       if (`radioButtonGrp -q -select myLRGrp` == 1)
                        {
                         setAttr "locatorCam.translateX" -0.05;
                        }
                       if (`radioButtonGrp -q -select myLRGrp` == 2)
                        {
                         setAttr "locatorCam.translateX" 0.05; 
                        }
               
                    
                        setAttr "locatorCam.translateY" -0.037;
                        setAttr "locatorCam.translateZ" -0.17;
                        setAttr "locatorCam.scaleZ" 0.04;
                        setAttr "locatorCam.scaleX" 0.04;
                        setAttr "locatorCam.scaleY" 0.04;
                      }else if (`getAttr MetalSphere.visibility` == on)
                             {
print "Cam Set 50mm";
                          }      
                      }
inViewMessage -amg ("<span style=\"color:#82C99A;\">Info:</span> ILB_RENDER Camera Set to 50 mm.") -dragKill -pos midCenterTop ;
print "Cam Set 50mm";
}
////////// CAM 85 ///////////////////
global proc Cam85()
{
                   setAttr "IBL_RENDERShape.focalLength" 85;
                   setAttr "locatorCam.translateZ" -0.29;
                   if (`getAttr GlassSphere.visibility` == on)
                    {
                     if (`getAttr MetalSphere.visibility` == off)
                      {
                       if (`radioButtonGrp -q -select myLRGrp` == 1)
                        {
                         setAttr "locatorCam.translateX" -0.05;
                        }
                       if (`radioButtonGrp -q -select myLRGrp` == 2)
                        {
                         setAttr "locatorCam.translateX" 0.05;
                        }
                     setAttr "locatorCam.translateY" -0.037;
                     setAttr "locatorCam.translateZ" -0.29;
                     setAttr "locatorCam.scaleZ" 0.04;
                     setAttr "locatorCam.scaleX" 0.04;
                     setAttr "locatorCam.scaleY" 0.04;
                      }else if (`getAttr MetalSphere.visibility` == on)
                             {
print "Cam Set 85mm";
                      }
                    }
inViewMessage -amg ("<span style=\"color:#82C99A;\">Info:</span> IBL_RENDER Camera Set to 85mm.") -dragKill -pos midCenterTop ;
print "Cam Set 85mm";
}
////////////2      SPHERE//////////////
global proc Sph2()
{
                  if (`getAttr IBL_RENDERShape.focalLength` == 35)
                   {
                    select -r MetalSphere ;
                    select -tgl GlassSphere ;
                    HideSelectedObjects;
                    doHideObjects true;
    
                    setAttr "GlassSphere.scaleZ" 1.8;
                     setAttr "GlassSphere.scaleX" 1.8;
                      setAttr "GlassSphere.scaleY" 1.8;
                       setAttr "MatteSphere.scaleZ" 1.8;
                        setAttr "MatteSphere.scaleX" 1.8;
                         setAttr "MatteSphere.scaleY" 1.8;
                        setAttr "ChromeSphere.scaleZ" 1.8;
                       setAttr "ChromeSphere.scaleX" 1.8;
                      setAttr "ChromeSphere.scaleY" 1.8;
                     setAttr "MetalSphere.scaleZ" 1.8;
                   setAttr "MetalSphere.scaleX" 1.8;
                  setAttr "MetalSphere.scaleY" 1.8;
                setAttr "locatorCam.translateY" -0.037;
               setAttr "locatorCam.translateZ" -0.12;
              setAttr "locatorCam.scaleZ" 0.04;
             setAttr "locatorCam.scaleX" 0.04;
            setAttr "locatorCam.scaleY" 0.04;
           select -cl  ;
    
   

                  } else      if (`getAttr IBL_RENDERShape.focalLength` == 50)
                              {
 
                               select -r MetalSphere ;
                               select -tgl GlassSphere ;
                               HideSelectedObjects;
                               doHideObjects true;
    

                               setAttr "GlassSphere.scaleZ" 1.8;
                              setAttr "GlassSphere.scaleX" 1.8;
                             setAttr "GlassSphere.scaleY" 1.8;
                            setAttr "MatteSphere.scaleZ" 1.8;
                           setAttr "MatteSphere.scaleX" 1.8;
                          setAttr "MatteSphere.scaleY" 1.8;
                         setAttr "ChromeSphere.scaleZ" 1.8;
                        setAttr "ChromeSphere.scaleX" 1.8;
                       setAttr "ChromeSphere.scaleY" 1.8;
                      setAttr "MetalSphere.scaleZ" 1.8;
                     setAttr "MetalSphere.scaleX" 1.8;
                    setAttr "MetalSphere.scaleY" 1.8;
                   setAttr "locatorCam.translateY" -0.037;
                  setAttr "locatorCam.translateZ"-0.17;
                 setAttr "locatorCam.scaleZ" 0.04;
                setAttr "locatorCam.scaleX" 0.04;
               setAttr "locatorCam.scaleY" 0.04;
              select -cl  ;
    
 
                            } else      if (`getAttr IBL_RENDERShape.focalLength` == 85)
                                         {
                                          select -r MetalSphere ;
                                          select -tgl GlassSphere ;
                                          HideSelectedObjects;
                                          doHideObjects true;
    
             setAttr "GlassSphere.scaleZ" 1.8;
              setAttr "GlassSphere.scaleX" 1.8;
               setAttr "GlassSphere.scaleY" 1.8;
                setAttr "MatteSphere.scaleZ" 1.8;
                 setAttr "MatteSphere.scaleX" 1.8;
                  setAttr "MatteSphere.scaleY" 1.8;
                  setAttr "ChromeSphere.scaleZ" 1.8;
                   setAttr "ChromeSphere.scaleX" 1.8;
                    setAttr "ChromeSphere.scaleY" 1.8;
                     setAttr "MetalSphere.scaleZ" 1.8;
                      setAttr "MetalSphere.scaleX" 1.8;
                       setAttr "MetalSphere.scaleY" 1.8;
                      setAttr "locatorCam.translateY" -0.037;
                     setAttr "locatorCam.translateZ" -0.29;
                    setAttr "locatorCam.scaleZ" 0.04;
                   setAttr "locatorCam.scaleX" 0.04;
                 setAttr "locatorCam.scaleY" 0.04;
                select -cl  ;
    

    
   

           }
print "Sphere Number 2"; 
inViewMessage -amg ("<span style=\"color:#82C99A;\">Info:</span> Sphere  Number VIsible is 2.") -dragKill -pos midCenterTop ;
}  
    
    
    
    
    
////////////3     SPHERE//////////////
global proc Sph3()
{
        
                   if (`getAttr IBL_RENDERShape.focalLength` == 35)
                    {
                     select -r MetalSphere ;
                      select -tgl GlassSphere ;
                       select -tgl MatteSphere ;
                        select -tgl ChromeSphere ;
                         ShowSelectedObjects;
                          evalEcho "showHidden -a";
                         showHidden -a;
                        select -r MetalSphere ;
                       HideSelectedObjects;
                      doHideObjects true;

    setAttr "GlassSphere.scaleZ" 1.8;
    setAttr "GlassSphere.scaleX" 1.8;
    setAttr "GlassSphere.scaleY" 1.8;
    setAttr "MatteSphere.scaleZ" 1.8;
    setAttr "MatteSphere.scaleX" 1.8;
    setAttr "MatteSphere.scaleY" 1.8;
    setAttr "ChromeSphere.scaleZ" 1.8;
    setAttr "ChromeSphere.scaleX" 1.8;
    setAttr "ChromeSphere.scaleY" 1.8;
    setAttr "MetalSphere.scaleZ" 1.8;
    setAttr "MetalSphere.scaleX" 1.8;
     setAttr "MetalSphere.scaleY" 1.8;
      setAttr "locatorCam.translateY" -0.037;
        setAttr "locatorCam.translateZ" -0.12;
         setAttr "locatorCam.scaleZ" 0.04;
          setAttr "locatorCam.scaleX" 0.04;
           setAttr "locatorCam.scaleY" 0.04;
            select -cl  ;
    
    


                     } else      if (`getAttr IBL_RENDERShape.focalLength` == 50)
                                  {
          
                                   select -r MetalSphere ;
                                   select -tgl GlassSphere ;
                                   select -tgl MatteSphere ;
                                   select -tgl ChromeSphere ;
                                   ShowSelectedObjects;
                                   evalEcho "showHidden -a";
                                   showHidden -a;
                                   select -r MetalSphere ;
                                   HideSelectedObjects;
                                   doHideObjects true;

                                    setAttr "GlassSphere.scaleZ" 1.8; 
                                   setAttr "GlassSphere.scaleX" 1.8;
                                  setAttr "GlassSphere.scaleY" 1.8;
                                 setAttr "MatteSphere.scaleZ" 1.8;
                                setAttr "MatteSphere.scaleX" 1.8;
                               setAttr "MatteSphere.scaleY" 1.8;
                              setAttr "ChromeSphere.scaleZ" 1.8;
                             setAttr "ChromeSphere.scaleX" 1.8;
                            setAttr "ChromeSphere.scaleY" 1.8;
                           setAttr "MetalSphere.scaleZ" 1.8;
                          setAttr "MetalSphere.scaleX" 1.8;
                         setAttr "MetalSphere.scaleY" 1.8;
                       setAttr "locatorCam.translateY" -0.037;
                      setAttr "locatorCam.translateZ"-0.17;
                     setAttr "locatorCam.scaleZ" 0.04;
                    setAttr "locatorCam.scaleX" 0.04;
                   setAttr "locatorCam.scaleY" 0.04;
                  select -cl  ;
    

   
                                 } else if (`getAttr IBL_RENDERShape.focalLength` == 85)
                                         {
                                          select -r MetalSphere ;
                                          select -tgl GlassSphere ;
                                          select -tgl MatteSphere ;
                                          select -tgl ChromeSphere ;
                                          ShowSelectedObjects;
                                          evalEcho "showHidden -a";
                                          showHidden -a;
                                          select -r MetalSphere ;
                                          HideSelectedObjects;
                                          doHideObjects true; 
  
    setAttr "GlassSphere.scaleZ" 1.8;
    setAttr "GlassSphere.scaleX" 1.8;
    setAttr "GlassSphere.scaleY" 1.8;
    setAttr "MatteSphere.scaleZ" 1.8;
    setAttr "MatteSphere.scaleX" 1.8;
    setAttr "MatteSphere.scaleY" 1.8;
    setAttr "ChromeSphere.scaleZ" 1.8;
    setAttr "ChromeSphere.scaleX" 1.8;
    setAttr "ChromeSphere.scaleY" 1.8;
    setAttr "MetalSphere.scaleZ" 1.8;
    setAttr "MetalSphere.scaleX" 1.8;
    setAttr "MetalSphere.scaleY" 1.8;
      setAttr "locatorCam.translateY" -0.037;
        setAttr "locatorCam.translateZ" -0.29;
          setAttr "locatorCam.scaleZ" 0.04;
           setAttr "locatorCam.scaleX" 0.04;
            setAttr "locatorCam.scaleY" 0.04;
             select -cl  ;
    }
print "Sphere Number 3";
inViewMessage -amg ("<span style=\"color:#82C99A;\">Info:</span> Sphere Number VIsible is 3.") -dragKill -pos midCenterTop ;
}
////////////4       SPHERE//////////////
global proc Sph4()
{
                   if (`getAttr IBL_RENDERShape.focalLength` == 35)
                    {
    select -r MetalSphere ;
    select -tgl GlassSphere ;
    select -tgl MatteSphere ;
    select -tgl ChromeSphere ;
    ShowSelectedObjects;
    evalEcho "showHidden -a";
    showHidden -a;
    setAttr "GlassSphere.scaleZ" 1.8;
    setAttr "GlassSphere.scaleX" 1.8;
    setAttr "GlassSphere.scaleY" 1.8;
    setAttr "MatteSphere.scaleZ" 1.8;
    setAttr "MatteSphere.scaleX" 1.8;
    setAttr "MatteSphere.scaleY" 1.8;
    setAttr "ChromeSphere.scaleZ" 1.8;
    setAttr "ChromeSphere.scaleX" 1.8;
    setAttr "ChromeSphere.scaleY" 1.8;
    setAttr "MetalSphere.scaleZ" 1.8;
    setAttr "MetalSphere.scaleX" 1.8;
    setAttr "MetalSphere.scaleY" 1.8;
    setAttr "locatorCam.translateY" -0.037;
    setAttr "locatorCam.translateZ" -0.12;
    setAttr "locatorCam.scaleZ" 0.04;
    setAttr "locatorCam.scaleX" 0.04;
    setAttr "locatorCam.scaleY" 0.04;
    select -cl  ;
                     } else if (`getAttr IBL_RENDERShape.focalLength` == 50)
                             {
                              select -r MetalSphere ;
                              select -tgl GlassSphere ;
                              select -tgl MatteSphere ;
                              select -tgl ChromeSphere ;
                              ShowSelectedObjects;
                              evalEcho "showHidden -a";
                              showHidden -a;
                              setAttr "GlassSphere.scaleZ" 1.8;
                              setAttr "GlassSphere.scaleX" 1.8;
                              setAttr "GlassSphere.scaleY" 1.8;
                              setAttr "MatteSphere.scaleZ" 1.8;
                              setAttr "MatteSphere.scaleX" 1.8;
                              setAttr "MatteSphere.scaleY" 1.8;
                              setAttr "ChromeSphere.scaleZ" 1.8;
                              setAttr "ChromeSphere.scaleX" 1.8;
                              setAttr "ChromeSphere.scaleY" 1.8; 
                              setAttr "MetalSphere.scaleZ" 1.8;
                              setAttr "MetalSphere.scaleX" 1.8;
                              setAttr "MetalSphere.scaleY" 1.8;
                              setAttr "locatorCam.translateY" -0.037;
                              setAttr "locatorCam.translateZ"-0.17;
                              setAttr "locatorCam.scaleZ" 0.04;
                              setAttr "locatorCam.scaleX" 0.04;
                              setAttr "locatorCam.scaleY" 0.04;
                              select -cl  ;
                              } else if (`getAttr IBL_RENDERShape.focalLength` == 85)
                                      {
                                       select -r MetalSphere ;
                                       select -tgl GlassSphere ;
                                       select -tgl MatteSphere ;
                                       select -tgl ChromeSphere ;
                                       ShowSelectedObjects;
                                       evalEcho "showHidden -a";
                                       showHidden -a;
                                       setAttr "GlassSphere.scaleZ" 1.8;
                                       setAttr "GlassSphere.scaleX" 1.8;
                                       setAttr "GlassSphere.scaleY" 1.8;
                                       setAttr "MatteSphere.scaleZ" 1.8;
                                       setAttr "MatteSphere.scaleX" 1.8;
                                       setAttr "MatteSphere.scaleY" 1.8;
                                       setAttr "ChromeSphere.scaleZ" 1.8;
                                       setAttr "ChromeSphere.scaleX" 1.8;
                                       setAttr "ChromeSphere.scaleY" 1.8;
                                       setAttr "MetalSphere.scaleZ" 1.8;
                                       setAttr "MetalSphere.scaleX" 1.8;
                                       setAttr "MetalSphere.scaleY" 1.8;
                                       setAttr "locatorCam.translateY" -0.037;
                                       setAttr "locatorCam.translateZ" -0.29;
                                       setAttr "locatorCam.scaleZ" 0.04;
                                       setAttr "locatorCam.scaleX" 0.04;
                                       setAttr "locatorCam.scaleY" 0.04;
                                       select -cl  ;
                                       }else {
print "WrongFocal";
          }
print "Sphere Number 4";
inViewMessage -amg ("<span style=\"color:#82C99A;\">Info:</span> Sphere Number VIsible is 4.") -dragKill -pos midCenterTop ;
}
//////SHADING/////////// 
if ( getAttr("defaultRenderGlobals.currentRenderer") == "mentalRay" )  
{
///////////////////////CHROME///////////////
    shadingNode -asShader blinn;
    rename "Chrome_Mtl";
    setAttr "Chrome_Mtl.color" -type double3 0 0 0 ;
    setAttr "Chrome_Mtl.reflectivity" 1;
    setAttr "Chrome_Mtl.specularRollOff" 1;
    setAttr "Chrome_Mtl.eccentricity" 0.0854615;
    setAttr "Chrome_Mtl.specularColor" -type double3 1 1 1 ;
    select -r ChromeSphere ;
    hyperShade -assign Chrome_Mtl;
    select -cl ;
/////////////////////MATTE///////////////////////
    shadingNode -asShader blinn;
    rename "Matte_Mtl";
    setAttr "Matte_Mtl.eccentricity" 0;
    setAttr "Matte_Mtl.specularRollOff" 0.598291;
    setAttr "Matte_Mtl.reflectivity" 0;
    setAttr "Matte_Mtl.specularRollOff" 0;
    select -r MatteSphere ;
    hyperShade -assign Matte_Mtl;
    select -cl ;
/////////////////////////////GLASS///////////////////////
    mrCreateCustomNode -asShader "" mia_material_x_passes;
    sets -renderable true -noSurfaceShader true -empty -name mia_material_x_passes1SG;
    rename "Glass_Mtl";
    setAttr "Glass_Mtl.refr_ior" 1.3;
    setAttr "Glass_Mtl.transparency" 1;
    setAttr "Glass_Mtl.refr_gloss" 0.752137;
    select -r GlassSphere ;
    hyperShade -assign Glass_Mtl;
    select -cl ;
//////////////////////////METAL///////////////////////////
    shadingNode -asShader blinn;
    sets -renderable true -noSurfaceShader true -empty -name Metal_SG;
    rename "Metal_Mtl";
    setAttr "Metal_Mtl.eccentricity" 0;
    setAttr "Metal_Mtl.specularRollOff" 0;
    setAttr "Metal_Mtl.reflectivity" 0;
    setAttr "Metal_Mtl.reflectedColor" -type double3 0 0 0 ;
    setAttr "Metal_Mtl.color" -type double3 1 1 1 ;
    setAttr "Metal_Mtl.specularColor" -type double3 0.5 0.5 0.5 ;
    select -r MetalSphere ;
    hyperShade -assign Metal_Mtl;
    select -cl ;
print "MentalRayRenderer Selected_ShaderApply";
inViewMessage -amg ("<span style=\"color:#82C99A;\">Info:</span> MentalRayRenderer Selected and the Shader on Sphere Applied.") -dragKill -pos midCenterTop ;
}
if ( getAttr("defaultRenderGlobals.currentRenderer") == "arnold" )
{
///////////////////////CHROME///////////////
    shadingNode -asShader aiStandard;;
    rename "Chrome_Mtl";
setAttr "Chrome_Mtl.aiEnableMatte" 0;
setAttr "Chrome_Mtl.aiMatteColor" -type double3 0 0 0 ;
setAttr "Chrome_Mtl.aiMatteColorA" 0;
setAttr "Chrome_Mtl.color" -type double3 0.906 0.906 0.906 ;
setAttr "Chrome_Mtl.FresnelAffectDiff" 1;
setAttr "Chrome_Mtl.Kd" 0;
setAttr "Chrome_Mtl.diffuseRoughness" 0;
setAttr "Chrome_Mtl.Kb" 0;
setAttr "Chrome_Mtl.directDiffuse" 1;
setAttr "Chrome_Mtl.indirectDiffuse" 1;
setAttr "Chrome_Mtl.KsColor" -type double3 0.967 0.967 0.967 ;
setAttr "Chrome_Mtl.Ks" 1;
setAttr "Chrome_Mtl.specularBrdf" 2;
setAttr "Chrome_Mtl.specularRoughness" 0;
setAttr "Chrome_Mtl.specularFresnel" 1;
setAttr "Chrome_Mtl.Ksn" 0.732;
setAttr "Chrome_Mtl.KrColor" -type double3 1 1 1 ;
setAttr "Chrome_Mtl.Kr" 0;
setAttr "Chrome_Mtl.enableInternalReflections" 1;


    select -r ChromeSphere ;
    hyperShade -assign Chrome_Mtl;
    select -cl ;
/////////////////////MATTE///////////////////////
    shadingNode -asShader aiStandard;
    rename "Matte_Mtl";
    setAttr "Matte_Mtl.color" -type double3 0.5 0.5 0.5 ;
    select -r MatteSphere ;
    hyperShade -assign Matte_Mtl;
    select -cl ;
/////////////////////////////GLASS///////////////////////
    shadingNode -asShader aiStandard;
    rename "Glass_Mtl";


setAttr "Glass_Mtl.aiEnableMatte" 0;
setAttr "Glass_Mtl.aiMatteColorA" 0;
setAttr "Glass_Mtl.aiMatteColor" -type double3 0 0 0 ;
setAttr "Glass_Mtl.color" -type double3 0 0 0 ;
setAttr "Glass_Mtl.Kd" 0;
setAttr "Glass_Mtl.diffuseRoughness" 0;
setAttr "Glass_Mtl.Kb" 0;
setAttr "Glass_Mtl.FresnelAffectDiff" 1;
setAttr "Glass_Mtl.KsColor" -type double3 1 1 1 ;
setAttr "Glass_Mtl.Ks" 1;
setAttr "Glass_Mtl.specularBrdf" 2;
setAttr "Glass_Mtl.specularRoughness" 0;
setAttr "Glass_Mtl.specularFresnel" 1;
setAttr "Glass_Mtl.KrColor" -type double3 1 1 1 ;
setAttr "Glass_Mtl.Kr" 0;
setAttr "Glass_Mtl.KtColor" -type double3 1 1 1 ;
setAttr "Glass_Mtl.Kt" 1;
setAttr "Glass_Mtl.IOR" 1.5;
setAttr "Glass_Mtl.refractionRoughness" 0;
setAttr "Glass_Mtl.FresnelUseIOR" 1;
setAttr "Glass_Mtl.transmittance" -type double3 0.943 0.943 0.943 ;
setAttr "Glass_Mtl.opacity" -type double3 1 1 1 ;
    select -r GlassSphere ;
    hyperShade -assign Glass_Mtl;
    select -cl ;
//////////////////////////METAL///////////////////////////
    shadingNode -asShader aiStandard;
    rename "Metal_Mtl";
    select -r MetalSphere ;
    hyperShade -assign Metal_Mtl;
    select -cl ;
    print "ArnoldRenderer Selected_ShaderApply";
inViewMessage -amg ("<span style=\"color:#82C99A;\">Info:</span> ArnoldRenderer Selected and the Shader on Sphere Applied.") -dragKill -pos midCenterTop ;
}
if ( getAttr("defaultRenderGlobals.currentRenderer") == "vray" )
{
///////////////////////CHROME///////////////
    shadingNode -asShader VRayMtl;
    rename "Chrome_Mtl";
    setAttr "Chrome_Mtl.color" -type double3 0 0 0 ;
    setAttr "Chrome_Mtl.reflectionColor" -type double3 1 1 1 ;
    setAttr "Chrome_Mtl.useFresnel" 1;
    select -r ChromeSphere ;
    hyperShade -assign Chrome_Mtl;
    select -cl ;
/////////////////////MATTE///////////////////////
    shadingNode -asShader VRayMtl;
    rename "Matte_Mtl";
    select -r MatteSphere ;
    hyperShade -assign Matte_Mtl;
    select -cl ;
/////////////////////////////GLASS///////////////////////
    shadingNode -asShader VRayMtl;
    rename "Glass_Mtl";
    setAttr "Glass_Mtl.color" -type double3 0 0 0 ;
    setAttr "Glass_Mtl.reflectionColor" -type double3 1 1 1 ;
    setAttr "Glass_Mtl.reflectionGlossiness" 0.871795;
    setAttr "Glass_Mtl.refractionColor" -type double3 1 1 1 ;
    select -r GlassSphere ;
    hyperShade -assign Glass_Mtl;
    select -cl ;
//////////////////////////METAL///////////////////////////
    shadingNode -asShader VRayMtl;
    rename "Metal_Mtl";
    select -r MetalSphere ;
    hyperShade -assign Metal_Mtl;
    select -cl ;
print "VrayRenderer Selected_ShaderApply";
inViewMessage -amg ("<span style=\"color:#82C99A;\">Info:</span> VRayRenderer Selected and the Shader on Sphere Applied.") -dragKill -pos midCenterTop ;
    }
/////////////SOFTEN_EDGE/////////////////
    polySoftEdge -a 180 -ch 1 ChromeSphere;
    polySoftEdge -a 180 -ch 1 MatteSphere;
    polySoftEdge -a 180 -ch 1 GlassSphere;
    polySoftEdge -a 180 -ch 1 MetalSphere;
//////////////////POLYSMOOTH/////////////////
    select -r ChromeSphere ; 
    select -r MatteSphere ;
    select -r GlassSphere ;
    select -r MetalSphere ; 
    polySmooth  -mth 0 -dv 2 -bnr 1 -c 1 -kb 1 -ksb 1 -khe 0 -kt 1 -kmb 1 -suv 1 -peh 0 -sl 1 -dpe 1 -ps 0.1 -ro 1 -ch 1 ChromeSphere;
    polySmooth  -mth 0 -dv 2 -bnr 1 -c 1 -kb 1 -ksb 1 -khe 0 -kt 1 -kmb 1 -suv 1 -peh 0 -sl 1 -dpe 1 -ps 0.1 -ro 1 -ch 1 MatteSphere;
    polySmooth  -mth 0 -dv 2 -bnr 1 -c 1 -kb 1 -ksb 1 -khe 0 -kt 1 -kmb 1 -suv 1 -peh 0 -sl 1 -dpe 1 -ps 0.1 -ro 1 -ch 1 GlassSphere;
    polySmooth  -mth 0 -dv 2 -bnr 1 -c 1 -kb 1 -ksb 1 -khe 0 -kt 1 -kmb 1 -suv 1 -peh 0 -sl 1 -dpe 1 -ps 0.1 -ro 1 -ch 1 MetalSphere;
//////////////////DISPLAY_LAYERS//////////////////////
    if ( `objExists "IBL_SPHERE"` )
     {   select -r ChromeSphere ; 
         select -tgl MatteSphere ;
         select -tgl GlassSphere ;
         select -tgl MetalSphere ; 
         editDisplayLayerMembers -noRecurse IBL_SPHERE `ls -selection`;
         setAttr IBL_SPHERE.visibility 1; setAttr IBL_SPHERE.displayType 2; setAttr IBL_SPHERE.color 0;    
      }else{
            select -r ChromeSphere ; 
            select -tgl MatteSphere ;
            select -tgl GlassSphere ;
            select -tgl MetalSphere ; 
            createDisplayLayer -name "IBL_SPHERE" -number 1 -nr;
            setAttr IBL_SPHERE.visibility 1; setAttr IBL_SPHERE.displayType 2; setAttr IBL_SPHERE.color 0;
            }
///////////////CAST_SHADOWS/////////////////
    setAttr "MatteSphereShape.castsShadows" 0;
    setAttr "MatteSphereShape.visibleInRefractions" 0;
    setAttr "MatteSphereShape.visibleInReflections" 0;
    setAttr "ChromeSphereShape.castsShadows" 0;
    setAttr "ChromeSphereShape.visibleInReflections" 0;
    setAttr "ChromeSphereShape.visibleInRefractions" 0;
    setAttr "GlassSphereShape.castsShadows" 0;
    setAttr "GlassSphereShape.visibleInRefractions" 0;
    setAttr "GlassSphereShape.visibleInReflections" 0;
    setAttr "MetalSphereShape.castsShadows" 0;
    setAttr "MetalSphereShape.visibleInReflections" 0;
    setAttr "MetalSphereShape.visibleInRefractions" 0;
    select -cl  ;
//////////////////////CLEAN_HISTORY_SPHERE//////////////////////////
    select -r ChromeSphere ; 
    select -tgl MatteSphere ;
    select -tgl GlassSphere ;
    select -tgl MetalSphere ; 
    DeleteHistory;
    select -cl ;
////////////////////////////////////////////////
global proc Alpha()
{
        playbackOptions -min 1 -max 48 ;
    
//---------------------RESET IBL_Locator----------------------//
    if ( `objExists "Locator_Tool"` )
     {
        currentTime 1 ;
        CBdeleteConnection "Locator_Tool.ry";
      }else { 
             spaceLocator -p 0 0 0;
             rename "Locator_Tool";      
            } 
//---------------------CREATE IBL_Locator----------------------//
    select Locator_Tool;
    transformLimits -rx 0 0 -erx 1 1 Locator_Tool;
    transformLimits -rz 0 0 -erz 1 1 Locator_Tool;
//------START------//
    currentTime 1 ;
    channelBoxCommand -key;
    setKeyframe "Locator_Tool.ry";
//------END--------//
    currentTime 48 ;
    rotate -r -os 0 360 0 ;
    channelBoxCommand -key;
    setKeyframe "Locator_Tool.ry";
//---------------------KEY LINEAR ROTATE----------------//
    selectKey -clear ;
    selectKey -add -k -t 0 Locator_Tool_rotateY ;
    keyTangent -itt linear -ott linear;
    selectKey -clear ;
    selectKey -add -k -t 48 Locator_Tool_rotateY ;
    keyTangent -itt linear -ott linear;
    setAttr "defaultRenderGlobals.startFrame" 1;
    setAttr "defaultRenderGlobals.endFrame" 48;
    setAttr "defaultRenderGlobals.byFrameStep" 1;
    
    if ( `objExists "IBL_MR"` )      
    { 
 
     currentTime 1 ;
   CBdeleteConnection "IBL_MR.ry";
   
 currentTime 1 ;
    setAttr "IBL_MR.rotateY" 0;
    channelBoxCommand -key;
    setKeyframe "IBL_MR.ry";
  
    
    
    currentTime 48 ;
    setAttr "IBL_MR.rotateY" 360;
    channelBoxCommand -key;
    setKeyframe "IBL_MR.ry";
    
    selectKey -clear ;
selectKey -add -k -t 1 -t 48 IBL_MR_rotateY ;
keyTangent -itt linear -ott linear;

    currentTime 1 ;
}


if ( `objExists "IBL_VR"` )      
  { 
  
           if ( `objExists "VRayPlaceEnvTex1"` )      
            { 
            if (attributeExists("horRotation","VRayPlaceEnvTex1")) 
             {
    
               rename VRayPlaceEnvTex1 "IBL_VR_EnvTex" ;


	 currentTime 1 ;
    setAttr "IBL_VR_EnvTex.horRotation" 0;
setKeyframe { "IBL_VR_EnvTex.hr" };
  

    
    currentTime 2 ;
    setAttr "IBL_VR_EnvTex.horRotation" 360;
setKeyframe { "IBL_VR_EnvTex.hr" };

    keyframe -option over -index 1 -absolute -timeChange 48 IBL_VR_EnvTex_horRotation ;
            selectKey -clear ;
selectKey -add -k -t 1 -t 48 IBL_VR_EnvTex_horRotation ;
keyTangent -itt linear -ott linear;
currentTime 1 ;
}
    
              }else if (attributeExists("horRotation","IBL_VR_EnvTex")) 
                     {
                                 currentTime 1 ;
        CBdeleteConnection "IBL_VR_EnvTex.hr";
        	 currentTime 1 ;
    setAttr "IBL_VR_EnvTex.horRotation" 0;
setKeyframe { "IBL_VR_EnvTex.hr" };
  

    
    currentTime 2 ;
    setAttr "IBL_VR_EnvTex.horRotation" 360;
setKeyframe { "IBL_VR_EnvTex.hr" };
                       keyframe -option over -index 1 -absolute -timeChange 48 IBL_VR_EnvTex_horRotation ;
                     selectKey -clear ;
selectKey -add -k -t 1 -t 48 IBL_VR_EnvTex_horRotation ;
keyTangent -itt linear -ott linear;
                     }
 currentTime 1 ;
   }

 if ( `objExists "IBL_AR"` )      
    {  
   currentTime 1 ;
   CBdeleteConnection "IBL_AR.ry";
   
 currentTime 1 ;
    setAttr "IBL_AR.rotateY" 0;
    channelBoxCommand -key;
    setKeyframe "IBL_AR.ry";

 currentTime 48 ;
    setAttr "IBL_AR.rotateY" 360;
    channelBoxCommand -key;
    setKeyframe "IBL_AR.ry";
    
        selectKey -clear ;
selectKey -add -k -t 1 -t 48 IBL_AR.rotateY ;
keyTangent -itt linear -ott linear;
    currentTime 1 ;
}


 if ( `objExists "sunDirection"` )      
    {  
   currentTime 1 ;
   CBdeleteConnection "sunDirection.ry";
   
 currentTime 1 ;
    setAttr "sunDirection.rotateY" 0;
    channelBoxCommand -key;
    setKeyframe "sunDirection.ry";
  
  
    
    currentTime 48 ;
    setAttr "sunDirection.rotateY" 360;
    channelBoxCommand -key;
    setKeyframe "sunDirection.ry";
    
            selectKey -clear ;
selectKey -add -k -t 1 -t 48 sunDirection.rotateY ;
keyTangent -itt linear -ott linear;


    currentTime 1 ;
}


 if ( `objExists "SSK_VR"` )      
    {  
   
         currentTime 1 ;
   CBdeleteConnection "|SSK_VR.ry";
    
 currentTime 1 ;
    setAttr "|SSK_VR.rotateY" 0;
    channelBoxCommand -key;
    setKeyframe "SSK_VR.ry";
  
 
    
    currentTime 48 ;
    setAttr "|SSK_VR.rotateY" 360;
    channelBoxCommand -key;
    setKeyframe "SSK_VR.ry";
    
                selectKey -clear ;
selectKey -add -k -t 1 -t 48 |SSK_VR.rotateY ;
keyTangent -itt linear -ott linear;

    currentTime 1 ;
}

 if ( `objExists "SSK_AR"` )      
    { 
   currentTime 1 ;
   CBdeleteConnection "IBL_AR.ry";
   
 currentTime 1 ;
    setAttr "IBL_AR.rotateY" 0;
    channelBoxCommand -key;
    setKeyframe "IBL_AR.ry";

 currentTime 48 ;
    setAttr "IBL_AR.rotateY" 360;
    channelBoxCommand -key;
    setKeyframe "IBL_AR.ry";
    
        selectKey -clear ;
selectKey -add -k -t 1 -t 48 IBL_AR.rotateY ;
keyTangent -itt linear -ott linear;
    currentTime 1 ;
    } 
   
   
print "Locator_Tool Rotation on 2sec";  
inViewMessage -amg ("<span style=\"color:#82C99A;\">Info:</span> Locator_Tool Rotation.Y Set on 2sec.") -dragKill -pos midCenterTop ;
     currentTime 1 ;
    }
////////////////////////////////////////////////
global proc Beta()
{
        playbackOptions -min 1 -max 96 ;
    
//---------------------RESET IBL_Locator----------------------//
    if ( `objExists "Locator_Tool"` )
    {
        currentTime 1 ;
        CBdeleteConnection "Locator_Tool.ry";
    }else { 
           spaceLocator -p 0 0 0;
           rename "Locator_Tool";      
          } 
//---------------------CREATE IBL_Locator----------------------//
    select Locator_Tool;
    transformLimits -rx 0 0 -erx 1 1 Locator_Tool;
    transformLimits -rz 0 0 -erz 1 1 Locator_Tool;
//------START------//
    currentTime 1 ;
    channelBoxCommand -key;
    setKeyframe "Locator_Tool.ry";
//------END--------//
    currentTime 96 ;
    rotate -r -os 0 360 0 ;
    channelBoxCommand -key;
    setKeyframe "Locator_Tool.ry";
//---------------------KEY LINEAR ROTATE----------------//
    selectKey -clear ;
    selectKey -add -k -t 0 Locator_Tool_rotateY ;
    keyTangent -itt linear -ott linear;
    selectKey -clear ;
    selectKey -add -k -t 96 Locator_Tool_rotateY ;
    keyTangent -itt linear -ott linear;
    setAttr "defaultRenderGlobals.startFrame" 1;
    setAttr "defaultRenderGlobals.endFrame" 96;
    setAttr "defaultRenderGlobals.byFrameStep" 1;
    if ( `objExists "IBL_MR"` )      
    { 
 
     currentTime 1 ;
   CBdeleteConnection "IBL_MR.ry";
   
 currentTime 1 ;
    setAttr "IBL_MR.rotateY" 0;
    channelBoxCommand -key;
    setKeyframe "IBL_MR.ry";
  
    
    
    currentTime 96 ;
    setAttr "IBL_MR.rotateY" 360;
    channelBoxCommand -key;
    setKeyframe "IBL_MR.ry";
    
    selectKey -clear ;
selectKey -add -k -t 1 -t 96 IBL_MR_rotateY ;
keyTangent -itt linear -ott linear;

    currentTime 1 ;
}


if ( `objExists "IBL_VR"` )      
  { 
  
           if ( `objExists "VRayPlaceEnvTex1"` )      
            { 
            if (attributeExists("horRotation","VRayPlaceEnvTex1")) 
             {
    
               rename VRayPlaceEnvTex1 "IBL_VR_EnvTex" ;


	 currentTime 1 ;
    setAttr "IBL_VR_EnvTex.horRotation" 0;
setKeyframe { "IBL_VR_EnvTex.hr" };
  

    
    currentTime 2 ;
    setAttr "IBL_VR_EnvTex.horRotation" 360;
setKeyframe { "IBL_VR_EnvTex.hr" };

    keyframe -option over -index 1 -absolute -timeChange 96 IBL_VR_EnvTex_horRotation ;
            selectKey -clear ;
selectKey -add -k -t 1 -t 96 IBL_VR_EnvTex_horRotation ;
keyTangent -itt linear -ott linear;
currentTime 1 ;
}
    
              }else if (attributeExists("horRotation","IBL_VR_EnvTex")) 
                     {
                                 currentTime 1 ;
        CBdeleteConnection "IBL_VR_EnvTex.hr";
        	 currentTime 1 ;
    setAttr "IBL_VR_EnvTex.horRotation" 0;
setKeyframe { "IBL_VR_EnvTex.hr" };
  

    
    currentTime 2 ;
    setAttr "IBL_VR_EnvTex.horRotation" 360;
setKeyframe { "IBL_VR_EnvTex.hr" };
                       keyframe -option over -index 1 -absolute -timeChange 96 IBL_VR_EnvTex_horRotation ;
                     selectKey -clear ;
selectKey -add -k -t 1 -t 96 IBL_VR_EnvTex_horRotation ;
keyTangent -itt linear -ott linear;
                     }
 currentTime 1 ;
   }

 if ( `objExists "IBL_AR"` )      
    {  
   currentTime 1 ;
   CBdeleteConnection "IBL_AR.ry";
   
 currentTime 1 ;
    setAttr "IBL_AR.rotateY" 0;
    channelBoxCommand -key;
    setKeyframe "IBL_AR.ry";

 currentTime 96 ;
    setAttr "IBL_AR.rotateY" 360;
    channelBoxCommand -key;
    setKeyframe "IBL_AR.ry";
    
        selectKey -clear ;
selectKey -add -k -t 1 -t 96 IBL_AR.rotateY ;
keyTangent -itt linear -ott linear;
    currentTime 1 ;
}


 if ( `objExists "sunDirection"` )      
    {  
   currentTime 1 ;
   CBdeleteConnection "sunDirection.ry";
   
 currentTime 1 ;
    setAttr "sunDirection.rotateY" 0;
    channelBoxCommand -key;
    setKeyframe "sunDirection.ry";
  
  
    
    currentTime 96 ;
    setAttr "sunDirection.rotateY" 360;
    channelBoxCommand -key;
    setKeyframe "sunDirection.ry";
    
            selectKey -clear ;
selectKey -add -k -t 1 -t 96 sunDirection.rotateY ;
keyTangent -itt linear -ott linear;


    currentTime 1 ;
}


 if ( `objExists "SSK_VR"` )      
    {  
   
         currentTime 1 ;
   CBdeleteConnection "|SSK_VR.ry";
    
 currentTime 1 ;
    setAttr "|SSK_VR.rotateY" 0;
    channelBoxCommand -key;
    setKeyframe "SSK_VR.ry";
  
 
    
    currentTime 96 ;
    setAttr "|SSK_VR.rotateY" 360;
    channelBoxCommand -key;
    setKeyframe "SSK_VR.ry";
    
                selectKey -clear ;
selectKey -add -k -t 1 -t 96 |SSK_VR.rotateY ;
keyTangent -itt linear -ott linear;

    currentTime 1 ;
}

 if ( `objExists "SSK_AR"` )      
    { 
   currentTime 1 ;
   CBdeleteConnection "IBL_AR.ry";
   
 currentTime 1 ;
    setAttr "IBL_AR.rotateY" 0;
    channelBoxCommand -key;
    setKeyframe "IBL_AR.ry";

 currentTime 96 ;
    setAttr "IBL_AR.rotateY" 360;
    channelBoxCommand -key;
    setKeyframe "IBL_AR.ry";
    
        selectKey -clear ;
selectKey -add -k -t 1 -t 96 IBL_AR.rotateY ;
keyTangent -itt linear -ott linear;
    currentTime 1 ;
    } 
   
print "Locator_Tool RotationY on 4sec";
inViewMessage -amg ("<span style=\"color:#82C99A;\">Info:</span> Locator_Tool Rotation.Y Set on 4sec.") -dragKill -pos midCenterTop ;
     currentTime 1 ;
}
////////////////////////////////////////////////
global proc Charly()
{
        playbackOptions -min 1 -max 120 ;
    
//---------------------RESET IBL_Locator----------------------//
    if ( `objExists "Locator_Tool"` )
    {
        currentTime 1 ;
        CBdeleteConnection "Locator_Tool.ry";
    }else { 
        spaceLocator -p 0 0 0;
        rename "Locator_Tool";      
    } 
//---------------------CREATE IBL_Locator----------------------//
    select Locator_Tool;
    transformLimits -rx 0 0 -erx 1 1 Locator_Tool;
    transformLimits -rz 0 0 -erz 1 1 Locator_Tool;
//------START------//
    currentTime 1 ;
    channelBoxCommand -key;
    setKeyframe "Locator_Tool.ry";
//------END--------//
    currentTime 120 ;
    rotate -r -os 0 360 0 ;
    channelBoxCommand -key;
    setKeyframe "Locator_Tool.ry";
//---------------------KEY LINEAR ROTATE----------------//
    selectKey -clear ;
    selectKey -add -k -t 0 Locator_Tool_rotateY ;
    keyTangent -itt linear -ott linear;
    selectKey -clear ;
    selectKey -add -k -t 120 Locator_Tool_rotateY ;
    keyTangent -itt linear -ott linear;
    setAttr "defaultRenderGlobals.startFrame" 1;
    setAttr "defaultRenderGlobals.endFrame" 120;
    setAttr "defaultRenderGlobals.byFrameStep" 1;
    if ( `objExists "IBL_MR"` )      
    { 
 
     currentTime 1 ;
   CBdeleteConnection "IBL_MR.ry";
   
 currentTime 1 ;
    setAttr "IBL_MR.rotateY" 0;
    channelBoxCommand -key;
    setKeyframe "IBL_MR.ry";
  
    
    
    currentTime 120 ;
    setAttr "IBL_MR.rotateY" 360;
    channelBoxCommand -key;
    setKeyframe "IBL_MR.ry";
    
    selectKey -clear ;
selectKey -add -k -t 1 -t 120 IBL_MR_rotateY ;
keyTangent -itt linear -ott linear;

    currentTime 1 ;
}


if ( `objExists "IBL_VR"` )      
  { 
  
           if ( `objExists "VRayPlaceEnvTex1"` )      
            { 
            if (attributeExists("horRotation","VRayPlaceEnvTex1")) 
             {
    
               rename VRayPlaceEnvTex1 "IBL_VR_EnvTex" ;


	 currentTime 1 ;
    setAttr "IBL_VR_EnvTex.horRotation" 0;
setKeyframe { "IBL_VR_EnvTex.hr" };
  

    
    currentTime 2 ;
    setAttr "IBL_VR_EnvTex.horRotation" 360;
setKeyframe { "IBL_VR_EnvTex.hr" };

    keyframe -option over -index 1 -absolute -timeChange 120 IBL_VR_EnvTex_horRotation ;
            selectKey -clear ;
selectKey -add -k -t 1 -t 120 IBL_VR_EnvTex_horRotation ;
keyTangent -itt linear -ott linear;
currentTime 1 ;
}
    
              }else if (attributeExists("horRotation","IBL_VR_EnvTex")) 
                     {
                                 currentTime 1 ;
        CBdeleteConnection "IBL_VR_EnvTex.hr";
        	 currentTime 1 ;
    setAttr "IBL_VR_EnvTex.horRotation" 0;
setKeyframe { "IBL_VR_EnvTex.hr" };
  

    
    currentTime 2 ;
    setAttr "IBL_VR_EnvTex.horRotation" 360;
setKeyframe { "IBL_VR_EnvTex.hr" };
                       keyframe -option over -index 1 -absolute -timeChange 120 IBL_VR_EnvTex_horRotation ;
                     selectKey -clear ;
selectKey -add -k -t 1 -t 120 IBL_VR_EnvTex_horRotation ;
keyTangent -itt linear -ott linear;
                     }
 currentTime 1 ;
   }

 if ( `objExists "IBL_AR"` )      
    {  
   currentTime 1 ;
   CBdeleteConnection "IBL_AR.ry";
   
 currentTime 1 ;
    setAttr "IBL_AR.rotateY" 0;
    channelBoxCommand -key;
    setKeyframe "IBL_AR.ry";

 currentTime 120 ;
    setAttr "IBL_AR.rotateY" 360;
    channelBoxCommand -key;
    setKeyframe "IBL_AR.ry";
    
        selectKey -clear ;
selectKey -add -k -t 1 -t 120 IBL_AR.rotateY ;
keyTangent -itt linear -ott linear;
    currentTime 1 ;
}


 if ( `objExists "sunDirection"` )      
    {  
   currentTime 1 ;
   CBdeleteConnection "sunDirection.ry";
   
 currentTime 1 ;
    setAttr "sunDirection.rotateY" 0;
    channelBoxCommand -key;
    setKeyframe "sunDirection.ry";
  
  
    
    currentTime 120 ;
    setAttr "sunDirection.rotateY" 360;
    channelBoxCommand -key;
    setKeyframe "sunDirection.ry";
    
            selectKey -clear ;
selectKey -add -k -t 1 -t 120 sunDirection.rotateY ;
keyTangent -itt linear -ott linear;


    currentTime 1 ;
}


 if ( `objExists "SSK_VR"` )      
    {  
   
         currentTime 1 ;
   CBdeleteConnection "|SSK_VR.ry";
    
 currentTime 1 ;
    setAttr "|SSK_VR.rotateY" 0;
    channelBoxCommand -key;
    setKeyframe "SSK_VR.ry";
  
 
    
    currentTime 120 ;
    setAttr "|SSK_VR.rotateY" 360;
    channelBoxCommand -key;
    setKeyframe "SSK_VR.ry";
    
                selectKey -clear ;
selectKey -add -k -t 1 -t 120 |SSK_VR.rotateY ;
keyTangent -itt linear -ott linear;

    currentTime 1 ;
}

 if ( `objExists "SSK_AR"` )      
    { 
   currentTime 1 ;
   CBdeleteConnection "IBL_AR.ry";
   
 currentTime 1 ;
    setAttr "IBL_AR.rotateY" 0;
    channelBoxCommand -key;
    setKeyframe "IBL_AR.ry";

 currentTime 120 ;
    setAttr "IBL_AR.rotateY" 360;
    channelBoxCommand -key;
    setKeyframe "IBL_AR.ry";
    
        selectKey -clear ;
selectKey -add -k -t 1 -t 120 IBL_AR.rotateY ;
keyTangent -itt linear -ott linear;
    currentTime 1 ;
    } 
   
print "Locator_Tool RotationY on 5sec";  
inViewMessage -amg ("<span style=\"color:#82C99A;\">Info:</span> Locator_Tool Rotation.Y Set on 5sec.") -dragKill -pos midCenterTop ;
     currentTime 1 ;
}
////////////////////////////////////////////////
global proc Delta()
{
        playbackOptions -min 1 -max 144 ;
//---------------------RESET IBL_Locator----------------------//
    if ( `objExists "Locator_Tool"` )
     {
        currentTime 1 ;
        CBdeleteConnection "Locator_Tool.ry";
     }else { 
            spaceLocator -p 0 0 0;
            rename "Locator_Tool";      
           } 
//---------------------CREATE IBL_Locator----------------------//
    select Locator_Tool;
    transformLimits -rx 0 0 -erx 1 1 Locator_Tool;
    transformLimits -rz 0 0 -erz 1 1 Locator_Tool;
//------START------//
    currentTime 1 ;
    channelBoxCommand -key;
    setKeyframe "Locator_Tool.ry";
//------END--------//
    currentTime 144 ;
    rotate -r -os 0 360 0 ;
    channelBoxCommand -key;
    setKeyframe "Locator_Tool.ry";
//---------------------KEY LINEAR ROTATE----------------//
    selectKey -clear ;
    selectKey -add -k -t 0 Locator_Tool_rotateY ;
    keyTangent -itt linear -ott linear;
    selectKey -clear ;
    selectKey -add -k -t 144 Locator_Tool_rotateY ;
    keyTangent -itt linear -ott linear;
    setAttr "defaultRenderGlobals.startFrame" 1;
    setAttr "defaultRenderGlobals.endFrame" 144;
    setAttr "defaultRenderGlobals.byFrameStep" 1;
    if ( `objExists "IBL_MR"` )      
    { 
 
     currentTime 1 ;
   CBdeleteConnection "IBL_MR.ry";
   
 currentTime 1 ;
    setAttr "IBL_MR.rotateY" 0;
    channelBoxCommand -key;
    setKeyframe "IBL_MR.ry";
  
    
    
    currentTime 144 ;
    setAttr "IBL_MR.rotateY" 360;
    channelBoxCommand -key;
    setKeyframe "IBL_MR.ry";
    
    selectKey -clear ;
selectKey -add -k -t 1 -t 144 IBL_MR_rotateY ;
keyTangent -itt linear -ott linear;

    currentTime 1 ;
}


if ( `objExists "IBL_VR"` )      
  { 
  
           if ( `objExists "VRayPlaceEnvTex1"` )      
            { 
            if (attributeExists("horRotation","VRayPlaceEnvTex1")) 
             {
    
               rename VRayPlaceEnvTex1 "IBL_VR_EnvTex" ;


	 currentTime 1 ;
    setAttr "IBL_VR_EnvTex.horRotation" 0;
setKeyframe { "IBL_VR_EnvTex.hr" };
  

    
    currentTime 2 ;
    setAttr "IBL_VR_EnvTex.horRotation" 360;
setKeyframe { "IBL_VR_EnvTex.hr" };

    keyframe -option over -index 1 -absolute -timeChange 144 IBL_VR_EnvTex_horRotation ;
            selectKey -clear ;
selectKey -add -k -t 1 -t 144 IBL_VR_EnvTex_horRotation ;
keyTangent -itt linear -ott linear;
currentTime 1 ;
}
    
              }else if (attributeExists("horRotation","IBL_VR_EnvTex")) 
                     {
                                 currentTime 1 ;
        CBdeleteConnection "IBL_VR_EnvTex.hr";
        	 currentTime 1 ;
    setAttr "IBL_VR_EnvTex.horRotation" 0;
setKeyframe { "IBL_VR_EnvTex.hr" };
  

    
    currentTime 2 ;
    setAttr "IBL_VR_EnvTex.horRotation" 360;
setKeyframe { "IBL_VR_EnvTex.hr" };
                       keyframe -option over -index 1 -absolute -timeChange 144 IBL_VR_EnvTex_horRotation ;
                     selectKey -clear ;
selectKey -add -k -t 1 -t 144 IBL_VR_EnvTex_horRotation ;
keyTangent -itt linear -ott linear;
                     }
 currentTime 1 ;
   }

 if ( `objExists "IBL_AR"` )      
    {  
   currentTime 1 ;
   CBdeleteConnection "IBL_AR.ry";
   
 currentTime 1 ;
    setAttr "IBL_AR.rotateY" 0;
    channelBoxCommand -key;
    setKeyframe "IBL_AR.ry";

 currentTime 144 ;
    setAttr "IBL_AR.rotateY" 360;
    channelBoxCommand -key;
    setKeyframe "IBL_AR.ry";
    
        selectKey -clear ;
selectKey -add -k -t 1 -t 144 IBL_AR.rotateY ;
keyTangent -itt linear -ott linear;
    currentTime 1 ;
}


 if ( `objExists "sunDirection"` )      
    {  
   currentTime 1 ;
   CBdeleteConnection "sunDirection.ry";
   
 currentTime 1 ;
    setAttr "sunDirection.rotateY" 0;
    channelBoxCommand -key;
    setKeyframe "sunDirection.ry";
  
  
    
    currentTime 144 ;
    setAttr "sunDirection.rotateY" 360;
    channelBoxCommand -key;
    setKeyframe "sunDirection.ry";
    
            selectKey -clear ;
selectKey -add -k -t 1 -t 144 sunDirection.rotateY ;
keyTangent -itt linear -ott linear;


    currentTime 1 ;
}


 if ( `objExists "SSK_VR"` )      
    {  
   
         currentTime 1 ;
   CBdeleteConnection "|SSK_VR.ry";
    
 currentTime 1 ;
    setAttr "|SSK_VR.rotateY" 0;
    channelBoxCommand -key;
    setKeyframe "SSK_VR.ry";
  
 
    
    currentTime 144 ;
    setAttr "|SSK_VR.rotateY" 360;
    channelBoxCommand -key;
    setKeyframe "SSK_VR.ry";
    
                selectKey -clear ;
selectKey -add -k -t 1 -t 144 |SSK_VR.rotateY ;
keyTangent -itt linear -ott linear;

    currentTime 1 ;
}

 if ( `objExists "SSK_AR"` )      
    { 
   currentTime 1 ;
   CBdeleteConnection "IBL_AR.ry";
   
 currentTime 1 ;
    setAttr "IBL_AR.rotateY" 0;
    channelBoxCommand -key;
    setKeyframe "IBL_AR.ry";

 currentTime 144 ;
    setAttr "IBL_AR.rotateY" 360;
    channelBoxCommand -key;
    setKeyframe "IBL_AR.ry";
    
        selectKey -clear ;
selectKey -add -k -t 1 -t 144 IBL_AR.rotateY ;
keyTangent -itt linear -ott linear;
    currentTime 1 ;
    } 
   
print "Locator_Tool RotationY on 6sec";  
inViewMessage -amg ("<span style=\"color:#82C99A;\">Info:</span> Locator_Tool Rotation.Y Set on 6sec.") -dragKill -pos midCenterTop ;
 currentTime 1 ;
}
////////////////////////////////////////////////
global proc Echo()
{
        playbackOptions -min 1 -max 192 ;
    
//---------------------RESET IBL_Locator----------------------//
    if ( `objExists "Locator_Tool"` )
     {
        currentTime 1 ;
        CBdeleteConnection "Locator_Tool.ry";
     }else { 
            spaceLocator -p 0 0 0;
            rename "Locator_Tool";      
           } 
//---------------------CREATE IBL_Locator----------------------//
    select Locator_Tool;
    transformLimits -rx 0 0 -erx 1 1 Locator_Tool;
    transformLimits -rz 0 0 -erz 1 1 Locator_Tool;
//------START------//
    currentTime 1 ;
    channelBoxCommand -key;
    setKeyframe "Locator_Tool.ry";
//------END--------//
    currentTime 192 ;
    rotate -r -os 0 360 0 ;
    channelBoxCommand -key;
    setKeyframe "Locator_Tool.ry";
//---------------------KEY LINEAR ROTATE----------------//
    selectKey -clear ;
    selectKey -add -k -t 0 Locator_Tool_rotateY ;
    keyTangent -itt linear -ott linear;
    selectKey -clear ;
    selectKey -add -k -t 192 Locator_Tool_rotateY ;
    keyTangent -itt linear -ott linear;
    setAttr "defaultRenderGlobals.startFrame" 1;
    setAttr "defaultRenderGlobals.endFrame" 192;
    setAttr "defaultRenderGlobals.byFrameStep" 1;
    if ( `objExists "IBL_MR"` )      
    { 
 
     currentTime 1 ;
   CBdeleteConnection "IBL_MR.ry";
   
 currentTime 1 ;
    setAttr "IBL_MR.rotateY" 0;
    channelBoxCommand -key;
    setKeyframe "IBL_MR.ry";
  
    
    
    currentTime 192 ;
    setAttr "IBL_MR.rotateY" 360;
    channelBoxCommand -key;
    setKeyframe "IBL_MR.ry";
    
    selectKey -clear ;
selectKey -add -k -t 1 -t 192 IBL_MR_rotateY ;
keyTangent -itt linear -ott linear;

    currentTime 1 ;
}


if ( `objExists "IBL_VR"` )      
  { 
  
           if ( `objExists "VRayPlaceEnvTex1"` )      
            { 
            if (attributeExists("horRotation","VRayPlaceEnvTex1")) 
             {
    
               rename VRayPlaceEnvTex1 "IBL_VR_EnvTex" ;


	 currentTime 1 ;
    setAttr "IBL_VR_EnvTex.horRotation" 0;
setKeyframe { "IBL_VR_EnvTex.hr" };
  

    
    currentTime 2 ;
    setAttr "IBL_VR_EnvTex.horRotation" 360;
setKeyframe { "IBL_VR_EnvTex.hr" };

    keyframe -option over -index 1 -absolute -timeChange 192 IBL_VR_EnvTex_horRotation ;
            selectKey -clear ;
selectKey -add -k -t 1 -t 192 IBL_VR_EnvTex_horRotation ;
keyTangent -itt linear -ott linear;
currentTime 1 ;
}
    
              }else if (attributeExists("horRotation","IBL_VR_EnvTex")) 
                     {
                                 currentTime 1 ;
        CBdeleteConnection "IBL_VR_EnvTex.hr";
        	 currentTime 1 ;
    setAttr "IBL_VR_EnvTex.horRotation" 0;
setKeyframe { "IBL_VR_EnvTex.hr" };
  

    
    currentTime 2 ;
    setAttr "IBL_VR_EnvTex.horRotation" 360;
setKeyframe { "IBL_VR_EnvTex.hr" };
                       keyframe -option over -index 1 -absolute -timeChange 192 IBL_VR_EnvTex_horRotation ;
                     selectKey -clear ;
selectKey -add -k -t 1 -t 192 IBL_VR_EnvTex_horRotation ;
keyTangent -itt linear -ott linear;
                     }
 currentTime 1 ;
   }

 if ( `objExists "IBL_AR"` )      
    {  
   currentTime 1 ;
   CBdeleteConnection "IBL_AR.ry";
   
 currentTime 1 ;
    setAttr "IBL_AR.rotateY" 0;
    channelBoxCommand -key;
    setKeyframe "IBL_AR.ry";

 currentTime 192 ;
    setAttr "IBL_AR.rotateY" 360;
    channelBoxCommand -key;
    setKeyframe "IBL_AR.ry";
    
        selectKey -clear ;
selectKey -add -k -t 1 -t 192 IBL_AR.rotateY ;
keyTangent -itt linear -ott linear;
    currentTime 1 ;
}


 if ( `objExists "sunDirection"` )      
    {  
   currentTime 1 ;
   CBdeleteConnection "sunDirection.ry";
   
 currentTime 1 ;
    setAttr "sunDirection.rotateY" 0;
    channelBoxCommand -key;
    setKeyframe "sunDirection.ry";
  
  
    
    currentTime 192 ;
    setAttr "sunDirection.rotateY" 360;
    channelBoxCommand -key;
    setKeyframe "sunDirection.ry";
    
            selectKey -clear ;
selectKey -add -k -t 1 -t 192 sunDirection.rotateY ;
keyTangent -itt linear -ott linear;


    currentTime 1 ;
}


 if ( `objExists "SSK_VR"` )      
    {  
   
         currentTime 1 ;
   CBdeleteConnection "|SSK_VR.ry";
    
 currentTime 1 ;
    setAttr "|SSK_VR.rotateY" 0;
    channelBoxCommand -key;
    setKeyframe "SSK_VR.ry";
  
 
    
    currentTime 192 ;
    setAttr "|SSK_VR.rotateY" 360;
    channelBoxCommand -key;
    setKeyframe "SSK_VR.ry";
    
                selectKey -clear ;
selectKey -add -k -t 1 -t 192 |SSK_VR.rotateY ;
keyTangent -itt linear -ott linear;

    currentTime 1 ;
}

 if ( `objExists "SSK_AR"` )      
    { 
   currentTime 1 ;
   CBdeleteConnection "IBL_AR.ry";
   
 currentTime 1 ;
    setAttr "IBL_AR.rotateY" 0;
    channelBoxCommand -key;
    setKeyframe "IBL_AR.ry";

 currentTime 192 ;
    setAttr "IBL_AR.rotateY" 360;
    channelBoxCommand -key;
    setKeyframe "IBL_AR.ry";
    
        selectKey -clear ;
selectKey -add -k -t 1 -t 192 IBL_AR.rotateY ;
keyTangent -itt linear -ott linear;
    currentTime 1 ;
    } 
   
print "Locator_Tool RotationY on 8sec"; 
inViewMessage -amg ("<span style=\"color:#82C99A;\">Info:</span> Locator_Tool Rotation.Y Set on 8sec.") -dragKill -pos midCenterTop ;
     currentTime 1 ;
}
////////////////////////////////////////////////
global proc Fox()
{
        playbackOptions -min 1 -max 240 ;
    
//---------------------RESET IBL_Locator----------------------//
    if ( `objExists "Locator_Tool"` )
     {
        currentTime 1 ;
        CBdeleteConnection "Locator_Tool.ry";
     }else { 
            spaceLocator -p 0 0 0;
            rename "Locator_Tool";      
           } 
//---------------------CREATE IBL_Locator----------------------//
    select Locator_Tool; 
    transformLimits -rx 0 0 -erx 1 1 Locator_Tool;
    transformLimits -rz 0 0 -erz 1 1 Locator_Tool;
//------START------//
    currentTime 1 ;
    channelBoxCommand -key;
    setKeyframe "Locator_Tool";
//------END--------//
    currentTime 240 ;
    rotate -r -os 0 360 0 ;
    channelBoxCommand -key;
    setKeyframe "Locator_Tool";
//---------------------KEY LINEAR ROTATE----------------//
    selectKey -clear ;
    selectKey -add -k -t 0 Locator_Tool_rotateY ;
    keyTangent -itt linear -ott linear;
    selectKey -clear ;
    selectKey -add -k -t 240 Locator_Tool_rotateY ;
    keyTangent -itt linear -ott linear; 
    setAttr "defaultRenderGlobals.startFrame" 1;
    setAttr "defaultRenderGlobals.endFrame" 240;
    setAttr "defaultRenderGlobals.byFrameStep" 1;
    if ( `objExists "IBL_MR"` )      
    { 
 
     currentTime 1 ;
   CBdeleteConnection "IBL_MR.ry";
   
 currentTime 1 ;
    setAttr "IBL_MR.rotateY" 0;
    channelBoxCommand -key;
    setKeyframe "IBL_MR.ry";
  
    
    
    currentTime 240 ;
    setAttr "IBL_MR.rotateY" 360;
    channelBoxCommand -key;
    setKeyframe "IBL_MR.ry";
    
    selectKey -clear ;
selectKey -add -k -t 1 -t 240 IBL_MR_rotateY ;
keyTangent -itt linear -ott linear;

    currentTime 1 ;
}


if ( `objExists "IBL_VR"` )      
  { 
  
           if ( `objExists "VRayPlaceEnvTex1"` )      
            { 
            if (attributeExists("horRotation","VRayPlaceEnvTex1")) 
             {
    
               rename VRayPlaceEnvTex1 "IBL_VR_EnvTex" ;


	 currentTime 1 ;
    setAttr "IBL_VR_EnvTex.horRotation" 0;
setKeyframe { "IBL_VR_EnvTex.hr" };
  

    
    currentTime 2 ;
    setAttr "IBL_VR_EnvTex.horRotation" 360;
setKeyframe { "IBL_VR_EnvTex.hr" };

    keyframe -option over -index 1 -absolute -timeChange 240 IBL_VR_EnvTex_horRotation ;
            selectKey -clear ;
selectKey -add -k -t 1 -t 240 IBL_VR_EnvTex_horRotation ;
keyTangent -itt linear -ott linear;
currentTime 1 ;
}
    
              }else if (attributeExists("horRotation","IBL_VR_EnvTex")) 
                     {
                                 currentTime 1 ;
        CBdeleteConnection "IBL_VR_EnvTex.hr";
        	 currentTime 1 ;
    setAttr "IBL_VR_EnvTex.horRotation" 0;
setKeyframe { "IBL_VR_EnvTex.hr" };
  

    
    currentTime 2 ;
    setAttr "IBL_VR_EnvTex.horRotation" 360;
setKeyframe { "IBL_VR_EnvTex.hr" };
                       keyframe -option over -index 1 -absolute -timeChange 240 IBL_VR_EnvTex_horRotation ;
                     selectKey -clear ;
selectKey -add -k -t 1 -t 240 IBL_VR_EnvTex_horRotation ;
keyTangent -itt linear -ott linear;
                     }
 currentTime 1 ;
   }

 if ( `objExists "IBL_AR"` )      
    {  
   currentTime 1 ;
   CBdeleteConnection "IBL_AR.ry";
   
 currentTime 1 ;
    setAttr "IBL_AR.rotateY" 0;
    channelBoxCommand -key;
    setKeyframe "IBL_AR.ry";

 currentTime 240 ;
    setAttr "IBL_AR.rotateY" 360;
    channelBoxCommand -key;
    setKeyframe "IBL_AR.ry";
    
        selectKey -clear ;
selectKey -add -k -t 1 -t 240 IBL_AR.rotateY ;
keyTangent -itt linear -ott linear;
    currentTime 1 ;
}


 if ( `objExists "sunDirection"` )      
    {  
   currentTime 1 ;
   CBdeleteConnection "sunDirection.ry";
   
 currentTime 1 ;
    setAttr "sunDirection.rotateY" 0;
    channelBoxCommand -key;
    setKeyframe "sunDirection.ry";
  
  
    
    currentTime 240 ;
    setAttr "sunDirection.rotateY" 360;
    channelBoxCommand -key;
    setKeyframe "sunDirection.ry";
    
            selectKey -clear ;
selectKey -add -k -t 1 -t 240 sunDirection.rotateY ;
keyTangent -itt linear -ott linear;


    currentTime 1 ;
}


 if ( `objExists "SSK_VR"` )      
    {  
   
         currentTime 1 ;
   CBdeleteConnection "|SSK_VR.ry";
    
 currentTime 1 ;
    setAttr "|SSK_VR.rotateY" 0;
    channelBoxCommand -key;
    setKeyframe "SSK_VR.ry";
  
 
    
    currentTime 240 ;
    setAttr "|SSK_VR.rotateY" 360;
    channelBoxCommand -key;
    setKeyframe "SSK_VR.ry";
    
                selectKey -clear ;
selectKey -add -k -t 1 -t 240 |SSK_VR.rotateY ;
keyTangent -itt linear -ott linear;

    currentTime 1 ;
}

 if ( `objExists "SSK_AR"` )      
    { 
   currentTime 1 ;
   CBdeleteConnection "IBL_AR.ry";
   
 currentTime 1 ;
    setAttr "IBL_AR.rotateY" 0;
    channelBoxCommand -key;
    setKeyframe "IBL_AR.ry";

 currentTime 240 ;
    setAttr "IBL_AR.rotateY" 360;
    channelBoxCommand -key;
    setKeyframe "IBL_AR.ry";
    
        selectKey -clear ;
selectKey -add -k -t 1 -t 240 IBL_AR.rotateY ;
keyTangent -itt linear -ott linear;
    currentTime 1 ;
    } 
   
print "Locator_Tool RotationY on 10sec"; 
inViewMessage -amg ("<span style=\"color:#82C99A;\">Info:</span> Locator_Tool Rotation.Y Set on 10sec.") -dragKill -pos midCenterTop ;
     currentTime 1 ;
}
////////////////////////////////////////////////////
global proc UNGrp()
{
                    parent -world; 
print " Selected Objects Parented to World / Unparented";
inViewMessage -amg ("<span style=\"color:#82C99A;\">Info:</span> Selected Objects Parented to World / Unparented.") -dragKill -pos midCenterTop ;
}
///////////////////////////////////////////////////////    
global proc Grp()
{
                  select -add "Locator_Tool";
                  parent; 
print "Selected Objects Parented to Locator_Tool";
inViewMessage -amg ("<span style=\"color:#82C99A;\">Info:</span> Selected Objects Parented to Locator_Tool") -dragKill -pos midCenterTop ;
}  
//////////////////////////////////////////////   
global proc SwitchM()
{
    


     currentTime 1 ;



if ( `objExists "Meshes"` )      
 {    
          select -r Meshes;

     if(size(listRelatives("-parent")))
      {
       print "Already Parented";
      }else{
            select -r Meshes;
            select -tgl Locator_Tool ;
            parent; 
       
       
           if ( `objExists "LIGHTS_Grp"` )      
            {   
             select -r LIGHTS_Grp;
             
                 if(size(listRelatives("-parent")))
                  {
                   select -r LIGHTS_Grp;
                   parent -world;  
                   }else{
                        print "Already UnParented";  
                        }
              }else{
                     
                    select -cl;
                    Group;
                    rename "LIGHTS_Grp";
                    }
               
            
      }
          
           
 }else{      
                 select -cl;
                 Group;
                 rename "Meshes";
                 select -r Meshes;
                 select -tgl Locator_Tool ;
                 parent;  
          
          
          if ( `objExists "LIGHTS_Grp"` )      
            {   
             select -r LIGHTS_Grp;
             
                 if(size(listRelatives("-parent")))
                  {
                   select -r LIGHTS_Grp;
                   parent -world;  
                   }else{
                        print "Already UnParented";  
                        }
              }else{
                     
                    select -cl;
                    Group;
                    rename "LIGHTS_Grp";
                    }
                
      } 



       
//////////////////////////////////////////////////////////////////
if ( getAttr("defaultRenderGlobals.endFrame") == "4" )
{
   green(); 
}
//////////////////////////////////////////////////////////////////
if ( getAttr("defaultRenderGlobals.endFrame") == "8" )
{
   blue(); 
}
//////////////////////////////////////////////////////////////////
if ( getAttr("defaultRenderGlobals.endFrame") == "16" )
{
   red(); 
}
//////////////////////////////////////////////////////////////////
if ( getAttr("defaultRenderGlobals.endFrame") == "48" )
{
   Alpha(); 
}
//////////////////////////////////////////////////////////////////
if ( getAttr("defaultRenderGlobals.endFrame") == "96" )
{
   Beta(); 
}
//////////////////////////////////////////////////////////////////
if ( getAttr("defaultRenderGlobals.endFrame") == "120" )
{
   Charly(); 
}
//////////////////////////////////////////////////////////////////
if ( getAttr("defaultRenderGlobals.endFrame") == "144" )
{
   Delta(); 
}
//////////////////////////////////////////////////////////////////
if ( getAttr("defaultRenderGlobals.endFrame") == "192" )
{
   Echo(); 
}
//////////////////////////////////////////////////////////////////
if ( getAttr("defaultRenderGlobals.endFrame") == "240" )
{
   Fox(); 
}
//////////////////////////////////////////////////////////////////
zeroR();
print " Meshes_Grp Parented to LocatorTool";  
inViewMessage -amg ("<span style=\"color:#82C99A;\">Info:</span> Meshes Grp Parented to Locator_Tool") -dragKill -pos midCenterTop ;
}

global proc SwitchL()
{
         currentTime 1 ;



if ( `objExists "LIGHTS_Grp"` )      
 {    
          select -r LIGHTS_Grp;

     if(size(listRelatives("-parent")))
      {
       print "Already Parented";
      }else{
            select -r LIGHTS_Grp;
            select -tgl Locator_Tool ;
            parent; 
       
       
           if ( `objExists "Meshes"` )      
            {   
             select -r Meshes;
             
                 if(size(listRelatives("-parent")))
                  {
                   select -r Meshes;
                   parent -world;  
                   }else{
                        print "Already UnParented";  
                        }
              }else{
                     
                    select -cl;
                    Group;
                    rename "Meshes";
                    }
               
            
      }
          
           
 }else{      
                 select -cl;
                 Group;
                 rename "LIGHTS_Grp";
                 select -r LIGHTS_Grp;
                 select -tgl Locator_Tool ;
                 parent;  
          
          
          if ( `objExists "Meshes"` )      
            {   
             select -r Meshes;
             
                 if(size(listRelatives("-parent")))
                  {
                   select -r Meshes;
                   parent -world;  
                   }else{
                        print "Already UnParented";  
                        }
              }else{
                     
                    select -cl;
                    Group;
                    rename "Meshes";
                    }
                
      } 




            
          
        ////////////////////////////////  
            if ( `objExists "IBL_Grp"` )      
    {       
        select -r IBL_Grp ;
         select -tgl LIGHTS_Grp ;
        parent; 
     }else{
               select -cl; 
        } 
         
         
    
         
         //////////////////////////////
                if ( `objExists "SSK_Grp"` )      
    {       
         select -r SSK_Grp  ;
         select -tgl LIGHTS_Grp ;
         parent;   
     }else{
               select -cl; 
        }      
        

         //////////////////////////////////////////////////////////////////
if ( getAttr("defaultRenderGlobals.endFrame") == "4" )
{
   green(); 
}else{
    select -cl; 
    }
//////////////////////////////////////////////////////////////////
if ( getAttr("defaultRenderGlobals.endFrame") == "8" )
{
   blue(); 
}else{
    select -cl; 
    }
//////////////////////////////////////////////////////////////////
if ( getAttr("defaultRenderGlobals.endFrame") == "16" )
{
   red(); 
}else{
    select -cl; 
    }
//////////////////////////////////////////////////////////////////
if ( getAttr("defaultRenderGlobals.endFrame") == "48" )
{
   Alpha(); 
}else{
    select -cl; 
    }
//////////////////////////////////////////////////////////////////
if ( getAttr("defaultRenderGlobals.endFrame") == "96" )
{
   Beta(); 
}else{
    select -cl; 
    }
//////////////////////////////////////////////////////////////////
if ( getAttr("defaultRenderGlobals.endFrame") == "120" )
{
   Charly(); 
}else{
    select -cl; 
    }
//////////////////////////////////////////////////////////////////
if ( getAttr("defaultRenderGlobals.endFrame") == "144" )
{
   Delta(); 
}else{
    select -cl; 
    }
//////////////////////////////////////////////////////////////////
if ( getAttr("defaultRenderGlobals.endFrame") == "192" )
{
   Echo(); 
}else{
    select -cl; 
    } 
//////////////////////////////////////////////////////////////////
if ( getAttr("defaultRenderGlobals.endFrame") == "240" )
{
   Fox(); 
}else{
    select -cl; 
    }  
//////////////////////////////////////////////////////////////////
print "LIGHTS_Grp Parented to LocatorTool";
inViewMessage -amg ("<span style=\"color:#82C99A;\">Info:</span> LIGHT_Grp Parented to Locator_Tool") -dragKill -pos midCenterTop ;
}  

global proc AddMsh()
{
                    select -tgl Meshes ;
                    parent; 
print "Msh added in MeshesGrp";
inViewMessage -amg ("<span style=\"color:#82C99A;\">Info:</span> Meshes added in MeshesGrp") -dragKill -pos midCenterTop ;
}

global proc green()
{
        playbackOptions -min 1 -max 4 ;
//---------------------RESET IBL_Locator----------------------//
    if ( `objExists "Locator_Tool"` )
     {
        currentTime 1 ;
        CBdeleteConnection "Locator_Tool.ry";
        setAttr "Locator_Tool.rotateY" 0;
        channelBoxCommand -key;
     }else { 
            spaceLocator -p 0 0 0;
            rename "Locator_Tool"; 
            setAttr "Locator_Tool.rotateY" 0;
            channelBoxCommand -key;     
           } 
    select Locator_Tool;
    transformLimits -rx 0 0 -erx 1 1 Locator_Tool;
    transformLimits -rz 0 0 -erz 1 1 Locator_Tool;
    setAttr "defaultRenderGlobals.startFrame" 1;
    setAttr "defaultRenderGlobals.endFrame" 4;
    setAttr "defaultRenderGlobals.byFrameStep" 1;

    currentTime 1 ;
    setAttr "Locator_Tool.rotateY" 0;
    channelBoxCommand -key;
    setKeyframe "Locator_Tool.ry";
  
    currentTime 2 ;
    setAttr "Locator_Tool.rotateY" 90;
    channelBoxCommand -key;
    setKeyframe "Locator_Tool.ry";
  
    currentTime 3 ;
    setAttr "Locator_Tool.rotateY" 180;
    channelBoxCommand -key;
    setKeyframe "Locator_Tool.ry";
    
    currentTime 4 ;
    setAttr "Locator_Tool.rotateY" 270;
    channelBoxCommand -key;
    setKeyframe "Locator_Tool.ry";

currentTime 1 ;

 if ( `objExists "IBL_MR"` )      
    { 
    
    currentTime 1 ;
        CBdeleteConnection "IBL_MR.ry";
        
        
      currentTime 1 ;
    setAttr "IBL_MR.rotateY" 0;
    channelBoxCommand -key;
    setKeyframe "IBL_MR.ry";
  
    currentTime 2 ;
    setAttr "IBL_MR.rotateY" 90;
    channelBoxCommand -key;
    setKeyframe "IBL_MR.ry";
  
    currentTime 3 ;
    setAttr "IBL_MR.rotateY" 180;
    channelBoxCommand -key;
    setKeyframe "IBL_MR.ry";
    
    currentTime 4 ;
    setAttr "IBL_MR.rotateY" 270;
    channelBoxCommand -key;
    setKeyframe "IBL_MR.ry";    

}


if ( `objExists "IBL_VR"` )      
  { 
  
        
           if ( `objExists "VRayPlaceEnvTex1"` )      
            { 
            if (attributeExists("horRotation","VRayPlaceEnvTex1")) 
             {
    
               rename VRayPlaceEnvTex1 "IBL_VR_EnvTex" ;


	 currentTime 1 ;
    setAttr "IBL_VR_EnvTex.horRotation" 0;
setKeyframe { "IBL_VR_EnvTex.hr" };
  

    
    currentTime 2 ;
    setAttr "IBL_VR_EnvTex.horRotation" 360;
setKeyframe { "IBL_VR_EnvTex.hr" };

    keyframe -option over -index 1 -absolute -timeChange 4 IBL_VR_EnvTex_horRotation ;
selectKey -clear ;
selectKey -add -k -t 1 -t 4 IBL_VR_EnvTex_horRotation ;
keyTangent -itt linear -ott linear;
currentTime 1 ;
            }
              }else if (attributeExists("horRotation","IBL_VR_EnvTex")) 
                     {  
                     currentTime 1 ;
        CBdeleteConnection "IBL_VR_EnvTex.hr";
        	 currentTime 1 ;
    setAttr "IBL_VR_EnvTex.horRotation" 0;
setKeyframe { "IBL_VR_EnvTex.hr" };
  

    
    currentTime 2 ;
    setAttr "IBL_VR_EnvTex.horRotation" 360;
setKeyframe { "IBL_VR_EnvTex.hr" };

                       keyframe -option over -index 1 -absolute -timeChange 4 IBL_VR_EnvTex_horRotation ;
                       selectKey -clear ;
selectKey -add -k -t 1 -t 4 IBL_VR_EnvTex_horRotation ;
keyTangent -itt linear -ott linear;
                     }
          currentTime 1 ;           
   }



 if ( `objExists "IBL_AR"` )      
    {  
     currentTime 1 ;
        CBdeleteConnection "IBL_AR.ry";
        
     currentTime 1 ;
    setAttr "IBL_AR.rotateY" 0;
    channelBoxCommand -key;
    setKeyframe "IBL_AR.ry";
  
    currentTime 2 ;
    setAttr "IBL_AR.rotateY" 90;
    channelBoxCommand -key;
    setKeyframe "IBL_AR.ry";
  
    currentTime 3 ;
    setAttr "IBL_AR.rotateY" 180;
    channelBoxCommand -key;
    setKeyframe "IBL_AR.ry";
    
    currentTime 4 ;
    setAttr "IBL_AR.rotateY" 270;
    channelBoxCommand -key;
    setKeyframe "IBL_AR.ry";    
currentTime 1 ;
}


 if ( `objExists "sunDirection"` )      
    {  
    currentTime 1 ;
        CBdeleteConnection "sunDirection.ry";
        
     currentTime 1 ;
    setAttr "sunDirection.rotateY" 0;
    channelBoxCommand -key;
    setKeyframe "sunDirection.ry";
  
    currentTime 2 ;
    setAttr "sunDirection.rotateY" 90;
    channelBoxCommand -key;
    setKeyframe "sunDirection.ry";
  
    currentTime 3 ;
    setAttr "sunDirection.rotateY" 180;
    channelBoxCommand -key;
    setKeyframe "sunDirection.ry";
    
    currentTime 4 ;
    setAttr "sunDirection.rotateY" 270;
    channelBoxCommand -key;
    setKeyframe "sunDirection.ry";    
currentTime 1 ;
}


 if ( `objExists "SSK_VR"` )      
    {  
      currentTime 1 ;
   CBdeleteConnection "|SSK_VR.ry";
 
     currentTime 1 ;
    setAttr "|SSK_VR.rotateY" 0;
    channelBoxCommand -key;
    setKeyframe "SSK_VR.ry";
  
    currentTime 2 ;
    setAttr "|SSK_VR.rotateY" 90;
    channelBoxCommand -key;
    setKeyframe "SSK_VR.ry";
  
    currentTime 3 ;
    setAttr "|SSK_VR.rotateY" 180;
    channelBoxCommand -key;
    setKeyframe "SSK_VR.ry";
    
    currentTime 4 ;
    setAttr "|SSK_VR.rotateY" 270;
    channelBoxCommand -key;
    setKeyframe "SSK_VR.ry";    
currentTime 1 ;
}

 if ( `objExists "SSK_AR"` )      
    { 
        currentTime 1 ;
   CBdeleteConnection "SSK_AR.ry";
    
      currentTime 1 ;
    setAttr "SSK_AR.rotateY" 0;
    channelBoxCommand -key;
    setKeyframe "SSK_AR.ry";
  
    currentTime 2 ;
    setAttr "SSK_AR.rotateY" 90;
    channelBoxCommand -key;
    setKeyframe "SSK_AR.ry";
  
    currentTime 3 ;
    setAttr "SSK_AR.rotateY" 180;
    channelBoxCommand -key;
    setKeyframe "SSK_AR.ry";
    
    currentTime 4 ;
    setAttr "SSK_AR.rotateY" 270;
    channelBoxCommand -key;
    setKeyframe "SSK_AR.ry"; 
   currentTime 1 ;
    }   

print "LocatorTool Set to 4Frames ";
inViewMessage -amg ("<span style=\"color:#82C99A;\">Info:</span> LocatorTool Set to 4Frames 360") -dragKill -pos midCenterTop ;

}
    
global proc blue()
{
        playbackOptions -min 1 -max 8 ;
    //---------------------RESET IBL_Locator----------------------//
    if ( `objExists "Locator_Tool"` )
     {
        currentTime 1 ;
        CBdeleteConnection "Locator_Tool.ry";
        setAttr "Locator_Tool.rotateY" 0;
    channelBoxCommand -key;
     }else { 
        spaceLocator -p 0 0 0;
        rename "Locator_Tool";  
        setAttr "Locator_Tool.rotateY" 0;
    channelBoxCommand -key;    
           } 
 
    //---------------------CREATE IBL_Locator----------------------//
    select Locator_Tool;
    transformLimits -rx 0 0 -erx 1 1 Locator_Tool;
    transformLimits -rz 0 0 -erz 1 1 Locator_Tool;
    setAttr "defaultRenderGlobals.startFrame" 1;
    setAttr "defaultRenderGlobals.endFrame" 8;
    setAttr "defaultRenderGlobals.byFrameStep" 1;
    //------START-----//
    currentTime 1 ;
    setAttr "Locator_Tool.rotateY" 0;
    channelBoxCommand -key;
    setKeyframe "Locator_Tool.ry";
  
    currentTime 2 ;
    rotate -r -os 0 45 0 ;
    channelBoxCommand -key;
    setKeyframe "Locator_Tool.ry";
  
    currentTime 3 ;
    rotate -r -os 0 45 0 ;
    channelBoxCommand -key;
    setKeyframe "Locator_Tool.ry";
    
    currentTime 4 ;
    rotate -r -os 0 45 0 ;
    channelBoxCommand -key;
    setKeyframe "Locator_Tool.ry";
    
    currentTime 5 ;
    rotate -r -os 0 45 0 ;
    channelBoxCommand -key;
    setKeyframe "Locator_Tool.ry";
  
    currentTime 6 ;
    rotate -r -os 0 45 0 ;
    channelBoxCommand -key;
    setKeyframe "Locator_Tool.ry";
  
    currentTime 7 ;
    rotate -r -os 0 45 0 ;
    channelBoxCommand -key;
    setKeyframe "Locator_Tool.ry";
    
    currentTime 8 ;
    rotate -r -os 0 45 0 ;
    channelBoxCommand -key;
    setKeyframe "Locator_Tool.ry";
   
   currentTime 1 ;
////////////////////////////////////////////////////////
////////////////////////////////////////////////////////
if ( `objExists "IBL_MR"` )      
    { 
        currentTime 1 ;
   CBdeleteConnection "IBL_MR.ry";
   
 currentTime 1 ;
     setAttr "IBL_MR.rotateY" 0;
    channelBoxCommand -key;
    setKeyframe "IBL_MR.ry";
  
    currentTime 2 ;
     setAttr "IBL_MR.rotateY" 45;
    channelBoxCommand -key;
    setKeyframe "IBL_MR.ry";
  
    currentTime 3 ;
    setAttr "IBL_MR.rotateY" 90;
    channelBoxCommand -key;
    setKeyframe "IBL_MR.ry";
    
    currentTime 4 ;
    setAttr "IBL_MR.rotateY" 135;
    channelBoxCommand -key;
    setKeyframe "IBL_MR.ry";
    
    currentTime 5 ;
    setAttr "IBL_MR.rotateY" 180;
    channelBoxCommand -key;
    setKeyframe "IBL_MR.ry";
  
    currentTime 6 ;
    setAttr "IBL_MR.rotateY" 225;
    channelBoxCommand -key;
    setKeyframe "IBL_MR.ry";
  
    currentTime 7 ;
    setAttr "IBL_MR.rotateY" 270;
    channelBoxCommand -key;
    setKeyframe "IBL_MR.ry";
    
    currentTime 8 ;
    setAttr "IBL_MR.rotateY" 315;
    channelBoxCommand -key;
    setKeyframe "IBL_MR.ry";
currentTime 1 ;
}


if ( `objExists "IBL_VR"` )      
  { 
  
           if ( `objExists "VRayPlaceEnvTex1"` )      
            { 
            if (attributeExists("horRotation","VRayPlaceEnvTex1")) 
             {
    
               rename VRayPlaceEnvTex1 "IBL_VR_EnvTex" ;


	 currentTime 1 ;
    setAttr "IBL_VR_EnvTex.horRotation" 0;
setKeyframe { "IBL_VR_EnvTex.hr" };
  

    
    currentTime 2 ;
    setAttr "IBL_VR_EnvTex.horRotation" 360;
setKeyframe { "IBL_VR_EnvTex.hr" };

    keyframe -option over -index 1 -absolute -timeChange 8 IBL_VR_EnvTex_horRotation ;
selectKey -clear ;
selectKey -add -k -t 1 -t 8 IBL_VR_EnvTex_horRotation ;
keyTangent -itt linear -ott linear;
currentTime 1 ;
            }
              }else if (attributeExists("horRotation","IBL_VR_EnvTex")) 
                     {
                                  currentTime 1 ;
        CBdeleteConnection "IBL_VR_EnvTex.hr";
        	 currentTime 1 ;
    setAttr "IBL_VR_EnvTex.horRotation" 0;
setKeyframe { "IBL_VR_EnvTex.hr" };
  

    
    currentTime 2 ;
    setAttr "IBL_VR_EnvTex.horRotation" 360;
setKeyframe { "IBL_VR_EnvTex.hr" };
                       keyframe -option over -index 1 -absolute -timeChange 8 IBL_VR_EnvTex_horRotation ;
                    selectKey -clear ;
selectKey -add -k -t 1 -t 8 IBL_VR_EnvTex_horRotation ;
keyTangent -itt linear -ott linear;
                     }
  currentTime 1 ;
   }

 if ( `objExists "IBL_AR"` )      
    {  
         currentTime 1 ;
   CBdeleteConnection "IBL_AR.ry";
   
    currentTime 1 ;
     setAttr "IBL_AR.rotateY" 0;
    channelBoxCommand -key;
    setKeyframe "IBL_AR.ry";
  
    currentTime 2 ;
     setAttr "IBL_AR.rotateY" 45;
    channelBoxCommand -key;
    setKeyframe "IBL_AR.ry";
  
    currentTime 3 ;
    setAttr "IBL_AR.rotateY" 90;
    channelBoxCommand -key;
    setKeyframe "IBL_AR.ry";
    
    currentTime 4 ;
    setAttr "IBL_AR.rotateY" 135;
    channelBoxCommand -key;
    setKeyframe "IBL_AR.ry";
    
    currentTime 5 ;
    setAttr "IBL_AR.rotateY" 180;
    channelBoxCommand -key;
    setKeyframe "IBL_AR.ry";
  
    currentTime 6 ;
    setAttr "IBL_AR.rotateY" 225;
    channelBoxCommand -key;
    setKeyframe "IBL_AR.ry";
  
    currentTime 7 ;
    setAttr "IBL_AR.rotateY" 270;
    channelBoxCommand -key;
    setKeyframe "IBL_AR.ry";
    
    currentTime 8 ;
    setAttr "IBL_AR.rotateY" 315;
    channelBoxCommand -key;
    setKeyframe "IBL_AR.ry";
currentTime 1 ;
}


 if ( `objExists "sunDirection"` )      
    {  
         currentTime 1 ;
   CBdeleteConnection "sunDirection.ry";
   
    currentTime 1 ;
     setAttr "sunDirection.rotateY" 0;
    channelBoxCommand -key;
    setKeyframe "sunDirection.ry";
  
    currentTime 2 ;
     setAttr "sunDirection.rotateY" 45;
    channelBoxCommand -key;
    setKeyframe "sunDirection.ry";
  
    currentTime 3 ;
    setAttr "sunDirection.rotateY" 90;
    channelBoxCommand -key;
    setKeyframe "sunDirection.ry";
    
    currentTime 4 ;
    setAttr "sunDirection.rotateY" 135;
    channelBoxCommand -key;
    setKeyframe "sunDirection.ry";
    
    currentTime 5 ;
    setAttr "sunDirection.rotateY" 180;
    channelBoxCommand -key;
    setKeyframe "sunDirection.ry";
  
    currentTime 6 ;
    setAttr "sunDirection.rotateY" 225;
    channelBoxCommand -key;
    setKeyframe "sunDirection.ry";
  
    currentTime 7 ;
    setAttr "sunDirection.rotateY" 270;
    channelBoxCommand -key;
    setKeyframe "sunDirection.ry";
    
    currentTime 8 ;
    setAttr "sunDirection.rotateY" 315;
    channelBoxCommand -key;
    setKeyframe "sunDirection.ry"; 
currentTime 1 ;
}


 if ( `objExists "SSK_VR"` )      
    {  
      
   
     currentTime 1 ;
   CBdeleteConnection "|SSK_VR.ry";
    
   currentTime 1 ;
     setAttr "|SSK_VR.rotateY" 0;
    channelBoxCommand -key;
    setKeyframe "SSK_VR.ry";
  
    currentTime 2 ;
     setAttr "|SSK_VR.rotateY" 45;
    channelBoxCommand -key;
    setKeyframe "SSK_VR.ry";
  
    currentTime 3 ;
    setAttr "|SSK_VR.rotateY" 90;
    channelBoxCommand -key;
    setKeyframe "SSK_VR.ry";
    
    currentTime 4 ;
    setAttr "|SSK_VR.rotateY" 135;
    channelBoxCommand -key;
    setKeyframe "SSK_VR.ry";
    
    currentTime 5 ;
    setAttr "|SSK_VR.rotateY" 180;
    channelBoxCommand -key;
    setKeyframe "SSK_VR.ry";
  
    currentTime 6 ;
    setAttr "|SSK_VR.rotateY" 225;
    channelBoxCommand -key;
    setKeyframe "SSK_VR.ry";
  
    currentTime 7 ;
    setAttr "|SSK_VR.rotateY" 270;
    channelBoxCommand -key;
    setKeyframe "SSK_VR.ry";
    
    currentTime 8 ;
    setAttr "|SSK_VR.rotateY" 315;
    channelBoxCommand -key;
    setKeyframe "SSK_VR.ry";
currentTime 1 ;
}

 if ( `objExists "SSK_AR"` )      
    { 
      currentTime 1 ;
   CBdeleteConnection "SSK_AR.ry";
    
    currentTime 1 ;
     setAttr "SSK_AR.rotateY" 0;
    channelBoxCommand -key;
    setKeyframe "SSK_AR.ry";
  
    currentTime 2 ;
     setAttr "SSK_AR.rotateY" 45;
    channelBoxCommand -key;
    setKeyframe "SSK_AR.ry";
  
    currentTime 3 ;
    setAttr "SSK_AR.rotateY" 90;
    channelBoxCommand -key;
    setKeyframe "SSK_AR.ry";
    
    currentTime 4 ;
    setAttr "SSK_AR.rotateY" 135;
    channelBoxCommand -key;
    setKeyframe "SSK_AR.ry";
    
    currentTime 5 ;
    setAttr "SSK_AR.rotateY" 180;
    channelBoxCommand -key;
    setKeyframe "SSK_AR.ry";
  
    currentTime 6 ;
    setAttr "SSK_AR.rotateY" 225;
    channelBoxCommand -key;
    setKeyframe "SSK_AR.ry";
  
    currentTime 7 ;
    setAttr "SSK_AR.rotateY" 270;
    channelBoxCommand -key;
    setKeyframe "SSK_AR.ry";
    
    currentTime 8 ;
    setAttr "SSK_AR.rotateY" 315;
    channelBoxCommand -key;
    setKeyframe "SSK_AR.ry";
    currentTime 1 ;
    } 
    
    
    ////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////// 
currentTime 1 ;
print "LocatorTool Set to 8Frames ";
inViewMessage -amg ("<span style=\"color:#82C99A;\">Info:</span> LocatorTool Set to 8Frames 360") -dragKill -pos midCenterTop ;

}
    
    
global proc red()
{
        playbackOptions -min 1 -max 16 ;
    //---------------------RESET IBL_Locator----------------------//
    if ( `objExists "Locator_Tool"` )
     {
        currentTime 1 ;
        CBdeleteConnection "Locator_Tool.ry";
        setAttr "Locator_Tool.rotateY" 0;
    channelBoxCommand -key;
     }else { 
        spaceLocator -p 0 0 0;
        rename "Locator_Tool";  
        setAttr "Locator_Tool.rotateY" 0;
    channelBoxCommand -key;    
           } 
           
           
           /*         if ( `objExists "IBL_VR"` )
     {   
    
      }
*/

    //---------------------CREATE IBL_Locator----------------------//
    select Locator_Tool;
    transformLimits -rx 0 0 -erx 1 1 Locator_Tool;
    transformLimits -rz 0 0 -erz 1 1 Locator_Tool;
    setAttr "defaultRenderGlobals.startFrame" 1;
    setAttr "defaultRenderGlobals.endFrame" 16;
    setAttr "defaultRenderGlobals.byFrameStep" 1;
    //------START-----//
    currentTime 1 ;
    setAttr "Locator_Tool.rotateY" 0;
    channelBoxCommand -key;
    setKeyframe "Locator_Tool.ry";
  
    currentTime 2 ;
    rotate -r -os 0 22 0 ;
    channelBoxCommand -key;
    setKeyframe "Locator_Tool.ry";
  
    currentTime 3 ;
    rotate -r -os 0 23 0 ;
    channelBoxCommand -key;
    setKeyframe "Locator_Tool.ry";
    
    currentTime 4 ;
    rotate -r -os 0 22 0 ;
    channelBoxCommand -key;
    setKeyframe "Locator_Tool.ry";
    
    currentTime 5 ;
    rotate -r -os 0 23 0 ;
    channelBoxCommand -key;
    setKeyframe "Locator_Tool.ry";
  
    currentTime 6 ;
    rotate -r -os 0 22 0 ;
    channelBoxCommand -key;
    setKeyframe "Locator_Tool.ry";
  
    currentTime 7 ;
    rotate -r -os 0 23 0 ;
    channelBoxCommand -key;
    setKeyframe "Locator_Tool.ry";
    
    currentTime 8 ;
    rotate -r -os 0 22 0 ;
    channelBoxCommand -key;
    setKeyframe "Locator_Tool.ry";
    
     currentTime 9 ;
    rotate -r -os 0 23 0 ;
    channelBoxCommand -key;
    setKeyframe "Locator_Tool.ry";
  
    currentTime 10 ;
    rotate -r -os 0 22 0 ;
    channelBoxCommand -key;
    setKeyframe "Locator_Tool.ry";
  
    currentTime 11 ;
    rotate -r -os 0 23 0 ;
    channelBoxCommand -key;
    setKeyframe "Locator_Tool.ry";
    
    currentTime 12 ;
    rotate -r -os 0 22 0 ;
    channelBoxCommand -key;
    setKeyframe "Locator_Tool.ry";
    
    currentTime 13 ;
    rotate -r -os 0 23 0 ;
    channelBoxCommand -key;
    setKeyframe "Locator_Tool.ry";
  
    currentTime 14 ;
    rotate -r -os 0 22 0 ;
    channelBoxCommand -key;
    setKeyframe "Locator_Tool.ry";
  
    currentTime 15 ;
    rotate -r -os 0 23 0 ;
    channelBoxCommand -key;
    setKeyframe "Locator_Tool.ry";
    
    currentTime 16 ;
    rotate -r -os 0 22 0 ;
    channelBoxCommand -key;
    setKeyframe "Locator_Tool.ry";
    
    currentTime 1 ;
    
////////////////////////////////////////////////////////
////////////////////////////////////////////////////////
if ( `objExists "IBL_MR"` )      
    { 
 
     currentTime 1 ;
   CBdeleteConnection "IBL_MR.ry";
   
 currentTime 1 ;
    setAttr "IBL_MR.rotateY" 0;
    channelBoxCommand -key;
    setKeyframe "IBL_MR.ry";
  
    currentTime 2 ;
    setAttr "IBL_MR.rotateY" 22;
    channelBoxCommand -key;
    setKeyframe "IBL_MR.ry";
  
    currentTime 3 ;
    setAttr "IBL_MR.rotateY" 45;
    channelBoxCommand -key;
    setKeyframe "IBL_MR.ry";
    
    currentTime 4 ;
    setAttr "IBL_MR.rotateY" 67;
    channelBoxCommand -key;
    setKeyframe "IBL_MR.ry";
    
    currentTime 5 ;
    setAttr "IBL_MR.rotateY" 90;
    channelBoxCommand -key;
    setKeyframe "IBL_MR.ry";
  
    currentTime 6 ;
    setAttr "IBL_MR.rotateY" 112;
    channelBoxCommand -key;
    setKeyframe "IBL_MR.ry";
  
    currentTime 7 ;
   setAttr "IBL_MR.rotateY" 135;
    channelBoxCommand -key;
    setKeyframe "IBL_MR.ry";
    
    currentTime 8 ;
    setAttr "IBL_MR.rotateY" 157;
    channelBoxCommand -key;
    setKeyframe "IBL_MR.ry";
    
     currentTime 9 ;
    setAttr "IBL_MR.rotateY" 180;
    channelBoxCommand -key;
    setKeyframe "IBL_MR.ry";
  
    currentTime 10 ;
    setAttr "IBL_MR.rotateY" 202;
    channelBoxCommand -key;
    setKeyframe "IBL_MR.ry";
  
    currentTime 11 ;
    setAttr "IBL_MR.rotateY" 225;
    channelBoxCommand -key;
    setKeyframe "IBL_MR.ry";
    
    currentTime 12 ;
    setAttr "IBL_MR.rotateY" 247;
    channelBoxCommand -key;
    setKeyframe "IBL_MR.ry";
    
    currentTime 13 ;
    setAttr "IBL_MR.rotateY" 270;
    channelBoxCommand -key;
    setKeyframe "IBL_MR.ry";
  
    currentTime 14 ;
    setAttr "IBL_MR.rotateY" 292;
    channelBoxCommand -key;
    setKeyframe "IBL_MR.ry";
  
    currentTime 15 ;
    setAttr "IBL_MR.rotateY" 315;
    channelBoxCommand -key;
    setKeyframe "IBL_MR.ry";
    
    currentTime 16 ;
    setAttr "IBL_MR.rotateY" 327;
    channelBoxCommand -key;
    setKeyframe "IBL_MR.ry";
    currentTime 1 ;
}


if ( `objExists "IBL_VR"` )      
  { 
  
           if ( `objExists "VRayPlaceEnvTex1"` )      
            { 
            if (attributeExists("horRotation","VRayPlaceEnvTex1")) 
             {
    
               rename VRayPlaceEnvTex1 "IBL_VR_EnvTex" ;


	 currentTime 1 ;
    setAttr "IBL_VR_EnvTex.horRotation" 0;
setKeyframe { "IBL_VR_EnvTex.hr" };
  

    
    currentTime 2 ;
    setAttr "IBL_VR_EnvTex.horRotation" 360;
setKeyframe { "IBL_VR_EnvTex.hr" };

    keyframe -option over -index 1 -absolute -timeChange 16 IBL_VR_EnvTex_horRotation ;
            selectKey -clear ;
selectKey -add -k -t 1 -t 16 IBL_VR_EnvTex_horRotation ;
keyTangent -itt linear -ott linear;
currentTime 1 ;
}
    
              }else if (attributeExists("horRotation","IBL_VR_EnvTex")) 
                     {
                                 currentTime 1 ;
        CBdeleteConnection "IBL_VR_EnvTex.hr";
        	 currentTime 1 ;
    setAttr "IBL_VR_EnvTex.horRotation" 0;
setKeyframe { "IBL_VR_EnvTex.hr" };
  

    
    currentTime 2 ;
    setAttr "IBL_VR_EnvTex.horRotation" 360;
setKeyframe { "IBL_VR_EnvTex.hr" };
                       keyframe -option over -index 1 -absolute -timeChange 16 IBL_VR_EnvTex_horRotation ;
                     selectKey -clear ;
selectKey -add -k -t 1 -t 16 IBL_VR_EnvTex_horRotation ;
keyTangent -itt linear -ott linear;
                     }
 currentTime 1 ;
   }

 if ( `objExists "IBL_AR"` )      
    {  
   currentTime 1 ;
   CBdeleteConnection "IBL_AR.ry";
   
 currentTime 1 ;
    setAttr "IBL_AR.rotateY" 0;
    channelBoxCommand -key;
    setKeyframe "IBL_AR.ry";
  
    currentTime 2 ;
    setAttr "IBL_AR.rotateY" 22;
    channelBoxCommand -key;
    setKeyframe "IBL_AR.ry";
  
    currentTime 3 ;
    setAttr "IBL_AR.rotateY" 45;
    channelBoxCommand -key;
    setKeyframe "IBL_AR.ry";
    
    currentTime 4 ;
    setAttr "IBL_AR.rotateY" 67;
    channelBoxCommand -key;
    setKeyframe "IBL_AR.ry";
    
    currentTime 5 ;
    setAttr "IBL_AR.rotateY" 90;
    channelBoxCommand -key;
    setKeyframe "IBL_AR.ry";
  
    currentTime 6 ;
    setAttr "IBL_AR.rotateY" 112;
    channelBoxCommand -key;
    setKeyframe "IBL_AR.ry";
  
    currentTime 7 ;
   setAttr "IBL_AR.rotateY" 135;
    channelBoxCommand -key;
    setKeyframe "IBL_AR.ry";
    
    currentTime 8 ;
    setAttr "IBL_AR.rotateY" 157;
    channelBoxCommand -key;
    setKeyframe "IBL_AR.ry";
    
     currentTime 9 ;
    setAttr "IBL_AR.rotateY" 180;
    channelBoxCommand -key;
    setKeyframe "IBL_AR.ry";
  
    currentTime 10 ;
    setAttr "IBL_AR.rotateY" 202;
    channelBoxCommand -key;
    setKeyframe "IBL_AR.ry";
  
    currentTime 11 ;
    setAttr "IBL_AR.rotateY" 225;
    channelBoxCommand -key;
    setKeyframe "IBL_AR.ry";
    
    currentTime 12 ;
    setAttr "IBL_AR.rotateY" 247;
    channelBoxCommand -key;
    setKeyframe "IBL_AR.ry";
    
    currentTime 13 ;
    setAttr "IBL_AR.rotateY" 270;
    channelBoxCommand -key;
    setKeyframe "IBL_AR.ry";
  
    currentTime 14 ;
    setAttr "IBL_AR.rotateY" 292;
    channelBoxCommand -key;
    setKeyframe "IBL_AR.ry";
  
    currentTime 15 ;
    setAttr "IBL_AR.rotateY" 315;
    channelBoxCommand -key;
    setKeyframe "IBL_AR.ry";
    
    currentTime 16 ;
    setAttr "IBL_AR.rotateY" 327;
    channelBoxCommand -key;
    setKeyframe "IBL_AR.ry";
    currentTime 1 ;
}


 if ( `objExists "sunDirection"` )      
    {  
   currentTime 1 ;
   CBdeleteConnection "sunDirection.ry";
   
 currentTime 1 ;
    setAttr "sunDirection.rotateY" 0;
    channelBoxCommand -key;
    setKeyframe "sunDirection.ry";
  
    currentTime 2 ;
    setAttr "sunDirection.rotateY" 22;
    channelBoxCommand -key;
    setKeyframe "sunDirection.ry";
  
    currentTime 3 ;
    setAttr "sunDirection.rotateY" 45;
    channelBoxCommand -key;
    setKeyframe "sunDirection.ry";
    
    currentTime 4 ;
    setAttr "sunDirection.rotateY" 67;
    channelBoxCommand -key;
    setKeyframe "sunDirection.ry";
    
    currentTime 5 ;
    setAttr "sunDirection.rotateY" 90;
    channelBoxCommand -key;
    setKeyframe "sunDirection.ry";
  
    currentTime 6 ;
    setAttr "sunDirection.rotateY" 112;
    channelBoxCommand -key;
    setKeyframe "sunDirection.ry";
  
    currentTime 7 ;
   setAttr "sunDirection.rotateY" 135;
    channelBoxCommand -key;
    setKeyframe "sunDirection.ry";
    
    currentTime 8 ;
    setAttr "sunDirection.rotateY" 157;
    channelBoxCommand -key;
    setKeyframe "sunDirection.ry";
    
     currentTime 9 ;
    setAttr "sunDirection.rotateY" 180;
    channelBoxCommand -key;
    setKeyframe "sunDirection.ry";
  
    currentTime 10 ;
    setAttr "sunDirection.rotateY" 202;
    channelBoxCommand -key;
    setKeyframe "sunDirection.ry";
  
    currentTime 11 ;
    setAttr "sunDirection.rotateY" 225;
    channelBoxCommand -key;
    setKeyframe "sunDirection.ry";
    
    currentTime 12 ;
    setAttr "sunDirection.rotateY" 247;
    channelBoxCommand -key;
    setKeyframe "sunDirection.ry";
    
    currentTime 13 ;
    setAttr "sunDirection.rotateY" 270;
    channelBoxCommand -key;
    setKeyframe "sunDirection.ry";
  
    currentTime 14 ;
    setAttr "sunDirection.rotateY" 292;
    channelBoxCommand -key;
    setKeyframe "sunDirection.ry";
  
    currentTime 15 ;
    setAttr "sunDirection.rotateY" 315;
    channelBoxCommand -key;
    setKeyframe "sunDirection.ry";
    
    currentTime 16 ;
    setAttr "sunDirection.rotateY" 327;
    channelBoxCommand -key;
    setKeyframe "sunDirection.ry";
    currentTime 1 ;
}


 if ( `objExists "SSK_VR"` )      
    {  
   
         currentTime 1 ;
   CBdeleteConnection "|SSK_VR.ry";
    
 currentTime 1 ;
    setAttr "|SSK_VR.rotateY" 0;
    channelBoxCommand -key;
    setKeyframe "SSK_VR.ry";
  
    currentTime 2 ;
    setAttr "|SSK_VR.rotateY" 22;
    channelBoxCommand -key;
    setKeyframe "SSK_VR.ry";
  
    currentTime 3 ;
    setAttr "|SSK_VR.rotateY" 45;
    channelBoxCommand -key;
    setKeyframe "SSK_VR.ry";
    
    currentTime 4 ;
    setAttr "|SSK_VR.rotateY" 67;
    channelBoxCommand -key;
    setKeyframe "SSK_VR.ry";
    
    currentTime 5 ;
    setAttr "|SSK_VR.rotateY" 90;
    channelBoxCommand -key;
    setKeyframe "SSK_VR.ry";
  
    currentTime 6 ;
    setAttr "|SSK_VR.rotateY" 112;
    channelBoxCommand -key;
    setKeyframe "SSK_VR.ry";
  
    currentTime 7 ;
   setAttr "|SSK_VR.rotateY" 135;
    channelBoxCommand -key;
    setKeyframe "SSK_VR.ry";
    
    currentTime 8 ;
    setAttr "|SSK_VR.rotateY" 157;
    channelBoxCommand -key;
    setKeyframe "SSK_VR.ry";
    
     currentTime 9 ;
    setAttr "|SSK_VR.rotateY" 180;
    channelBoxCommand -key;
    setKeyframe "SSK_VR.ry";
  
    currentTime 10 ;
    setAttr "|SSK_VR.rotateY" 202;
    channelBoxCommand -key;
    setKeyframe "SSK_VR.ry";
  
    currentTime 11 ;
    setAttr "|SSK_VR.rotateY" 225;
    channelBoxCommand -key;
    setKeyframe "SSK_VR.ry";
    
    currentTime 12 ;
    setAttr "|SSK_VR.rotateY" 247;
    channelBoxCommand -key;
    setKeyframe "SSK_VR.ry";
    
    currentTime 13 ;
    setAttr "|SSK_VR.rotateY" 270;
    channelBoxCommand -key;
    setKeyframe "SSK_VR.ry";
  
    currentTime 14 ;
    setAttr "|SSK_VR.rotateY" 292;
    channelBoxCommand -key;
    setKeyframe "SSK_VR.ry";
  
    currentTime 15 ;
    setAttr "|SSK_VR.rotateY" 315;
    channelBoxCommand -key;
    setKeyframe "SSK_VR.ry";
    
    currentTime 16 ;
    setAttr "|SSK_VR.rotateY" 327;
    channelBoxCommand -key;
    setKeyframe "SSK_VR.ry";
    currentTime 1 ;
}

 if ( `objExists "SSK_AR"` )      
    { 
   currentTime 1 ;
   CBdeleteConnection "SSK_AR.ry";
   
 currentTime 1 ;
    setAttr "SSK_AR.rotateY" 0;
    channelBoxCommand -key;
    setKeyframe "SSK_AR.ry";
  
    currentTime 2 ;
    setAttr "SSK_AR.rotateY" 22;
    channelBoxCommand -key;
    setKeyframe "SSK_AR.ry";
  
    currentTime 3 ;
    setAttr "SSK_AR.rotateY" 45;
    channelBoxCommand -key;
    setKeyframe "SSK_AR.ry";
    
    currentTime 4 ;
    setAttr "SSK_AR.rotateY" 67;
    channelBoxCommand -key;
    setKeyframe "SSK_AR.ry";
    
    currentTime 5 ;
    setAttr "SSK_AR.rotateY" 90;
    channelBoxCommand -key;
    setKeyframe "SSK_AR.ry";
  
    currentTime 6 ;
    setAttr "SSK_AR.rotateY" 112;
    channelBoxCommand -key;
    setKeyframe "SSK_AR.ry";
  
    currentTime 7 ;
   setAttr "SSK_AR.rotateY" 135;
    channelBoxCommand -key;
    setKeyframe "SSK_AR.ry";
    
    currentTime 8 ;
    setAttr "SSK_AR.rotateY" 157;
    channelBoxCommand -key;
    setKeyframe "SSK_AR.ry";
    
     currentTime 9 ;
    setAttr "SSK_AR.rotateY" 180;
    channelBoxCommand -key;
    setKeyframe "SSK_AR.ry";
  
    currentTime 10 ;
    setAttr "SSK_AR.rotateY" 202;
    channelBoxCommand -key;
    setKeyframe "SSK_AR.ry";
  
    currentTime 11 ;
    setAttr "SSK_AR.rotateY" 225;
    channelBoxCommand -key;
    setKeyframe "SSK_AR.ry";
    
    currentTime 12 ;
    setAttr "SSK_AR.rotateY" 247;
    channelBoxCommand -key;
    setKeyframe "SSK_AR.ry";
    
    currentTime 13 ;
    setAttr "SSK_AR.rotateY" 270;
    channelBoxCommand -key;
    setKeyframe "SSK_AR.ry";
  
    currentTime 14 ;
    setAttr "SSK_AR.rotateY" 292;
    channelBoxCommand -key;
    setKeyframe "SSK_AR.ry";
  
    currentTime 15 ;
    setAttr "SSK_AR.rotateY" 315;
    channelBoxCommand -key;
    setKeyframe "SSK_AR.ry";
    
    currentTime 16 ;
    setAttr "SSK_AR.rotateY" 327;
    channelBoxCommand -key;
    setKeyframe "SSK_AR.ry";
    currentTime 1 ;
    } 
    
    
    ////////////////////////////////////////////////////////
    print "LocatorTool Set to 16Frames ";
    inViewMessage -amg ("<span style=\"color:#82C99A;\">Info:</span> LocatorTool Set to 16Frames 360") -dragKill -pos midCenterTop ;

}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////
global proc zeroR()
{

currentTime 1 ;

 if ( `objExists "IBL_MR"` )      
    { 
    
    currentTime 1 ;
        CBdeleteConnection "IBL_MR.ry";
}


if ( `objExists "IBL_VR"` )      
  { 
         currentTime 1 ;
        CBdeleteConnection "IBL_VR_EnvTex.hr";
}


 if ( `objExists "IBL_AR"` )      
    {  
     currentTime 1 ;
        CBdeleteConnection "IBL_AR.ry";
}


 if ( `objExists "sunDirection"` )      
    {  
    currentTime 1 ;
        CBdeleteConnection "sunDirection.ry";      
}


 if ( `objExists "SSK_VR"` )      
    {  
      currentTime 1 ;
   CBdeleteConnection "|SSK_VR.ry";
}

 if ( `objExists "SSK_AR"` )      
    { 
        currentTime 1 ;
   CBdeleteConnection "SSK_AR.ry";
    }   

print "IBL & Sun&Sky No Animation Rotation ";
inViewMessage -amg ("<span style=\"color:#82C99A;\">Info:</span> IBL & Sun&Sky No Animation Rotation") -dragKill -pos midCenterTop ;

}
////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////
global proc yellow()
{
   
    

   if ( getAttr("defaultRenderGlobals.currentRenderer") == "mentalRay" )   
    {
       setAttr "mentalrayGlobals.optimizeAnimateDetection" 0; 
    }
      if (`getAttr defaultRenderGlobals.endFrame` == 4)
       {
currentTime 1 ;
renderWindowRenderCamera render renderView IBL_RENDERShape;
renderWindowMenuCommand keepImageInRenderView renderView;
mrEnableRenderPassMenuOfRenderView;

currentTime 2 ;
renderWindowRenderCamera render renderView IBL_RENDERShape;
renderWindowMenuCommand keepImageInRenderView renderView;
mrEnableRenderPassMenuOfRenderView;

currentTime 3 ;
renderWindowRenderCamera render renderView IBL_RENDERShape;
renderWindowMenuCommand keepImageInRenderView renderView;
mrEnableRenderPassMenuOfRenderView;

currentTime 4 ;
renderWindowRenderCamera render renderView IBL_RENDERShape;
renderWindowMenuCommand keepImageInRenderView renderView;
mrEnableRenderPassMenuOfRenderView;

print"Render_4Pics";
inViewMessage -amg ("<span style=\"color:#82C99A;\">Info:</span> 4Pics 360 Rendered") -dragKill -pos midCenterTop ;
}
      if (`getAttr defaultRenderGlobals.endFrame` == 8)
       {
currentTime 1 ;
renderWindowRenderCamera render renderView IBL_RENDERShape;
renderWindowMenuCommand keepImageInRenderView renderView;
mrEnableRenderPassMenuOfRenderView;


currentTime 2 ;
renderWindowRenderCamera render renderView IBL_RENDERShape;
renderWindowMenuCommand keepImageInRenderView renderView;
mrEnableRenderPassMenuOfRenderView;

currentTime 3 ;
renderWindowRenderCamera render renderView IBL_RENDERShape;
renderWindowMenuCommand keepImageInRenderView renderView;
mrEnableRenderPassMenuOfRenderView;

currentTime 4 ;
renderWindowRenderCamera render renderView IBL_RENDERShape;
renderWindowMenuCommand keepImageInRenderView renderView;
mrEnableRenderPassMenuOfRenderView;

currentTime 5 ;
renderWindowRenderCamera render renderView IBL_RENDERShape;
renderWindowMenuCommand keepImageInRenderView renderView;
mrEnableRenderPassMenuOfRenderView;

currentTime 6 ;
renderWindowRenderCamera render renderView IBL_RENDERShape;
renderWindowMenuCommand keepImageInRenderView renderView;
mrEnableRenderPassMenuOfRenderView;

currentTime 7 ;
renderWindowRenderCamera render renderView IBL_RENDERShape;
renderWindowMenuCommand keepImageInRenderView renderView;
mrEnableRenderPassMenuOfRenderView;

currentTime 8 ;
renderWindowRenderCamera render renderView IBL_RENDERShape;
renderWindowMenuCommand keepImageInRenderView renderView;
mrEnableRenderPassMenuOfRenderView;

print "Render_8Pics";
inViewMessage -amg ("<span style=\"color:#82C99A;\">Info:</span> 8Pics 360 Rendered") -dragKill -pos midCenterTop ;
}
      if (`getAttr defaultRenderGlobals.endFrame` == 16)
       {
currentTime 1 ;
renderWindowRenderCamera render renderView IBL_RENDERShape;
renderWindowMenuCommand keepImageInRenderView renderView;
mrEnableRenderPassMenuOfRenderView;

currentTime 2 ;
renderWindowRenderCamera render renderView IBL_RENDERShape;
renderWindowMenuCommand keepImageInRenderView renderView;
mrEnableRenderPassMenuOfRenderView;

currentTime 3 ;
renderWindowRenderCamera render renderView IBL_RENDERShape;
renderWindowMenuCommand keepImageInRenderView renderView;
mrEnableRenderPassMenuOfRenderView;

currentTime 4 ;
renderWindowRenderCamera render renderView IBL_RENDERShape;
renderWindowMenuCommand keepImageInRenderView renderView;
mrEnableRenderPassMenuOfRenderView;

currentTime 5 ;
renderWindowRenderCamera render renderView IBL_RENDERShape;
renderWindowMenuCommand keepImageInRenderView renderView;
mrEnableRenderPassMenuOfRenderView;

currentTime 6 ;
renderWindowRenderCamera render renderView IBL_RENDERShape;
renderWindowMenuCommand keepImageInRenderView renderView;
mrEnableRenderPassMenuOfRenderView;

currentTime 7 ;
renderWindowRenderCamera render renderView IBL_RENDERShape;
renderWindowMenuCommand keepImageInRenderView renderView;
mrEnableRenderPassMenuOfRenderView;

currentTime 8 ;
renderWindowRenderCamera render renderView IBL_RENDERShape;
renderWindowMenuCommand keepImageInRenderView renderView;
mrEnableRenderPassMenuOfRenderView;

currentTime 9 ;
renderWindowRenderCamera render renderView IBL_RENDERShape;
renderWindowMenuCommand keepImageInRenderView renderView;
mrEnableRenderPassMenuOfRenderView;

currentTime 10 ;
renderWindowRenderCamera render renderView IBL_RENDERShape;
renderWindowMenuCommand keepImageInRenderView renderView;
mrEnableRenderPassMenuOfRenderView;

currentTime 11 ;
renderWindowRenderCamera render renderView IBL_RENDERShape;
renderWindowMenuCommand keepImageInRenderView renderView;
mrEnableRenderPassMenuOfRenderView;

currentTime 12 ;
renderWindowRenderCamera render renderView IBL_RENDERShape;
renderWindowMenuCommand keepImageInRenderView renderView;
mrEnableRenderPassMenuOfRenderView;

currentTime 13 ;
renderWindowRenderCamera render renderView IBL_RENDERShape;
renderWindowMenuCommand keepImageInRenderView renderView;
mrEnableRenderPassMenuOfRenderView;

currentTime 14 ;
renderWindowRenderCamera render renderView IBL_RENDERShape;
renderWindowMenuCommand keepImageInRenderView renderView;
mrEnableRenderPassMenuOfRenderView;

currentTime 15 ;
renderWindowRenderCamera render renderView IBL_RENDERShape;
renderWindowMenuCommand keepImageInRenderView renderView;
mrEnableRenderPassMenuOfRenderView;

currentTime 16 ;
renderWindowRenderCamera render renderView IBL_RENDERShape;
renderWindowMenuCommand keepImageInRenderView renderView;
mrEnableRenderPassMenuOfRenderView;

print "Render_16Pics";
inViewMessage -amg ("<span style=\"color:#82C99A;\">Info:</span> 16Pics 360 Rendered") -dragKill -pos midCenterTop ;
 }
}





////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////

global proc Reload()
{
updatePluginDirectories;  
 print "PluginTool ReLoaded"; 
     inViewMessage -amg ("<span style=\"color:#82C99A;\">Info:</span> PluginTool ReLoaded") -dragKill -pos midCenterTop ;

}
                       if ( `objExists "Locator_Tool"` )
    {
        currentTime 1 ;
        CBdeleteConnection "Locator_Tool.ry";
    }else{   
           spaceLocator -p 0 0 0;
     rename "Locator_Tool";  
     
          } 
          
    ///////////////////////////////////////////////////////////

  
  ///////////////////////////////////////////////////////////
 //////////////////////////////////////////////////////////  
  polyCube -w 1 -h 1 -d 1 -sx 1 -sy 1 -sz 1 -ax 0 1 0 -cuv 4 -ch 1;
rename "cycloClassic";

select -r cycloClassic.f[4] ;
select -tgl cycloClassic.f[1] ;
select -tgl cycloClassic.f[0] ;
select -tgl cycloClassic.f[5] ;

doDelete;

select -r cycloClassic.e[2] ;
polyBevel -offset 0.5 -offsetAsFraction 1 -autoFit 1 -segments 1 -worldSpace 1 -uvAssignment 0 -fillNgons 1 -mergeVertices 1 -mergeVertexTolerance 0.0001 -smoothingAngle 30 -miteringAngle 180 -angleTolerance 180 -ch 1 cycloClassic.e[2];
setAttr "polyBevel1.segments" 8;
setAttr "polyBevel1.offset" 0.398;

select -r cycloClassic.f[11] ;
select -tgl cycloClassic.f[10] ;

doDelete;


select -r cycloClassic ;
ReversePolygonNormals;


select -r cycloClassic ;
setAttr "cycloClassic.scaleX" 2;
FreezeTransformations;

setAttr "cycloClassic.scaleZ" 10;
setAttr "cycloClassic.scaleX" 10;
setAttr "cycloClassic.scaleY" 10;

FreezeTransformations;

move -rpr -z -5 ;
move -rpr -y 5 ;
scale -ws -r 1.2 1 1 ;
FreezeTransformations;

select -r cycloClassic.e[0] ;
polyExtrudeEdge -constructionHistory 1 -keepFacesTogether 1 -pvx 0 -pvy 0 -pvz 0 -divisions 1 -twist 0 -taper 1 -offset 0 -thickness 0 -smoothingAngle 30 cycloClassic.e[0];

setAttr "polyExtrudeEdge1.localTranslateY" -12;

select -r cycloClassic.e[1] ;
polyExtrudeEdge -constructionHistory 1 -keepFacesTogether 1 -pvx 0 -pvy 10 -pvz -10 -divisions 1 -twist 0 -taper 1 -offset 0 -thickness 0 -smoothingAngle 30 cycloClassic.e[1];
setAttr "polyExtrudeEdge2.localTranslate" -type double3 0 5.665549 0 ;


select -r cycloClassic ;
polySmooth  -mth 0 -dv 2 -bnr 0 -c 1 -kb 1 -ksb 1 -khe 0 -kt 1 -kmb 0 -suv 1 -peh 0 -sl 1 -dpe 2 -ps 0.1 -ro 1 -ch 1 cycloClassic;



select -r cycloClassic ;
DeleteHistory;
select -cl;


select -r cycloClassic.e[288] ;
select -tgl cycloClassic.e[285] ;
select -tgl cycloClassic.e[304] ;
select -tgl cycloClassic.e[301] ;
select -tgl cycloClassic.e[320] ;
select -tgl cycloClassic.e[317] ;
select -tgl cycloClassic.e[336] ;
select -tgl cycloClassic.e[333] ;
select -tgl cycloClassic.e[352] ;
select -tgl cycloClassic.e[349] ;
select -tgl cycloClassic.e[368] ;
select -tgl cycloClassic.e[365] ;
select -tgl cycloClassic.e[384] ;
select -tgl cycloClassic.e[381] ;
select -tgl cycloClassic.e[400] ;
select -tgl cycloClassic.e[397] ;
select -r cycloClassic.e[277] cycloClassic.e[279:280] cycloClassic.e[282] cycloClassic.e[285] cycloClassic.e[287:288] cycloClassic.e[290] cycloClassic.e[293] cycloClassic.e[295:296] cycloClassic.e[298] cycloClassic.e[301] cycloClassic.e[303:304] cycloClassic.e[306] cycloClassic.e[309] cycloClassic.e[311:312] cycloClassic.e[314] cycloClassic.e[317] cycloClassic.e[319:320] cycloClassic.e[322] cycloClassic.e[325] cycloClassic.e[327:328] cycloClassic.e[330] cycloClassic.e[333] cycloClassic.e[335:336] cycloClassic.e[338] cycloClassic.e[341] cycloClassic.e[343:344] cycloClassic.e[346] cycloClassic.e[349] cycloClassic.e[351:352] cycloClassic.e[354] cycloClassic.e[357] cycloClassic.e[359:360] cycloClassic.e[362] cycloClassic.e[365] cycloClassic.e[367:368] cycloClassic.e[370] cycloClassic.e[373] cycloClassic.e[375:376] cycloClassic.e[378] cycloClassic.e[381] cycloClassic.e[383:384] cycloClassic.e[386] cycloClassic.e[389] cycloClassic.e[391:392] cycloClassic.e[394] cycloClassic.e[397] cycloClassic.e[399:400] cycloClassic.e[402] ;
polyDelEdge -cv true -ch 1 cycloClassic.e[277] cycloClassic.e[279:280] cycloClassic.e[282] cycloClassic.e[285] cycloClassic.e[287:288] cycloClassic.e[290] cycloClassic.e[293] cycloClassic.e[295:296] cycloClassic.e[298] cycloClassic.e[301] cycloClassic.e[303:304] cycloClassic.e[306] cycloClassic.e[309] cycloClassic.e[311:312] cycloClassic.e[314] cycloClassic.e[317] cycloClassic.e[319:320] cycloClassic.e[322] cycloClassic.e[325] cycloClassic.e[327:328] cycloClassic.e[330] cycloClassic.e[333] cycloClassic.e[335:336] cycloClassic.e[338] cycloClassic.e[341] cycloClassic.e[343:344] cycloClassic.e[346] cycloClassic.e[349] cycloClassic.e[351:352] cycloClassic.e[354] cycloClassic.e[357] cycloClassic.e[359:360] cycloClassic.e[362] cycloClassic.e[365] cycloClassic.e[367:368] cycloClassic.e[370] cycloClassic.e[373] cycloClassic.e[375:376] cycloClassic.e[378] cycloClassic.e[381] cycloClassic.e[383:384] cycloClassic.e[386] cycloClassic.e[389] cycloClassic.e[391:392] cycloClassic.e[394] cycloClassic.e[397] cycloClassic.e[399:400] cycloClassic.e[402];


select -r cycloClassic.e[137] ;
select -add cycloClassic.e[133:134] cycloClassic.e[136:137] ;
select -r cycloClassic.e[24] ;
select -add cycloClassic.e[24:27] ;
select -tgl cycloClassic.e[34] ;
select -add cycloClassic.e[34:37] ;
select -tgl cycloClassic.e[42] ;
select -add cycloClassic.e[42:45] ;
select -tgl cycloClassic.e[50] ;
select -add cycloClassic.e[50:53] ;
select -tgl cycloClassic.e[58] ;
select -add cycloClassic.e[58:61] ;
select -tgl cycloClassic.e[66] ;
select -add cycloClassic.e[66:69] ;
select -tgl cycloClassic.e[74] ;
select -add cycloClassic.e[74:77] ;
select -tgl cycloClassic.e[82] ;
select -add cycloClassic.e[82:85] ;
select -tgl cycloClassic.e[31] ;
select -add cycloClassic.e[28:31] ;
polyDelEdge -cv true -ch 1 cycloClassic.e[24:31] cycloClassic.e[34:37] cycloClassic.e[42:45] cycloClassic.e[50:53] cycloClassic.e[58:61] cycloClassic.e[66:69] cycloClassic.e[74:77] cycloClassic.e[82:85];

select -r cycloClassic.e[82] ;
select -add cycloClassic.e[82:85] ;
select -tgl cycloClassic.e[92] ;
select -add cycloClassic.e[92:95] ;
select -tgl cycloClassic.e[102] ;
select -add cycloClassic.e[102:105] ;
select -tgl cycloClassic.e[112] ;
select -add cycloClassic.e[112:113] cycloClassic.e[115:116] ;
polyDelEdge -cv true -ch 1 cycloClassic.e[82:85] cycloClassic.e[92:95] cycloClassic.e[102:105] cycloClassic.e[112:113] cycloClassic.e[115:116];



setAttr "cycloClassicShape.castsShadows" 0;
setAttr "cycloClassicShape.doubleSided" 0;
move 0 0 0 cycloClassic.scalePivot cycloClassic.rotatePivot ;
SnapToGrid; dR_enterForSnap;
setAttr "cycloClassic.scaleZ" 5;
setAttr "cycloClassic.scaleX" 5;
setAttr "cycloClassic.scaleY" 5;
FreezeTransformations;
select -r cycloClassic ;
DeleteHistory;
FreezeTransformations;
 select -r cycloClassic ;
      HideSelectedObjects;
      select -cl;

select -cl;
 //////////////////////////////////////////////////////////  
  polyCube -w 24 -h 24 -d 24 -sx 5 -sy 5 -sz 5 -ax 0 1 0 -cuv 4 -ch 1;

move -rpr -y 12 ;

rename "cycloSquare";



polySmooth  -mth 0 -dv 2 -bnr 0 -c 1 -kb 1 -ksb 1 -khe 0 -kt 1 -kmb 0 -suv 1 -peh 0 -sl 1 -dpe 2 -ps 0.1 -ro 1 -ch 1 cycloSquare;
select -cl  ;
select -r cycloSquare ;
displaySmoothness -divisionsU 3 -divisionsV 3 -pointsWire 16 -pointsShaded 4 -polygonObject 3;
select -cl  ;


setAttr "cycloSquareShape.doubleSided" 0;
setAttr "cycloSquareShape.castsShadows" 0;

select -r cycloSquare ;
polyNormal -normalMode 0 -userNormalMode 0 -ch 1 cycloSquare;

select -r cycloSquare ;
DeleteHistory;
delete -ch;
setAttr "cycloSquare.scaleZ" 1.2;
setAttr "cycloSquare.scaleX" 1.2;
setAttr "cycloSquareShape.visibleInReflections" 0;
setAttr "cycloSquareShape.visibleInRefractions" 0;
FreezeTransformations;
performFreezeTransformations(0);
makeIdentity -apply true -t 1 -r 1 -s 1 -n 0 -pn 1;
move 0 0 0 cycloSquare.scalePivot cycloSquare.rotatePivot ;
SnapToGrid; dR_enterForSnap;
setAttr "cycloSquare.scaleZ" 3.6;
setAttr "cycloSquare.scaleX" 3.6;
setAttr "cycloSquare.scaleY" 3.6;
FreezeTransformations;
performFreezeTransformations(0);
makeIdentity -apply true -t 1 -r 1 -s 1 -n 0 -pn 1;
 select -r cycloSquare ;
      HideSelectedObjects;
      select -cl;

////////////////////////////////////////////////////////////////////

polyCylinder -r 1 -h 2 -sx 20 -sy 1 -sz 1 -ax 0 1 0 -rcp 0 -cuv 3 -ch 1;
setAttr "pCylinder1.scaleZ" 15;
setAttr "pCylinder1.scaleX" 15;
setAttr "pCylinder1.scaleY" 15;
setAttr "pCylinder1.translateY" 15;
setAttr "polyCylinder1.subdivisionsHeight" 10;
setAttr "polyCylinder1.subdivisionsCaps" 3;
setAttr "polyCylinder1.subdivisionsAxis" 40;
polySmooth  -mth 0 -dv 2 -bnr 0 -c 1 -kb 1 -ksb 1 -khe 0 -kt 1 -kmb 0 -suv 1 -peh 0 -sl 1 -dpe 2 -ps 0.1 -ro 1 -ch 1 pCylinder1;
displaySmoothness -divisionsU 3 -divisionsV 3 -pointsWire 16 -pointsShaded 4 -polygonObject 3;
   
select -r pCylinder1 ;
polyNormal -normalMode 0 -userNormalMode 0 -ch 1 pCylinder1;
select -r pCylinder1 ;

move 0 0 0 pCylinder1.scalePivot pCylinder1.rotatePivot ;
SnapToGrid; dR_enterForSnap;
setAttr "pCylinder1.scaleZ" 50;
setAttr "pCylinder1.scaleX" 50;
setAttr "pCylinder1.scaleY" 50;


FreezeTransformations;
performFreezeTransformations(0);
makeIdentity -apply true -t 1 -r 1 -s 1 -n 0 -pn 1;
select -r pCylinder1 ;
rename "cycloCylinder";
DeleteHistory;

setAttr "cycloCylinderShape.castsShadows" 0;
setAttr "cycloCylinderShape.visibleInReflections" 0;
setAttr "cycloCylinderShape.visibleInRefractions" 0;
setAttr "cycloCylinderShape.doubleSided" 0;


select -r cycloCylinder ;
 HideSelectedObjects;
      select -cl;
 //////////////////////////////////////////////////////////  
  select -cl;
  select -r cycloSquare ;
select -add cycloClassic ;
select -add cycloCylinder ;


 createDisplayLayer -name "CYCLO" -number 1 -nr;
    setAttr CYCLO.visibility 1; setAttr CYCLO.displayType 2; setAttr CYCLO.color 0; 
 //////////////////////////////////////////////////////////  
 //////////////////////////////////////////////////////////  
 //////////////////////////////////////////////////////////        
 global proc CycloCOn()  
  { 
   select -r cycloClassic ;
      ShowSelectedObjects;
      select -cl;
      print "Cyclo Visible";
      select -r cycloSquare ;
    select -add cycloCylinder ;


      HideSelectedObjects;
      select -cl;
      checkBox -e -v 0 CycloB; 
      checkBox -e -v 0 CycloCy;    

                 inViewMessage -amg ("<span style=\"color:#82C99A;\">Info:</span> CycloClassic Visible") -dragKill -pos midCenterTop ;

  }
   global proc CycloCOff()  
  { 
   select -r cycloClassic ;
      HideSelectedObjects;
      select -cl;
      print "Cyclo Hided";
                       inViewMessage -amg ("<span style=\"color:#82C99A;\">Info:</span> CycloClassic Hided") -dragKill -pos midCenterTop ;

  }
  
   //////////////////////////////////////////////////////////        
 global proc CycloCyOn()  
  { 
   select -r cycloCylinder ;
      ShowSelectedObjects;
      select -cl;
      print "Cyclo Visible";
      select -r cycloSquare ;
      select -add cycloClassic ;

      HideSelectedObjects;
      select -cl;
      checkBox -e -v 0 CycloB; 
      checkBox -e -v 0 CycloC;
     inViewMessage -amg ("<span style=\"color:#82C99A;\">Info:</span> CycloClassic Visible") -dragKill -pos midCenterTop ;

  }
   global proc CycloCyOff()  
  { 
   select -r cycloCylinder ;
      HideSelectedObjects;
      select -cl;
      print "Cyclo Hided";
                       inViewMessage -amg ("<span style=\"color:#82C99A;\">Info:</span> CycloClassic Hided") -dragKill -pos midCenterTop ;

  }
  
  
  //////////////////////////////////////////////////////////        
 global proc CycloBOn()  
  { 
   select -r cycloSquare ;
      ShowSelectedObjects;
      select -cl;
      select -r cycloClassic ;
         select -add cycloCylinder ;

      HideSelectedObjects;
      select -cl;
      print "Cyclo Visible";
      checkBox -e -v 0 CycloC;
      checkBox -e -v 0 CycloCy; 
                       inViewMessage -amg ("<span style=\"color:#82C99A;\">Info:</span> CycloBox Visible") -dragKill -pos midCenterTop ;

  }
   global proc CycloBOff()  
  { 
   select -r cycloSquare ;
      HideSelectedObjects;
      select -cl;
      print "Cyclo Hided";
                             inViewMessage -amg ("<span style=\"color:#82C99A;\">Info:</span> CycloBox Hided") -dragKill -pos midCenterTop ;

  }

  //////////////////////////////////////////////////////////
      global proc SphOn()  
  { 
    select -r SphereGrp ;
      HideSelectedObjects;
      select -cl;
      print "Spheres Hided";
inViewMessage -amg ("<span style=\"color:#82C99A;\">Info:</span> Spheres Hided") -dragKill -pos midCenterTop ;

  }
   global proc SphOff()  
  { 
    select -r SphereGrp ;
      ShowSelectedObjects;
      select -cl;
      print "Spheres Visible";
inViewMessage -amg ("<span style=\"color:#82C99A;\">Info:</span> Spheres Visible") -dragKill -pos midCenterTop ;

  }
     
     
     global proc SwOn()
     {
CBdeleteConnection "locatorSphere.tx";
CBdeleteConnection "locatorSphere.ty";
CBdeleteConnection "locatorSphere.tz";         
CBdeleteConnection "locatorSphere.rx";
CBdeleteConnection "locatorSphere.ry";
CBdeleteConnection "locatorSphere.rz";
CBdeleteConnection "locatorSphere.sx";
CBdeleteConnection "locatorSphere.sy";
CBdeleteConnection "locatorSphere.sz";

select -r locatorSphere;
 parent -world; 
 
select -r locatorSphere_orientConstraint1 ; 
doDelete;

setAttr "locatorSphere.translateX" 2;
setAttr "locatorSphere.translateY" 0;
setAttr "locatorSphere.translateZ" 0;
setAttr "locatorSphere.rotateX" 0;
setAttr "locatorSphere.rotateY" 0;
setAttr "locatorSphere.rotateZ" 0;
setAttr "locatorSphere.scaleZ" 1;
setAttr "locatorSphere.scaleX" 1;
setAttr "locatorSphere.scaleY" 1;
select -cl  ;
select -r locatorSphere ;
setAttr "locatorSphereShape.visibility" 1;
TranslateToolWithSnapMarkingMenu;
MarkingMenuPopDown;
print "Sphere Free to Translate/Rotate/Scale";
inViewMessage -amg ("<span style=\"color:#82C99A;\">Info:</span> Spheres Free from Camera") -dragKill -pos midCenterTop ;
inViewMessage -amg ("<span style=\"color:#F4FA58;\">InfoBis:</span> You Can Move it with the CTRL where you Want.") -dragKill -pos midCenter ;


     }
     
     
      global proc SwOff()
     {
select -r locatorCam ;
select -tgl  locatorSphere ;
performOrientConstraint 0;
select -cl;
select -r locatorCam ;
select -add locatorSphere ;
PointConstraint;
performPointConstraint 0;
doCreatePointConstraintArgList 1 { "0","0","0","0","0","0","0","1","","1" };
pointConstraint -offset 0 0 0 -weight 1;
select -cl;



select -r locatorSphere;
select -tgl locatorCam;
parent;

setAttr "locatorSphere.scaleZ" 1;
setAttr "locatorSphere.scaleX" 1;
setAttr "locatorSphere.scaleY" 1;
select -cl;
setAttr "locatorSphereShape.visibility" 0;
print "Spheres ReLink to Camera";
inViewMessage -amg ("<span style=\"color:#82C99A;\">Info:</span> Spheres ReLink to Camera") -dragKill -pos midCenterTop ;


     }
         
     
     
CreateLocator;
rename "locatorCam";
setAttr "locatorCam.translateX" 0.0475;
setAttr "locatorCam.translateY" -0.132;
setAttr "locatorCam.translateZ" -0.12;
setAttr "locatorCam.scaleZ" .1;
setAttr "locatorCam.scaleX" .1;
setAttr "locatorCam.scaleY" .1;

select -r locatorCam;
select -tgl IBL_RENDER;
parent;
setAttr "locatorCamShape.visibility" 0;


curve -d 3 -p 0 4 0 -p 3 4 0 -p 3 4 0 -p 0 8 0 -p 0 8 0 -p 2.993615 7.41129 0 -p 5.46677 5.828096 0 -p 5.46677 5.828096 0 -p 4.014728 4.310478 0 -p 4.014728 4.310478 0 -p 4.342608 3.982598 0 -p 4.342608 3.982598 0 -p 5.850858 5.462744 0 -p 5.850858 5.462744 0 -p 7.471525 2.989588 0 -p 8 0 0 -p 8 0 0 -p 4 3 0 -p 4 3 0 -p 4 0 0 -p 4 -3 0 -p 4 -3 0 -p 8 0 0 -p 8 0 0 -p 7.455846 -2.995142 0 -p 5.8222 -5.48378 0 -p 5.8222 -5.48378 0 -p 4.310696 -4.018079 0 -p 4.310696 -4.018079 0 -p 4.005342 -4.292898 0 -p 4.005342 -4.292898 0 -p 5.516846 -5.850205 0 -p 5.516846 -5.850205 0 -p 3.01294 -7.483851 0 -p 0 -8 0 -p 0 -8 0 -p 3 -4 0 -p 3 -4 0 -p 0 -4 0 -p -3 -4 0 -p -3 -4 0 -p 0 -8 0 -p 0 -8 0 -p -2.987273 -7.499119 0 -p -5.475911 -5.804402 0 -p -5.475911 -5.81967 0 -p -3.949139 -4.323434 0 -p -3.949139 -4.323434 0 -p -4.300297 -4.048615 0 -p -4.300297 -4.048615 0 -p -5.811801 -5.529583 0 -p -5.811801 -5.529583 0 -p -7.445446 -3.040945 0 -p -8 0 0 -p -8 0 0 -p -4 -3 0 -p -4 -3 0 -p -4 0 0 -p -4 3 0 -p -4 3 0 -p -8 0 0 -p -8 0 0 -p -7.414911 2.974535 0 -p -5.781265 5.478441 0 -p -5.781265 5.478441 0 -p -4.285029 3.982205 0 -p -4.285029 3.982205 0 -p -3.994942 4.287559 0 -p -3.994942 4.287559 0 -p -5.445375 5.829599 0 -p -5.445375 5.829599 0 -p -2.987273 7.447977 0 -p 0 8 0 -p 0 8 0 -p -3 4 0 -p -3 4 0 -p 0 4 0 -k 0 -k 0 -k 0 -k 2.666667 -k 4.333333 -k 7.016984 -k 9.0128 -k 11.008615 -k 12.687573 -k 13.387699 -k 14.24239 -k 14.396954 -k 15.255921 -k 15.960324 -k 17.650349 -k 19.64795 -k 21.645552 -k 24.324198 -k 25.990865 -k 28.657531 -k 30.657531 -k 32.657531 -k 35.324198 -k 36.990865 -k 39.672255 -k 41.679289 -k 43.686324 -k 45.380451 -k 46.082268 -k 46.921022 -k 47.05796 -k 47.918303 -k 48.64171 -k 50.361685 -k 52.377197 -k 54.39271 -k 57.07832 -k 58.744987 -k 61.411653 -k 63.411653 -k 65.411653 -k 68.07832 -k 69.744987 -k 72.421311 -k 74.434595 -k 76.452968 -k 78.174249 -k 78.891905 -k 79.753108 -k 79.901745 -k 80.755752 -k 81.461121 -k 83.158801 -k 85.181476 -k 87.204152 -k 89.901184 -k 91.567851 -k 94.234518 -k 96.234518 -k 98.234518 -k 100.901184 -k 102.567851 -k 105.245029 -k 107.252108 -k 109.259188 -k 110.961089 -k 111.666422 -k 112.512147 -k 112.65254 -k 113.498596 -k 114.204259 -k 115.890931 -k 117.884557 -k 119.878183 -k 122.557466 -k 124.224133 -k 126.8908 -k 126.8908 -k 126.8908 ;

rename "locatorSphere";
rotate -r -ws -90 0 0 ;

setAttr "locatorSphere.scaleZ" .05;
setAttr "locatorSphere.scaleX" .05;
setAttr "locatorSphere.scaleY" .05;

makeIdentity -apply true -t 1 -r 1 -s 1 -n 0 -pn 1;
move -rpr 0.0475 -0.132 -0.12 ;
setAttr "locatorSphere.scaleZ" .1;
setAttr "locatorSphere.scaleX" .1;
setAttr "locatorSphere.scaleY" .1;

select -r locatorSphere;
select -tgl IBL_RENDER;
parent;

select -r SphereGrp;
select -tgl locatorSphere;
parent;

select -r locatorSphere;
select -tgl locatorCam;
parent;

select -r locatorCam ;
select -tgl  locatorSphere ;
performOrientConstraint 0;
select -cl;



select -cl;
    setAttr "GlassSphere.scaleZ" 1.8;
    setAttr "GlassSphere.scaleX" 1.8;
    setAttr "GlassSphere.scaleY" 1.8;
    setAttr "MatteSphere.scaleZ" 1.8;
    setAttr "MatteSphere.scaleX" 1.8;
    setAttr "MatteSphere.scaleY" 1.8;
    setAttr "ChromeSphere.scaleZ" 1.8;
    setAttr "ChromeSphere.scaleX" 1.8;
    setAttr "ChromeSphere.scaleY" 1.8;
    setAttr "MetalSphere.scaleZ" 1.8;
    setAttr "MetalSphere.scaleX" 1.8;
    setAttr "MetalSphere.scaleY" 1.8;
 
    setAttr "locatorCam.translateX" 0.048;
      setAttr "locatorCam.translateY" -0.037;
        setAttr "locatorCam.translateZ" -0.12;
    setAttr "locatorCam.scaleZ" 0.04;
    setAttr "locatorCam.scaleX" 0.04;
    setAttr "locatorCam.scaleY" 0.04;
    select -cl  ;     
     
global proc  MxOff()   
{{
  if (`getAttr SphereGrp.scaleX` == 10)
              {
            
                print "Your Sphere Are Already Maximized";
             inViewMessage -amg ("<span style=\"color:#82C99A;\">Info:</span> Your Sphere Are Already Maximized") -dragKill -pos midCenterTop ;

              }                       
/////////////////////////////////////////////////////////////////////////////              
               if (`getAttr SphereGrp.scaleX` == 5)
                {  
                  if (`getAttr SphereGrp.translateY` == 1.711)
                   {  
                     if (`getAttr SphereGrp.rotateZ` == 0)
                      {  
                      if (`getAttr locatorCam.translateX` == 0.048)
                       { 
                setAttr "SphereGrp.translateX" -0.482;
setAttr "SphereGrp.translateY" 1.327;
setAttr "SphereGrp.translateZ" 1.2;
setAttr "SphereGrp.scaleX" 10;
setAttr "SphereGrp.scaleY" 10;
setAttr "SphereGrp.scaleZ" 10;

                       }
                     }
                   }
                }    
/////////////////////////////////////////////////////////////////////////////               
               if (`getAttr SphereGrp.scaleX` == 5)
                {  
                  if (`getAttr SphereGrp.translateY` == 0.938)
                   {  
                     if (`getAttr SphereGrp.rotateZ` == 0)
                      {  
                       if (`getAttr locatorCam.translateX` == 0.048)
                       { 
              setAttr "SphereGrp.translateX" -0.482;
setAttr "SphereGrp.translateY" 1.327;
setAttr "SphereGrp.translateZ" 1.2;
setAttr "SphereGrp.scaleX" 10;
setAttr "SphereGrp.scaleY" 10;
setAttr "SphereGrp.scaleZ" 10;

                       }
                     }
                   }
                }                  
/////////////////////////////////////////////////////////////////////////////                
           if (`getAttr SphereGrp.scaleX` == 5)
                {  
                  if (`getAttr SphereGrp.translateY` == 2.013)
                   {  
                     if (`getAttr SphereGrp.rotateZ` == 90)
                      {  
                       if (`getAttr locatorCam.translateX` == 0.048)
                       { 
                setAttr "SphereGrp.translateX" -0.482;
setAttr "SphereGrp.translateY" 1.327;
setAttr "SphereGrp.translateZ" 1.2;
setAttr "SphereGrp.scaleX" 10;
setAttr "SphereGrp.scaleY" 10;
setAttr "SphereGrp.scaleZ" 10;
setAttr "SphereGrp.rotateZ" 0;
                
                        }
                     }
                   }
                }      
/////////////////////////////////////////////////////////////////////////////               
               if (`getAttr SphereGrp.scaleX` == 5)
                {  
                  if (`getAttr SphereGrp.translateY` == 0.639)
                   {  
                     if (`getAttr SphereGrp.rotateZ` == 90)
                      {  
                       if (`getAttr locatorCam.translateX` == 0.048)
                       { 
                       setAttr "SphereGrp.rotateZ" 0;
                setAttr "SphereGrp.translateX" -0.482;
setAttr "SphereGrp.translateY" 1.327;
setAttr "SphereGrp.translateZ" 1.2;
setAttr "SphereGrp.scaleX" 10;
setAttr "SphereGrp.scaleY" 10;
setAttr "SphereGrp.scaleZ" 10;

                
                        }
                     }
                   }
                }     
///////////////////////////////////////////////////////////////////////////// 
/////////////////////////////////////////////////////////////////////////////              
               if (`getAttr SphereGrp.scaleX` == 5)
                {  
                  if (`getAttr SphereGrp.translateY` == 1.711)
                   {  
                     if (`getAttr SphereGrp.rotateZ` == 0)
                      {  
                      if (`getAttr locatorCam.translateX` == -0.048)
                       { 
                setAttr "SphereGrp.translateX" -0.47;
setAttr "SphereGrp.translateY" 1.327;
setAttr "SphereGrp.translateZ" 1.2;
setAttr "SphereGrp.scaleX" 10;
setAttr "SphereGrp.scaleY" 10;
setAttr "SphereGrp.scaleZ" 10;

                
                          }
                     }
                   }
                }      
/////////////////////////////////////////////////////////////////////////////               
               if (`getAttr SphereGrp.scaleX` == 5)
                {  
                  if (`getAttr SphereGrp.translateY` == 0.938)
                   {  
                     if (`getAttr SphereGrp.rotateZ` == 0)
                      {  
                       if (`getAttr locatorCam.translateX` == -0.048)
                       { 
              setAttr "SphereGrp.translateX" -0.47;
setAttr "SphereGrp.translateY" 1.327;
setAttr "SphereGrp.translateZ" 1.2;
setAttr "SphereGrp.scaleX" 10;
setAttr "SphereGrp.scaleY" 10;
setAttr "SphereGrp.scaleZ" 10;

                
                         }
                     }
                   }
                }                  
/////////////////////////////////////////////////////////////////////////////                
           if (`getAttr SphereGrp.scaleX` == 5)
                {  
                  if (`getAttr SphereGrp.translateY` == 2.013)
                   {  
                     if (`getAttr SphereGrp.rotateZ` == 90)
                      {  
                       if (`getAttr locatorCam.translateX` == -0.048)
                       { 
                setAttr "SphereGrp.translateX" -0.47;
setAttr "SphereGrp.translateY" 1.327;
setAttr "SphereGrp.translateZ" 1.2;
setAttr "SphereGrp.scaleX" 10;
setAttr "SphereGrp.scaleY" 10;
setAttr "SphereGrp.scaleZ" 10;
setAttr "SphereGrp.rotateZ" 0;
                            }
                     }
                   }
                }     
/////////////////////////////////////////////////////////////////////////////               
               if (`getAttr SphereGrp.scaleX` == 5)
                {  
                  if (`getAttr SphereGrp.translateY` == 0.637)
                   {  
                     if (`getAttr SphereGrp.rotateZ` == 90)
                      {  
                       if (`getAttr locatorCam.translateX` == -0.048)
                       { 
                setAttr "SphereGrp.translateX" -0.47;
setAttr "SphereGrp.translateY" 1.327;
setAttr "SphereGrp.translateZ" 1.2;
setAttr "SphereGrp.scaleX" 10;
setAttr "SphereGrp.scaleY" 10;
setAttr "SphereGrp.scaleZ" 10;
setAttr "SphereGrp.rotateZ" 0;
                
                         }
                     }
                   }
                }    
                RotiOff;
///////////////////////////////////////////////////////////////////////////// 
checkBox -e -v 0 RotaSphere; 
}   








print "Spheres Maximized";
inViewMessage -amg ("<span style=\"color:#82C99A;\">Info:</span> Spheres Has been Maximized.") -dragKill -pos midCenterTop ;

}
     
global proc  MnOn()   
{
    
         if (`getAttr locatorCam.translateX` == 0.048)
              {
setAttr "SphereGrp.scaleZ" 5;
setAttr "SphereGrp.scaleX" 5;
setAttr "SphereGrp.scaleY" 5;
setAttr "SphereGrp.translateX" -0.384;
setAttr "SphereGrp.translateY" 1.711;
setAttr "SphereGrp.translateZ" 1.2;
          
              }
              
                       if (`getAttr locatorCam.translateX` == -0.048)
              {
setAttr "SphereGrp.scaleZ" 5;
setAttr "SphereGrp.scaleX" 5;
setAttr "SphereGrp.scaleY" 5;
setAttr "SphereGrp.translateX" -0.566;
setAttr "SphereGrp.translateY" 1.711;
setAttr "SphereGrp.translateZ" 1.2;


          
              }




print "Spheres Minimized";
inViewMessage -amg ("<span style=\"color:#82C99A;\">Info:</span> Spheres Has been Minimized.") -dragKill -pos midCenterTop ;

}
     
     
     
 /////////////////////////////////////////////////////////////////////////////////////////////////    
         global proc RotiOn()
          {
              if (`getAttr locatorCam.translateX` == 0.048)
               {   if (`getAttr SphereGrp.translateY` == 1.711)
                    {
                    setAttr "SphereGrp.translateX" -0.688;
setAttr "SphereGrp.translateY" 2.013;
setAttr "SphereGrp.translateZ" 1.2;
setAttr "SphereGrp.rotateZ" 90;
          
              }else if (`getAttr SphereGrp.translateY` == 0.938)
                {
              setAttr "SphereGrp.translateX" -0.689;
setAttr "SphereGrp.translateY" 0.639;
setAttr "SphereGrp.translateZ" 1.2;
setAttr "SphereGrp.rotateZ" 90;
  }
}
              
                            if (`getAttr locatorCam.translateX` == -0.048)
              {   if (`getAttr SphereGrp.translateY` == 1.711)
                {
setAttr "SphereGrp.translateX" -0.264;
setAttr "SphereGrp.translateY" 2.013;
setAttr "SphereGrp.translateZ" 1.2;
setAttr "SphereGrp.rotateZ" 90;
          
              }else if (`getAttr SphereGrp.translateY` == 0.938)
                {
setAttr "SphereGrp.translateX" -0.264;
setAttr "SphereGrp.translateY" 0.637;
setAttr "SphereGrp.translateZ" 1.2;
setAttr "SphereGrp.rotateZ" 90;
  }
}
   if (`getAttr SphereGrp.scaleX` == 10)
              {   
              
             print "Please, Put Minimize Button ON for change the Height of the Sphere";
             inViewMessage -amg ("<span style=\"color:#82C99A;\">Info:</span> Please, Put Minimize Button ON for change the Height of the Sphere.") -dragKill -pos midCenterTop ;

              }
              inViewMessage -amg ("<span style=\"color:#82C99A;\">Info:</span> Sphere set Horizontaly.") -dragKill -pos midCenterTop ;

}   
   
/////////////////////////////////////////////////////////////////////////////////////////////////   
          
            global proc RotiOff()
          {
              if (`getAttr locatorCam.translateX` == 0.048)
              {   if (`getAttr SphereGrp.translateY` == 2.013)
                {
                  setAttr "SphereGrp.translateX" -0.384;
setAttr "SphereGrp.translateY" 1.711;
setAttr "SphereGrp.translateZ" 1.2;
setAttr "SphereGrp.rotateZ" 0;
          
              }else if (`getAttr SphereGrp.translateY` == 0.639)
                {
           setAttr "SphereGrp.translateX" -0.384;
setAttr "SphereGrp.translateY" 0.938;
setAttr "SphereGrp.translateZ" 1.2;
setAttr "SphereGrp.rotateZ" 0;
  }
}
              
                            if (`getAttr locatorCam.translateX` == -0.048)
              {   if (`getAttr SphereGrp.translateY` == 2.013)
                {
setAttr "SphereGrp.translateX" -0.566;
setAttr "SphereGrp.translateY" 1.711;
setAttr "SphereGrp.translateZ" 1.2;

setAttr "SphereGrp.rotateZ" 0;
          
              }else if (`getAttr SphereGrp.translateY` == 0.637)
                {
setAttr "SphereGrp.translateX" -0.566;
setAttr "SphereGrp.translateY" 0.938;
setAttr "SphereGrp.translateZ" 1.2;
setAttr "SphereGrp.rotateZ" 0;
  }
}
   if (`getAttr SphereGrp.scaleX` == 10)
              {   print "Please, Put Minimize Button ON for change the Height of the Sphere";
              }
              inViewMessage -amg ("<span style=\"color:#82C99A;\">Info:</span> Sphere set Verticaly.") -dragKill -pos midCenterTop ;

} 

/////////////////////////////////////////////////////////////////////////////////////////////////    
    /////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////    
    setAttr "SphereGrp.translateX" -0.482;
setAttr "SphereGrp.translateY" 1.327;
setAttr "SphereGrp.translateZ" 1.2;



         select -cl;
    doGroup 0 1 1;
    rename "LIGHTS_Grp";
    
    
      select -cl;
    doGroup 0 1 1;
    rename "Meshes";          
        
         select -cl;
    doGroup 0 1 1;
    rename "CycloGrp";
    
      
       select cycloSquare; 
         select -add "CycloGrp" ;
         parent;
         select -cl;    
          
    select cycloClassic; 
         select -add "CycloGrp" ;
         parent;
         select -cl;    
     
     select cycloCylinder; 
         select -add "CycloGrp" ;
         parent;
         select -cl;  
              
                setAttr "locatorSphereShape.visibility" 0;  
       setAttr "Locator_ToolShape.visibility" 0;           
                  
setAttr "IBL_RENDER.translateX" 28;
setAttr "IBL_RENDER.translateY" 21;
setAttr "IBL_RENDER.translateZ" 28;
setAttr "IBL_RENDER.rotateX" -27.9;
setAttr "IBL_RENDER.rotateY" 45;
setAttr "IBL_RENDER.rotateZ" 0;
setAttr "IBL_RENDER.scaleX" 1;
setAttr "IBL_RENDER.scaleY" 1;
setAttr "IBL_RENDER.scaleZ" 1;
select -r IBL_RENDER ;
     modelEditor -e -grid true modelPanel4;
select -cl;  

    showWindow $window;
    
    
    print "Welcome & Thank You to Use Our Tool !";
    
    inViewMessage -amg ("<span style=\"color:#82C99A;\">Info:</span> Welcome & Thank You to Use Our Tool !") -dragKill -pos midCenterTop;
    
    
